'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _Type2 = require('./Type');

var _Type3 = _interopRequireDefault(_Type2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var ArrayType = function (_Type) {
  _inherits(ArrayType, _Type);

  ArrayType.from = function from(n) {
    return n;
  };

  function ArrayType() {
    var errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Please enter a valid array';

    _classCallCheck(this, ArrayType);

    var _this = _possibleConstructorReturn(this, _Type.call(this, 'array'));

    _Type.prototype.pushCheck.call(_this, function (v) {
      return Array.isArray(v);
    }, errorMessage);
    return _this;
  }

  ArrayType.prototype.rangeLength = function rangeLength(minLength, maxLength, errorMessage) {
    _Type.prototype.pushCheck.call(this, function (value) {
      return value.length >= minLength && value.length <= maxLength;
    }, errorMessage);
    return this;
  };

  ArrayType.prototype.minLength = function minLength(_minLength, errorMessage) {
    _Type.prototype.pushCheck.call(this, function (value) {
      return value.length >= _minLength;
    }, errorMessage);
    return this;
  };

  ArrayType.prototype.maxLength = function maxLength(_maxLength, errorMessage) {
    _Type.prototype.pushCheck.call(this, function (value) {
      return value.length <= _maxLength;
    }, errorMessage);
    return this;
  };

  ArrayType.prototype.unrepeatable = function unrepeatable(errorMessage) {
    _Type.prototype.pushCheck.call(this, function (items) {
      var hash = {};
      /* eslint-disable */
      for (var i in items) {
        if (hash[items[i]]) {
          return false;
        }
        hash[items[i]] = true;
      }
      return true;
    }, errorMessage);
    return this;
  };

  /**
   * @example
   * ArrayType('这是一个数组').of(
   *      StringType().isOneOf(['数码','体育','游戏','旅途','其他'],
   *      '只能是选择中的值'
   * )
   */


  ArrayType.prototype.of = function of(type, errorMessage) {
    _Type.prototype.pushCheck.call(this, function (items) {
      var valids = items.map(function (value) {
        return type.check(value);
      });
      var errors = valids.filter(function (item) {
        return item.hasError;
      }) || [];

      if (errors.length) {
        return errors[0];
      }

      return errors.length === 0;
    }, errorMessage);

    return this;
  };

  return ArrayType;
}(_Type3.default);

exports.default = function (errorMessage) {
  return new ArrayType(errorMessage);
};