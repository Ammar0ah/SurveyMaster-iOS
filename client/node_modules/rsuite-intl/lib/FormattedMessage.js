'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FormattedMessage = function (_React$Component) {
  _inherits(FormattedMessage, _React$Component);

  function FormattedMessage() {
    _classCallCheck(this, FormattedMessage);

    return _possibleConstructorReturn(this, (FormattedMessage.__proto__ || Object.getPrototypeOf(FormattedMessage)).apply(this, arguments));
  }

  _createClass(FormattedMessage, [{
    key: 'getText',
    value: function getText() {
      var id = this.props.id;
      var locale = this.context.locale;


      if (!locale) {
        return id;
      }

      var text = locale[id];

      if (!text) {
        return id;
      }

      return text;
    }
  }, {
    key: 'render',
    value: function render() {
      var Component = this.props.componentClass;


      return _react2.default.createElement(
        Component,
        null,
        this.getText()
      );
    }
  }]);

  return FormattedMessage;
}(_react2.default.Component);

FormattedMessage.propTypes = {
  id: _propTypes2.default.string,
  componentClass: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string])
};
FormattedMessage.defaultProps = {
  componentClass: 'span'
};
FormattedMessage.contextTypes = {
  locale: _propTypes2.default.object
};
exports.default = FormattedMessage;