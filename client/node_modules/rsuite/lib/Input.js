"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _get2 = _interopRequireDefault(require("lodash/get"));

var React = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _compose = _interopRequireDefault(require("recompose/compose"));

var _utils = require("./utils");

var Input =
/*#__PURE__*/
function (_React$Component) {
  (0, _inheritsLoose2.default)(Input, _React$Component);

  function Input() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleChange", function (event) {
      var onChange = _this.props.onChange;
      var nextValue = event.target.value;
      onChange && onChange(nextValue, event);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleKeyDown", function (event) {
      var _this$props = _this.props,
          onKeyDown = _this$props.onKeyDown,
          onPressEnter = _this$props.onPressEnter;

      if (event.keyCode === 13) {
        onPressEnter && onPressEnter(event);
      }

      onKeyDown && onKeyDown(event);
    });
    return _this;
  }

  var _proto = Input.prototype;

  _proto.render = function render() {
    var controlId = (0, _get2.default)(this.context, 'formGroup.controlId');
    var _this$props2 = this.props,
        type = _this$props2.type,
        className = _this$props2.className,
        classPrefix = _this$props2.classPrefix,
        componentClass = _this$props2.componentClass,
        _this$props2$id = _this$props2.id,
        id = _this$props2$id === void 0 ? controlId : _this$props2$id,
        onFocus = _this$props2.onFocus,
        onBlur = _this$props2.onBlur,
        disabled = _this$props2.disabled,
        value = _this$props2.value,
        defaultValue = _this$props2.defaultValue,
        inputRef = _this$props2.inputRef,
        rest = (0, _objectWithoutPropertiesLoose2.default)(_this$props2, ["type", "className", "classPrefix", "componentClass", "id", "onFocus", "onBlur", "disabled", "value", "defaultValue", "inputRef"]);
    var classes = (0, _classnames.default)(classPrefix, className);
    var inputGroup = this.context.inputGroup;
    var Component = componentClass;
    var unhandled = (0, _utils.getUnhandledProps)(Input, rest);
    return React.createElement(Component, (0, _extends2.default)({}, unhandled, {
      ref: inputRef,
      type: type,
      id: id,
      value: value,
      defaultValue: defaultValue,
      disabled: disabled,
      onKeyDown: this.handleKeyDown,
      onFocus: (0, _utils.createChainedFunction)(onFocus, (0, _get2.default)(inputGroup, 'onFocus')),
      onBlur: (0, _utils.createChainedFunction)(onBlur, (0, _get2.default)(inputGroup, 'onBlur')),
      className: classes,
      onChange: this.handleChange
    }));
  };

  return Input;
}(React.Component);

(0, _defineProperty2.default)(Input, "defaultProps", {
  type: 'text'
});
(0, _defineProperty2.default)(Input, "contextTypes", {
  formGroup: _propTypes.default.object,
  inputGroup: _propTypes.default.object
});
(0, _defineProperty2.default)(Input, "handledProps", ["className", "classPrefix", "componentClass", "defaultValue", "disabled", "id", "inputRef", "onBlur", "onChange", "onFocus", "onKeyDown", "onPressEnter", "type", "value"]);

var _default = (0, _compose.default)((0, _utils.defaultProps)({
  classPrefix: 'input',
  componentClass: 'input'
}), (0, _utils.withStyleProps)({
  hasSize: true
}))(Input);

exports.default = _default;