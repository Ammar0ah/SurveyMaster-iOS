"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.resetWarned = resetWarned;
exports.default = void 0;

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _lowPriorityWarning = _interopRequireDefault(require("./lowPriorityWarning"));

/**
 * Forked from react-bootstrap/react-bootstrap:
 * https://github.com/react-bootstrap/react-bootstrap/blob/master/src/utils/deprecationWarning.js
 */

/* eslint-disable */
var warned = {};

function deprecationWarning(oldname, newname, link) {
  var message;

  if (typeof oldname === 'object') {
    message = oldname.message;
  } else {
    message = oldname + " is deprecated. Use " + newname + " instead.";

    if (link) {
      message += "\nYou can read more about it at " + link;
    }
  }

  if (warned[message]) {
    return;
  }

  (0, _lowPriorityWarning.default)(false, message);
  warned[message] = true;
}

deprecationWarning.wrapper = function (Component) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  return (
    /*#__PURE__*/
    function (_Component) {
      (0, _inheritsLoose2.default)(DeprecatedComponent, _Component);

      function DeprecatedComponent() {
        var _this;

        _this = _Component.call(this, props) || this;
        deprecationWarning.apply(void 0, args);
        return _this;
      }

      return DeprecatedComponent;
    }(Component)
  );
};

var _default = deprecationWarning;
exports.default = _default;

function resetWarned() {
  warned = {};
}