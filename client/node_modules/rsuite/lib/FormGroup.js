"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _isUndefined2 = _interopRequireDefault(require("lodash/isUndefined"));

var React = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _compose = _interopRequireDefault(require("recompose/compose"));

var _utils = require("./utils");

var FormGroup =
/*#__PURE__*/
function (_React$Component) {
  (0, _inheritsLoose2.default)(FormGroup, _React$Component);

  function FormGroup() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = FormGroup.prototype;

  _proto.getChildContext = function getChildContext() {
    var _this$props = this.props,
        controlId = _this$props.controlId,
        validationState = _this$props.validationState;
    return {
      formGroup: {
        controlId: controlId,
        validationState: validationState
      }
    };
  };

  _proto.render = function render() {
    var _classNames;

    var _this$props2 = this.props,
        validationState = _this$props2.validationState,
        className = _this$props2.className,
        isValid = _this$props2.isValid,
        classPrefix = _this$props2.classPrefix,
        rest = (0, _objectWithoutPropertiesLoose2.default)(_this$props2, ["validationState", "className", "isValid", "classPrefix"]);
    var addPrefix = (0, _utils.prefix)(classPrefix);
    var unhandled = (0, _utils.getUnhandledProps)(FormGroup, rest);
    var classes = (0, _classnames.default)(classPrefix, className, (_classNames = {}, _classNames[addPrefix('has-success')] = !validationState && isValid, _classNames[addPrefix('has-error')] = !validationState && isValid === false, _classNames[addPrefix("has-" + (validationState || ''))] = !(0, _isUndefined2.default)(validationState), _classNames));
    return React.createElement("div", (0, _extends2.default)({}, unhandled, {
      className: classes,
      role: "group"
    }));
  };

  return FormGroup;
}(React.Component);

(0, _defineProperty2.default)(FormGroup, "childContextTypes", {
  formGroup: _propTypes.default.object.isRequired
});
(0, _defineProperty2.default)(FormGroup, "handledProps", ["className", "classPrefix", "controlId", "isValid", "validationState"]);

var _default = (0, _compose.default)((0, _utils.defaultProps)({
  classPrefix: 'form-group'
}), (0, _utils.withStyleProps)({
  hasSize: true
}))(FormGroup);

exports.default = _default;