{"ast":null,"code":"var _jsxFileName = \"/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/Components/Surveys items/SurveyItem.jsx\";\nimport React, { Component } from \"react\";\nimport { Button, Card } from \"semantic-ui-react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { Link } from \"react-router-dom\";\nimport { Alert } from \"rsuite\";\nimport Close from \"../UI/Close/Close\";\nimport SurveyFillList from \"../../Containers/ShowSurveys/Survey questions List/SurveyFillList\";\nimport \"./SurveyItem.css\";\nimport * as moment from \"moment\";\nimport Responses from \"../../Containers/Responses/Responses\";\n/* single item for View all Surveys List in surveys.jsx*/\n\nclass CardExample extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hovered: false\n    };\n\n    this.hoverHandler = newVal => {\n      this.setState({\n        hovered: newVal\n      });\n    };\n\n    this.getRandomColor = () => {\n      var letters = \"0123456789ABCDEF\";\n      var color = \"#\";\n\n      for (var i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n      }\n\n      return String(color);\n    };\n\n    this.getRandomImage = () => {\n      let random = Math.floor(Math.random() * 5);\n      return this.images[random];\n    };\n\n    this.onShareClick = () => {\n      Alert.success(\"Link is copied to clipboard... opening for sharing....\", 3000);\n      window.setTimeout(() => window.open(this.B_URL + this.URL, SurveyFillList), 2000);\n    };\n\n    this.onResponseClick = () => {\n      Alert.success(\"Link is coding....\", 3000);\n      window.setTimeout(() => window.open(this.B_URL + \"/surveys/\" + this.props.id, Responses), 2000);\n    };\n\n    this.URL = \"/fill/\" + this.props.id;\n    this.B_URL = \"http://localhost:3000\";\n    this.images = [\"elliot\", \"images\", \"jenny\", \"kristy\", \"matthew\"];\n  }\n\n  render() {\n    const _this$props = this.props,\n          description = _this$props.description,\n          title = _this$props.title,\n          date = _this$props.date;\n    const cardClass = this.state.hovered ? \"card close-hover\" : \"card\";\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        margin: \"10px 10px 10px 45px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: cardClass,\n      fluid: true,\n      style: {\n        // borderBottom: \"4px solid\" + this.getRandomColor(),\n        minWidth: \"300px\",\n        maxWidth: \"300px\",\n        minHeight: \"200px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Close, {\n      clicked: this.props.click,\n      hoverIn: () => this.hoverHandler(true),\n      hoverOut: () => this.hoverHandler(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, title), React.createElement(Card.Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Date: \", moment(date).format(\"DD-MM-YYYY\")), React.createElement(Card.Description, {\n      style: {\n        fontSize: \"1.25rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, description ? description : \"testing surveys on Survey Master to give you a new Survey\")), React.createElement(Card.Content, {\n      extra: true,\n      style: {\n        paddingRight: \"30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui two buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(CopyToClipboard, {\n      text: this.B_URL + this.URL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Button, {\n      basic: true,\n      color: \"green\",\n      style: {\n        color: \"white\",\n        marginLeft: \"-3px\"\n      },\n      onClick: this.onShareClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Share \", React.createElement(\"i\", {\n      className: \"fas fa-paper-plane\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))), React.createElement(Link, {\n      to: \"/surveys/\" + this.props.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Button, {\n      basic: true,\n      color: \"blue\",\n      style: {\n        color: \"white\",\n        marginLeft: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"responses \", React.createElement(\"i\", {\n      className: \"fas fa-paperclip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nexport default CardExample;","map":{"version":3,"sources":["/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/Components/Surveys items/SurveyItem.jsx"],"names":["React","Component","Button","Card","CopyToClipboard","Link","Alert","Close","SurveyFillList","moment","Responses","CardExample","constructor","props","state","hovered","hoverHandler","newVal","setState","getRandomColor","letters","color","i","Math","floor","random","String","getRandomImage","images","onShareClick","success","window","setTimeout","open","B_URL","URL","onResponseClick","id","render","description","title","date","cardClass","margin","minWidth","maxWidth","minHeight","click","format","fontSize","paddingRight","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,cAAP,MAA2B,mEAA3B;AACA,OAAO,kBAAP;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA;;AAEA,MAAMC,WAAN,SAA0BV,SAA1B,CAAoC;AAClCW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAOnBC,KAPmB,GAOX;AACNC,MAAAA,OAAO,EAAE;AADH,KAPW;;AAAA,SAWnBC,YAXmB,GAWJC,MAAM,IAAI;AACvB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAEE;AAAX,OAAd;AACD,KAbkB;;AAAA,SAcnBE,cAdmB,GAcF,MAAM;AACrB,UAAIC,OAAO,GAAG,kBAAd;AACA,UAAIC,KAAK,GAAG,GAAZ;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BD,QAAAA,KAAK,IAAID,OAAO,CAACG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,CAAhB;AACD;;AACD,aAAOC,MAAM,CAACL,KAAD,CAAb;AACD,KArBkB;;AAAA,SAsBnBM,cAtBmB,GAsBF,MAAM;AACrB,UAAIF,MAAM,GAAGF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAb;AACA,aAAO,KAAKG,MAAL,CAAYH,MAAZ,CAAP;AACD,KAzBkB;;AAAA,SA0BnBI,YA1BmB,GA0BJ,MAAM;AACnBvB,MAAAA,KAAK,CAACwB,OAAN,CACE,wDADF,EAEE,IAFF;AAIAC,MAAAA,MAAM,CAACC,UAAP,CACE,MAAMD,MAAM,CAACE,IAAP,CAAY,KAAKC,KAAL,GAAa,KAAKC,GAA9B,EAAmC3B,cAAnC,CADR,EAEE,IAFF;AAID,KAnCkB;;AAAA,SAoCnB4B,eApCmB,GAoCD,MAAM;AACtB9B,MAAAA,KAAK,CAACwB,OAAN,CAAc,oBAAd,EAAoC,IAApC;AACAC,MAAAA,MAAM,CAACC,UAAP,CACE,MAAMD,MAAM,CAACE,IAAP,CAAY,KAAKC,KAAL,GAAa,WAAb,GAA2B,KAAKrB,KAAL,CAAWwB,EAAlD,EAAsD3B,SAAtD,CADR,EAEE,IAFF;AAID,KA1CkB;;AAGjB,SAAKyB,GAAL,GAAW,WAAW,KAAKtB,KAAL,CAAWwB,EAAjC;AACA,SAAKH,KAAL,GAAa,uBAAb;AACA,SAAKN,MAAL,GAAc,CAAC,QAAD,EAAW,QAAX,EAAqB,OAArB,EAA8B,QAA9B,EAAwC,SAAxC,CAAd;AACD;;AAsCDU,EAAAA,MAAM,GAAG;AAAA,wBAC8B,KAAKzB,KADnC;AAAA,UACC0B,WADD,eACCA,WADD;AAAA,UACcC,KADd,eACcA,KADd;AAAA,UACqBC,IADrB,eACqBA,IADrB;AAEP,UAAMC,SAAS,GAAG,KAAK5B,KAAL,CAAWC,OAAX,GAAqB,kBAArB,GAA0C,MAA5D;AACA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE;AAAE4B,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,SAAS,EAAED,SADb;AAEE,MAAA,KAAK,MAFP;AAGE,MAAA,KAAK,EAAE;AACL;AACAE,QAAAA,QAAQ,EAAE,OAFL;AAGLC,QAAAA,QAAQ,EAAE,OAHL;AAILC,QAAAA,SAAS,EAAE;AAJN,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAKjC,KAAL,CAAWkC,KAA3B;AAAkC,MAAA,OAAO,EAAE,MAAM,KAAK/B,YAAL,CAAkB,IAAlB,CAAjD;AAA0E,MAAA,QAAQ,EAAE,MAAM,KAAKA,YAAL,CAAkB,KAAlB,CAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAWE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcwB,KAAd,CAFF,EAGE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAkB/B,MAAM,CAACgC,IAAD,CAAN,CAAaO,MAAb,CAAoB,YAApB,CAAlB,CAHF,EAIE,oBAAC,IAAD,CAAM,WAAN;AAAkB,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGV,WAAW,GACRA,WADQ,GAER,2DAHN,CAJF,CAXF,EAqBE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,KAAK,MAAnB;AAAoB,MAAA,KAAK,EAAE;AAAEW,QAAAA,YAAY,EAAE;AAAhB,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE,KAAKhB,KAAL,GAAa,KAAKC,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,KAAK,EAAE;AAAEd,QAAAA,KAAK,EAAE,OAAT;AAAkB8B,QAAAA,UAAU,EAAE;AAA9B,OAHT;AAIE,MAAA,OAAO,EAAE,KAAKtB,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAMQ;AAAG,MAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANR,CADF,CADF,EAWE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,cAAc,KAAKhB,KAAL,CAAWwB,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,KAAK,EAAE;AAAEhB,QAAAA,KAAK,EAAE,OAAT;AAAkB8B,QAAAA,UAAU,EAAE;AAA9B,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAKY;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALZ,CADF,CAXF,CADF,CArBF,CADF,CADF,CADF;AAyDD;;AAzGiC;;AA2GpC,eAAexC,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Card } from \"semantic-ui-react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { Link } from \"react-router-dom\";\nimport { Alert } from \"rsuite\";\nimport Close from \"../UI/Close/Close\";\nimport SurveyFillList from \"../../Containers/ShowSurveys/Survey questions List/SurveyFillList\";\nimport \"./SurveyItem.css\";\nimport * as moment from \"moment\";\nimport Responses from \"../../Containers/Responses/Responses\";\n/* single item for View all Surveys List in surveys.jsx*/\n\nclass CardExample extends Component {\n  constructor(props) {\n    super(props);\n\n    this.URL = \"/fill/\" + this.props.id;\n    this.B_URL = \"http://localhost:3000\";\n    this.images = [\"elliot\", \"images\", \"jenny\", \"kristy\", \"matthew\"];\n  }\n  state = {\n    hovered: false\n  };\n\n  hoverHandler = newVal => {\n    this.setState({ hovered: newVal });\n  };\n  getRandomColor = () => {\n    var letters = \"0123456789ABCDEF\";\n    var color = \"#\";\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return String(color);\n  };\n  getRandomImage = () => {\n    let random = Math.floor(Math.random() * 5);\n    return this.images[random];\n  };\n  onShareClick = () => {\n    Alert.success(\n      \"Link is copied to clipboard... opening for sharing....\",\n      3000\n    );\n    window.setTimeout(\n      () => window.open(this.B_URL + this.URL, SurveyFillList),\n      2000\n    );\n  };\n  onResponseClick = () => {\n    Alert.success(\"Link is coding....\", 3000);\n    window.setTimeout(\n      () => window.open(this.B_URL + \"/surveys/\" + this.props.id, Responses),\n      2000\n    );\n  };\n\n  render() {\n    const { description, title, date } = this.props;\n    const cardClass = this.state.hovered ? \"card close-hover\" : \"card\"\n    return (\n      <React.Fragment>\n        <div style={{ margin: \"10px 10px 10px 45px\" }}>\n          <Card\n            className={cardClass}\n            fluid\n            style={{\n              // borderBottom: \"4px solid\" + this.getRandomColor(),\n              minWidth: \"300px\",\n              maxWidth: \"300px\",\n              minHeight: \"200px\"\n            }}\n          >\n            <Close clicked={this.props.click} hoverIn={() => this.hoverHandler(true)} hoverOut={() => this.hoverHandler(false)} />\n            <Card.Content>\n              {/* <Image floated='right' size='mini' onClick={this.props.click}><i className=\"fas fa-times\"></i></Image> */}\n              <Card.Header>{title}</Card.Header>\n              <Card.Meta>Date: {moment(date).format(\"DD-MM-YYYY\")}</Card.Meta>\n              <Card.Description style={{ fontSize: \"1.25rem\" }}>\n                {description\n                  ? description\n                  : \"testing surveys on Survey Master to give you a new Survey\"}\n              </Card.Description>\n            </Card.Content>\n            <Card.Content extra style={{ paddingRight: \"30px\" }}>\n              <div className=\"ui two buttons\">\n                <CopyToClipboard text={this.B_URL + this.URL}>\n                  <Button\n                    basic\n                    color=\"green\"\n                    style={{ color: \"white\", marginLeft: \"-3px\" }}\n                    onClick={this.onShareClick}\n                  >\n                    Share <i className=\"fas fa-paper-plane\" />\n                  </Button>\n                </CopyToClipboard>\n                <Link to={\"/surveys/\" + this.props.id}>\n                  <Button\n                    basic\n                    color=\"blue\"\n                    style={{ color: \"white\", marginLeft: \"5px\" }}\n                  >\n                    responses <i className=\"fas fa-paperclip\" />\n                  </Button>\n                </Link>\n              </div>\n            </Card.Content>\n          </Card>\n        </div>\n\n        {/* <Link to={this.URL}>\n                <Button style={{ color: 'white' }} >\n                  Preview\n               </Button>\n              </Link> */}\n      </React.Fragment>\n    );\n  }\n}\nexport default CardExample;\n"]},"metadata":{},"sourceType":"module"}