{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _reactLifecyclesCompat = require('react-lifecycles-compat');\n\nvar _Portal = require('./Portal');\n\nvar _Portal2 = _interopRequireDefault(_Portal);\n\nvar _Position = require('./Position');\n\nvar _Position2 = _interopRequireDefault(_Position);\n\nvar _RootCloseWrapper = require('./RootCloseWrapper');\n\nvar _RootCloseWrapper2 = _interopRequireDefault(_RootCloseWrapper);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Overlay = function (_React$Component) {\n  _inherits(Overlay, _React$Component);\n\n  function Overlay(props) {\n    _classCallCheck(this, Overlay);\n\n    var _this = _possibleConstructorReturn(this, (Overlay.__proto__ || Object.getPrototypeOf(Overlay)).call(this, props));\n\n    _this.handleHidden = function () {\n      _this.setState({\n        exited: true\n      });\n\n      var onExited = _this.props.onExited;\n      onExited && onExited.apply(undefined, arguments);\n    };\n\n    _this.state = {\n      exited: !props.show\n    };\n    return _this;\n  }\n\n  _createClass(Overlay, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          container = _props.container,\n          containerPadding = _props.containerPadding,\n          target = _props.target,\n          placement = _props.placement,\n          shouldUpdatePosition = _props.shouldUpdatePosition,\n          rootClose = _props.rootClose,\n          children = _props.children,\n          Transition = _props.transition,\n          show = _props.show,\n          onHide = _props.onHide,\n          positionRef = _props.positionRef,\n          props = _objectWithoutProperties(_props, ['container', 'containerPadding', 'target', 'placement', 'shouldUpdatePosition', 'rootClose', 'children', 'transition', 'show', 'onHide', 'positionRef']);\n\n      var mountOverlay = show || Transition && !this.state.exited;\n\n      if (!mountOverlay) {\n        return null;\n      }\n\n      var child = children;\n      child = React.createElement(_Position2.default, _extends({\n        container: container,\n        containerPadding: containerPadding,\n        target: target,\n        placement: placement,\n        shouldUpdatePosition: shouldUpdatePosition\n      }, {\n        ref: positionRef\n      }), child);\n\n      if (Transition) {\n        var _onExit = props.onExit,\n            _onExiting = props.onExiting,\n            _onEnter = props.onEnter,\n            _onEntering = props.onEntering,\n            _onEntered = props.onEntered;\n        child = React.createElement(Transition, {\n          'in': show,\n          transitionAppear: true,\n          onExit: _onExit,\n          onExiting: _onExiting,\n          onExited: this.handleHidden,\n          onEnter: _onEnter,\n          onEntering: _onEntering,\n          onEntered: _onEntered\n        }, child);\n      }\n\n      if (rootClose) {\n        child = React.createElement(_RootCloseWrapper2.default, {\n          target: target,\n          onRootClose: onHide\n        }, child);\n      }\n\n      return React.createElement(_Portal2.default, {\n        container: container\n      }, child);\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps) {\n      if (nextProps.show) {\n        return {\n          exited: false\n        };\n      } else if (!nextProps.transition) {\n        return {\n          exited: true\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Overlay;\n}(React.Component);\n\nOverlay.handledProps = ['children', 'className', 'container', 'containerPadding', 'onEnter', 'onEntered', 'onEntering', 'onExit', 'onExited', 'onExiting', 'onHide', 'onRendered', 'placement', 'positionRef', 'rootClose', 'shouldUpdatePosition', 'show', 'target', 'transition'];\n(0, _reactLifecyclesCompat.polyfill)(Overlay);\nexports.default = Overlay;","map":null,"metadata":{},"sourceType":"script"}