{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.underscore = underscore;\nexports.camelize = camelize;\nexports.hyphenate = hyphenate;\nexports.merge = merge;\n/* eslint-disable */\n\n/**\n * @example\n * underscoreName('getList');\n * => get_list\n */\n\nfunction underscore(string) {\n  return string.replace(/([A-Z])/g, '_$1').toLowerCase();\n}\n/**\n * @example\n * camelize('font-size');\n * => fontSize\n */\n\n\nfunction camelize(string) {\n  return string.replace(/\\-(\\w)/g, function (char) {\n    return char.slice(1).toUpperCase();\n  });\n}\n/**\n * @example\n * camelize('fontSize');\n * => font-size\n */\n\n\nfunction hyphenate(string) {\n  return string.replace(/([A-Z])/g, '-$1').toLowerCase();\n}\n/**\n * @example\n * merge('{0} - A front-end {1} ','Suite','framework');\n * => Suite - A front-end framework\n */\n\n\nfunction merge(pattern) {\n  var pointer = 0,\n      i;\n\n  for (i = 1; i < arguments.length; i += 1) {\n    pattern = pattern.split(\"{\".concat(pointer, \"}\")).join(arguments[i]);\n    pointer += 1;\n  }\n\n  return pattern;\n}","map":null,"metadata":{},"sourceType":"script"}