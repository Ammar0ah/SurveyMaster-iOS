{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _canUseDOM = _interopRequireDefault(require(\"./query/canUseDOM\"));\n\nvar _stringFormatter = require(\"./utils/stringFormatter\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar memoized = {};\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\nvar prefixRegex = new RegExp(\"^(\".concat(prefixes.join('|'), \")\"));\nvar testStyle = _canUseDOM.default ? document.createElement('div').style : {};\n\nfunction getWithPrefix(name) {\n  for (var i = 0; i < prefixes.length; i += 1) {\n    var prefixedName = prefixes[i] + name;\n\n    if (prefixedName in testStyle) {\n      return prefixedName;\n    }\n  }\n\n  return null;\n}\n/**\n * @param {string} property Name of a css property to check for.\n * @return {?string} property name supported in the browser, or null if not\n * supported.\n */\n\n\nfunction getVendorPrefixedName(property) {\n  var name = (0, _stringFormatter.camelize)(property);\n\n  if (memoized[name] === undefined) {\n    var capitalizedName = name.charAt(0).toUpperCase() + name.slice(1);\n\n    if (prefixRegex.test(capitalizedName)) {\n      throw new Error(\"getVendorPrefixedName must only be called with unprefixed\\n          CSS property names. It was called with \".concat(property));\n    }\n\n    memoized[name] = name in testStyle ? name : getWithPrefix(capitalizedName);\n  }\n\n  return memoized[name];\n}\n\nvar _default = getVendorPrefixedName;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}