{"ast":null,"code":"var _jsxFileName = \"/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/Components/SurveyAnswersList/answerTypes/multiplechoice.jsx\";\nimport React, { Component } from 'react';\nimport { Checkbox } from 'rsuite';\n\nclass InputPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      choices: []\n    };\n\n    this.changedChoiceHandler = value => {\n      this.setState({\n        choices: this.editChoice(value)\n      }, () => {\n        if (this.state.choices.length > 0) this.props.change(this.state);\n        console.log(this.state.choices);\n      }); // let Choices = Object.assign([],this.state.choices)\n      //  this.props.throwState(this.state)\n    };\n\n    this.editChoice = value => {\n      if (this.state.choices.includes(value)) {\n        let index = this.state.choices.indexOf(value);\n        let newChoices = this.state.choices;\n        newChoices.splice(index, 1);\n        console.log(newChoices, index);\n        return newChoices;\n      } else return [...this.state.choices, value];\n    };\n  }\n\n  componentWillMount() {\n    this.choicesSentences = this.props.content.choices;\n  }\n\n  render() {\n    let Checkboxes = this.choicesSentences.map((c, i) => React.createElement(Checkbox, {\n      key: i,\n      onChange: this.changedChoiceHandler,\n      value: c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, c));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, Checkboxes);\n  }\n\n}\n\nexport default InputPage;","map":{"version":3,"sources":["/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/Components/SurveyAnswersList/answerTypes/multiplechoice.jsx"],"names":["React","Component","Checkbox","InputPage","state","choices","changedChoiceHandler","value","setState","editChoice","length","props","change","console","log","includes","index","indexOf","newChoices","splice","componentWillMount","choicesSentences","content","render","Checkboxes","map","c","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,QAAzB;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BG,KAD8B,GACtB;AACJC,MAAAA,OAAO,EAAC;AADJ,KADsB;;AAAA,SAQ9BC,oBAR8B,GAQNC,KAAD,IAAW;AAC9B,WAAKC,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE,KAAKI,UAAL,CAAgBF,KAAhB;AAAX,OAAd,EACA,MAAM;AACF,YAAG,KAAKH,KAAL,CAAWC,OAAX,CAAmBK,MAAnB,GAA4B,CAA/B,EACA,KAAKC,KAAL,CAAWC,MAAX,CAAkB,KAAKR,KAAvB;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWC,OAAvB;AACH,OALD,EAD8B,CAS9B;AACF;AACD,KAnB6B;;AAAA,SAoB9BI,UApB8B,GAoBhBF,KAAD,IAAW;AAEpB,UAAG,KAAKH,KAAL,CAAWC,OAAX,CAAmBU,QAAnB,CAA4BR,KAA5B,CAAH,EACA;AACI,YAAIS,KAAK,GAAE,KAAKZ,KAAL,CAAWC,OAAX,CAAmBY,OAAnB,CAA2BV,KAA3B,CAAX;AACA,YAAIW,UAAU,GAAG,KAAKd,KAAL,CAAWC,OAA5B;AAEFa,QAAAA,UAAU,CAACC,MAAX,CAAkBH,KAAlB,EAA0B,CAA1B;AACEH,QAAAA,OAAO,CAACC,GAAR,CAAYI,UAAZ,EAAwBF,KAAxB;AACA,eAAQE,UAAR;AACH,OARD,MASK,OAAO,CAAC,GAAG,KAAKd,KAAL,CAAWC,OAAf,EAAuBE,KAAvB,CAAP;AACR,KAhC6B;AAAA;;AAK9Ba,EAAAA,kBAAkB,GAAG;AACjB,SAAKC,gBAAL,GAAwB,KAAKV,KAAL,CAAWW,OAAX,CAAmBjB,OAA3C;AACH;;AA2BDkB,EAAAA,MAAM,GAAG;AAEL,QAAIC,UAAU,GAAG,KAAKH,gBAAL,CAAsBI,GAAtB,CAA0B,CAACC,CAAD,EAAIC,CAAJ,KAAU,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAf;AAAkB,MAAA,QAAQ,EAAE,KAAKrB,oBAAjC;AACjD,MAAA,KAAK,EAAEoB,CAD0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACtCA,CADsC,CAApC,CAAjB;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,UADL,CADJ;AAMH;;AA5C6B;;AAiDlC,eAAerB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Checkbox } from 'rsuite';\n\nclass InputPage extends Component {\n    state = {\n        choices:[],\n   \n    }\n    componentWillMount() {\n        this.choicesSentences = this.props.content.choices;\n    }\n    changedChoiceHandler = (value) => {\n        this.setState({ choices: this.editChoice(value)},\n        () => {\n            if(this.state.choices.length > 0)\n            this.props.change(this.state)\n            console.log(this.state.choices)\n        }\n            );\n       \n        // let Choices = Object.assign([],this.state.choices)\n      //  this.props.throwState(this.state)\n    }\n    editChoice = (value) => { \n       \n        if(this.state.choices.includes(value))\n        {\n            let index =this.state.choices.indexOf(value)   \n            let newChoices = this.state.choices\n          \n          newChoices.splice(index , 1)\n            console.log(newChoices, index)\n            return  newChoices\n        }\n        else return [...this.state.choices,value]\n    }\n\n    render() {\n       \n        let Checkboxes = this.choicesSentences.map((c, i) => <Checkbox key={i} onChange={this.changedChoiceHandler}\n            value={c}>{c}</Checkbox>)\n        return (\n            <div>\n                {Checkboxes}\n            </div>\n        )\n\n    }\n\n}\n\n\nexport default InputPage;"]},"metadata":{},"sourceType":"module"}