{"ast":null,"code":"var _jsxFileName = \"/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/Components/Question/LinearScale/LinearScale.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { MDBRow, MDBCol, MDBInput } from \"mdbreact\";\nimport * as actions from \"../../../store/actions/types\";\nimport * as Qtypes from \"../QuestionTypes\";\n\nclass LinearScale extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    const index = this.props.index;\n    const content = this.props.pages[0].questions[index].content;\n    const type = this.props.pages[0].questions[index].type;\n    const minimum = React.createElement(MDBCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Minimum\",\n      size: \"sm\",\n      type: \"number\",\n      value: content.min,\n      onChange: e => this.props.ChangeMinHandler(index, e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }));\n    const maximum = React.createElement(MDBCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Maximum\",\n      size: \"sm\",\n      type: \"number\",\n      value: content.max,\n      onChange: e => this.props.ChangeMaxHandler(index, e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n    const step = type !== Qtypes.RATING ? React.createElement(MDBCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Steps\",\n      size: \"sm\",\n      type: \"number\",\n      value: content.step,\n      onChange: e => this.props.ChangeStepHandler(index, e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })) : null;\n    const defalutValue = React.createElement(MDBCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Default Value\",\n      size: \"sm\",\n      type: \"number\",\n      value: content.defalutValue,\n      onChange: e => this.props.ChangeDefaultValueHandler(index, e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, minimum, maximum), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, step, defalutValue));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pages: state.createSurvey.pages\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    ChangeMinHandler: (index, newVal) => dispatch({\n      type: actions.CHANGE_LINEAR_CONTENT,\n      content: actions.CHANGE_MIN_VALUE,\n      index: index,\n      val: newVal\n    }),\n    ChangeMaxHandler: (index, newVal) => {\n      console.log(\"nax\");\n      dispatch({\n        type: actions.CHANGE_LINEAR_CONTENT,\n        content: actions.CHANGE_MAX_VALUE,\n        index: index,\n        val: newVal\n      });\n    },\n    ChangeStepHandler: (index, newVal) => dispatch({\n      type: actions.CHANGE_LINEAR_CONTENT,\n      content: actions.CHANGE_STEP_VALUE,\n      index: index,\n      val: newVal\n    }),\n    ChangeDefaultValueHandler: (index, newVal) => dispatch({\n      type: actions.CHANGE_LINEAR_CONTENT,\n      content: actions.CHANGE_DEFAULT_VALUE,\n      index: index,\n      val: newVal\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LinearScale);","map":{"version":3,"sources":["/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/Components/Question/LinearScale/LinearScale.js"],"names":["React","Component","connect","MDBRow","MDBCol","MDBInput","actions","Qtypes","LinearScale","state","render","index","props","content","pages","questions","type","minimum","min","e","ChangeMinHandler","target","value","maximum","max","ChangeMaxHandler","step","RATING","ChangeStepHandler","defalutValue","ChangeDefaultValueHandler","mapStateToProps","createSurvey","mapDispatchToProps","dispatch","newVal","CHANGE_LINEAR_CONTENT","CHANGE_MIN_VALUE","val","console","log","CHANGE_MAX_VALUE","CHANGE_STEP_VALUE","CHANGE_DEFAULT_VALUE"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { MDBRow, MDBCol, MDBInput } from \"mdbreact\";\nimport * as actions from \"../../../store/actions/types\";\nimport * as Qtypes from \"../QuestionTypes\";\n\nclass LinearScale extends Component {\n  state = {};\n  render() {\n    const index = this.props.index;\n    const content = this.props.pages[0].questions[index].content;\n    const type = this.props.pages[0].questions[index].type;\n    const minimum = (\n      <MDBCol>\n        <MDBInput\n          label=\"Minimum\"\n          size=\"sm\"\n          type=\"number\"\n          value={content.min}\n          onChange={e => this.props.ChangeMinHandler(index, e.target.value)}\n        />\n      </MDBCol>\n    );\n    const maximum = (\n      <MDBCol>\n        <MDBInput\n          label=\"Maximum\"\n          size=\"sm\"\n          type=\"number\"\n          value={content.max}\n          onChange={e => this.props.ChangeMaxHandler(index, e.target.value)}\n        />\n      </MDBCol>\n    );\n    const step = (\n      type !== Qtypes.RATING ? \n      <MDBCol>\n        <MDBInput\n          label=\"Steps\"\n          size=\"sm\"\n          type=\"number\"\n          value={content.step}\n          onChange={e => this.props.ChangeStepHandler(index, e.target.value)}\n        />\n      </MDBCol>\n      : null\n    );\n\n    const defalutValue = (\n      <MDBCol>\n        <MDBInput\n          label=\"Default Value\"\n          size=\"sm\"\n          type=\"number\"\n          value={content.defalutValue}\n          onChange={e =>\n            this.props.ChangeDefaultValueHandler(index, e.target.value)\n          }\n        />\n      </MDBCol>\n    );\n    return (\n      <div>\n        <MDBRow>{minimum}{maximum}</MDBRow>\n        <MDBRow>{step}{defalutValue}</MDBRow>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    pages: state.createSurvey.pages\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    ChangeMinHandler: (index, newVal) =>\n      dispatch({\n        type: actions.CHANGE_LINEAR_CONTENT,\n        content: actions.CHANGE_MIN_VALUE,\n        index: index,\n        val: newVal\n      }),\n    ChangeMaxHandler: (index, newVal) => {\n      console.log(\"nax\");\n      dispatch({\n        type: actions.CHANGE_LINEAR_CONTENT,\n        content: actions.CHANGE_MAX_VALUE,\n        index: index,\n        val: newVal\n      });\n    },\n    ChangeStepHandler: (index, newVal) =>\n      dispatch({\n        type: actions.CHANGE_LINEAR_CONTENT,\n        content: actions.CHANGE_STEP_VALUE,\n        index: index,\n        val: newVal\n      }),\n    ChangeDefaultValueHandler: (index, newVal) =>\n      dispatch({\n        type: actions.CHANGE_LINEAR_CONTENT,\n        content: actions.CHANGE_DEFAULT_VALUE,\n        index: index,\n        val: newVal\n      })\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LinearScale);\n"]},"metadata":{},"sourceType":"module"}