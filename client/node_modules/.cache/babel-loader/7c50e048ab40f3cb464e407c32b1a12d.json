{"ast":null,"code":"import * as ActionType from \"./types\";\nimport axios from \"../../axios-requests\";\nimport { Alert } from \"rsuite\";\naxios.defaults.headers.common[\"x-auth-token\"] = localStorage.getItem(\"token\");\nexport const setSurveys = surveys => {\n  return {\n    type: ActionType.SHOW_SURVEYS,\n    payload: surveys\n  };\n}; ////////////////////////\n\nexport const deleteSurvey = id => dispatch => {\n  axios.delete(\"api/surveys/\" + id).then(response => {\n    console.log(response.data);\n    dispatch(initSurvey());\n  }).catch(err => {\n    console.log(err.response);\n    if (err.response && err.response.status === 404) Alert.warning(\"This survey has been already deleted\");\n  });\n}; ////////////////////////\n\nexport const initSurvey = () => dispatch => {\n  const header = {\n    \"x-auth-token\": localStorage.getItem(\"token\")\n  };\n  axios.get(\"api/surveys\", {\n    headers: header\n  }).then(response => {\n    dispatch(setSurveys(response.data));\n  }).catch(error => {\n    if (error) console.log(error.response.data);\n    Alert.warning(\"You don't have authentication to access your surveys,please sign in again\");\n  });\n};\nexport const currentUser = value => dispatch => {\n  console.log('currentUser');\n  dispatch({\n    value: value,\n    type: ActionType.CURRENT_USER\n  });\n};","map":{"version":3,"sources":["/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/store/actions/viewAction.js"],"names":["ActionType","axios","Alert","defaults","headers","common","localStorage","getItem","setSurveys","surveys","type","SHOW_SURVEYS","payload","deleteSurvey","id","dispatch","delete","then","response","console","log","data","initSurvey","catch","err","status","warning","header","get","error","currentUser","value","CURRENT_USER"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,SAA5B;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAASC,KAAT,QAAsB,QAAtB;AACAD,KAAK,CAACE,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,cAA9B,IAAgDC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAhD;AAEA,OAAO,MAAMC,UAAU,GAAGC,OAAO,IAAI;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAEV,UAAU,CAACW,YADZ;AAELC,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID,CALM,C,CAMP;;AACA,OAAO,MAAMI,YAAY,GAAGC,EAAE,IAAIC,QAAQ,IAAI;AAC5Cd,EAAAA,KAAK,CACFe,MADH,CACU,iBAAiBF,EAD3B,EAEGG,IAFH,CAEQC,QAAQ,IAAI;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAN,IAAAA,QAAQ,CAACO,UAAU,EAAX,CAAR;AACD,GALH,EAMGC,KANH,CAMSC,GAAG,IAAI;AACZL,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACN,QAAhB;AACA,QAAIM,GAAG,CAACN,QAAJ,IAAgBM,GAAG,CAACN,QAAJ,CAAaO,MAAb,KAAwB,GAA5C,EACEvB,KAAK,CAACwB,OAAN,CAAc,sCAAd;AACH,GAVH;AAWD,CAZM,C,CAaP;;AACA,OAAO,MAAMJ,UAAU,GAAG,MAAMP,QAAQ,IAAI;AAE1C,QAAMY,MAAM,GAAG;AACb,oBAAgBrB,YAAY,CAACC,OAAb,CAAqB,OAArB;AADH,GAAf;AAGAN,EAAAA,KAAK,CACF2B,GADH,CACO,aADP,EACqB;AAACxB,IAAAA,OAAO,EAACuB;AAAT,GADrB,EAEGV,IAFH,CAEQC,QAAQ,IAAI;AAChBH,IAAAA,QAAQ,CAACP,UAAU,CAACU,QAAQ,CAACG,IAAV,CAAX,CAAR;AACD,GAJH,EAKGE,KALH,CAKSM,KAAK,IAAI;AACd,QAAIA,KAAJ,EACAV,OAAO,CAACC,GAAR,CAAYS,KAAK,CAACX,QAAN,CAAeG,IAA3B;AACEnB,IAAAA,KAAK,CAACwB,OAAN,CACE,2EADF;AAGH,GAXH;AAYD,CAjBM;AAkBP,OAAO,MAAMI,WAAW,GAAGC,KAAK,IAAIhB,QAAQ,IAAI;AAC9CI,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAL,EAAAA,QAAQ,CAAE;AACRgB,IAAAA,KAAK,EAAEA,KADC;AAERrB,IAAAA,IAAI,EAAEV,UAAU,CAACgC;AAFT,GAAF,CAAR;AAID,CANM","sourcesContent":["import * as ActionType from \"./types\";\nimport axios from \"../../axios-requests\";\nimport { Alert } from \"rsuite\";\naxios.defaults.headers.common[\"x-auth-token\"] = localStorage.getItem(\"token\");\n\nexport const setSurveys = surveys => {\n  return {\n    type: ActionType.SHOW_SURVEYS,\n    payload: surveys\n  };\n};\n////////////////////////\nexport const deleteSurvey = id => dispatch => {\n  axios\n    .delete(\"api/surveys/\" + id)\n    .then(response => {\n      console.log(response.data);\n      dispatch(initSurvey());\n    })\n    .catch(err => {\n      console.log(err.response);\n      if (err.response && err.response.status === 404)\n        Alert.warning(\"This survey has been already deleted\");\n    });\n};\n////////////////////////\nexport const initSurvey = () => dispatch => {\n \n  const header = {\n    \"x-auth-token\": localStorage.getItem(\"token\")\n  };\n  axios\n    .get(\"api/surveys\",{headers:header})\n    .then(response => {\n      dispatch(setSurveys(response.data));\n    })\n    .catch(error => {\n      if (error)\n      console.log(error.response.data)\n        Alert.warning(\n          \"You don't have authentication to access your surveys,please sign in again\"\n        );\n    });\n};\nexport const currentUser = value => dispatch => {\n  console.log('currentUser')\n  dispatch( {\n    value: value,\n    type: ActionType.CURRENT_USER\n  });\n};\n"]},"metadata":{},"sourceType":"module"}