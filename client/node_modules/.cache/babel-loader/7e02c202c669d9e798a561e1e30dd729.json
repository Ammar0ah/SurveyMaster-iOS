{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _isUndefined2 = _interopRequireDefault(require(\"lodash/isUndefined\"));\n\nvar _get2 = _interopRequireDefault(require(\"lodash/get\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _Collapse = _interopRequireDefault(require(\"rsuite-utils/lib/Animation/Collapse\"));\n\nvar _shallowEqual = _interopRequireDefault(require(\"rsuite-utils/lib/utils/shallowEqual\"));\n\nvar _setDisplayName = _interopRequireDefault(require(\"recompose/setDisplayName\"));\n\nvar _DropdownMenuItem = _interopRequireDefault(require(\"./DropdownMenuItem\"));\n\nvar _Icon = _interopRequireDefault(require(\"./Icon\"));\n\nvar _Ripple = _interopRequireDefault(require(\"./Ripple\"));\n\nvar _utils = require(\"./utils\");\n\nvar DropdownMenu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(DropdownMenu, _React$Component);\n\n  function DropdownMenu() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleToggleChange\", function (eventKey, event) {\n      var onToggle = _this.props.onToggle;\n      onToggle && onToggle(eventKey, event);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"addPrefix\", function (name) {\n      return (0, _utils.prefix)(_this.props.classPrefix)(name);\n    });\n    return _this;\n  }\n\n  var _proto = DropdownMenu.prototype;\n\n  _proto.getMenuItemsAndStatus = function getMenuItemsAndStatus(children) {\n    var _this2 = this;\n\n    var hasActiveItem;\n    var _this$props = this.props,\n        activeKey = _this$props.activeKey,\n        onSelect = _this$props.onSelect,\n        classPrefix = _this$props.classPrefix,\n        _this$props$openKeys = _this$props.openKeys,\n        openKeys = _this$props$openKeys === void 0 ? [] : _this$props$openKeys;\n    var items = React.Children.map(children, function (item, index) {\n      var displayName = (0, _get2.default)(item, ['type', 'displayName']);\n      var active;\n\n      if (displayName === 'DropdownMenuItem' || displayName === 'DropdownMenu') {\n        active = _this2.isActive(item.props, activeKey);\n\n        if (active) {\n          hasActiveItem = true;\n        }\n      }\n\n      if (displayName === 'DropdownMenuItem') {\n        var onItemSelect = item.props.onSelect;\n        return React.cloneElement(item, {\n          key: index,\n          active: active,\n          onSelect: (0, _utils.createChainedFunction)(onSelect, onItemSelect)\n        });\n      } else if (displayName === 'DropdownMenu') {\n        var itemsAndStatus = _this2.getMenuItemsAndStatus(item.props.children);\n\n        var _item$props = item.props,\n            icon = _item$props.icon,\n            open = _item$props.open,\n            trigger = _item$props.trigger,\n            pullLeft = _item$props.pullLeft,\n            _eventKey = _item$props.eventKey,\n            title = _item$props.title;\n        var expanded = openKeys.some(function (key) {\n          return (0, _shallowEqual.default)(key, _eventKey);\n        });\n        return React.createElement(_DropdownMenuItem.default, {\n          icon: icon,\n          open: open,\n          trigger: trigger,\n          expanded: expanded,\n          active: _this2.isActive(item.props, activeKey),\n          className: _this2.addPrefix(\"pull-\" + (pullLeft ? 'left' : 'right')),\n          pullLeft: pullLeft,\n          componentClass: \"div\",\n          submenu: true\n        }, React.createElement(\"div\", {\n          className: _this2.addPrefix('toggle'),\n          onClick: _this2.handleToggleChange.bind(_this2, _eventKey),\n          role: \"menu\",\n          tabIndex: -1\n        }, React.createElement(\"span\", null, title), React.createElement(_Icon.default, {\n          className: _this2.addPrefix('toggle-icon'),\n          icon: pullLeft ? 'angle-left' : 'angle-right'\n        }), React.createElement(_Ripple.default, null)), _this2.renderCollapse(React.createElement(\"ul\", {\n          role: \"menu\",\n          className: classPrefix\n        }, itemsAndStatus.items), expanded));\n      }\n\n      return item;\n    });\n    return {\n      items: items,\n      active: hasActiveItem\n    };\n  };\n\n  _proto.isActive = function isActive(props, activeKey) {\n    var _this3 = this;\n\n    if (props.active || !(0, _isUndefined2.default)(activeKey) && (0, _shallowEqual.default)(props.eventKey, activeKey)) {\n      return true;\n    }\n\n    if (_utils.ReactChildren.some(props.children, function (child) {\n      return _this3.isActive(child.props, activeKey);\n    })) {\n      return true;\n    }\n\n    return props.active;\n  };\n\n  _proto.renderCollapse = function renderCollapse(children, expanded) {\n    return this.props.collapsible ? React.createElement(_Collapse.default, {\n      in: expanded,\n      exitedClassName: this.addPrefix('collapse-out'),\n      exitingClassName: this.addPrefix('collapsing'),\n      enteredClassName: this.addPrefix('collapse-in'),\n      enteringClassName: this.addPrefix('collapsing')\n    }, children) : children;\n  };\n\n  _proto.render = function render() {\n    var _classNames;\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        className = _this$props2.className,\n        classPrefix = _this$props2.classPrefix,\n        expanded = _this$props2.expanded,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props2, [\"children\", \"className\", \"classPrefix\", \"expanded\"]);\n\n    var _this$getMenuItemsAnd = this.getMenuItemsAndStatus(children),\n        items = _this$getMenuItemsAnd.items,\n        active = _this$getMenuItemsAnd.active;\n\n    var unhandled = (0, _utils.getUnhandledProps)(DropdownMenu, props);\n    var classes = (0, _classnames.default)(classPrefix, className, (_classNames = {}, _classNames[this.addPrefix('active')] = active, _classNames));\n    return this.renderCollapse(React.createElement(\"ul\", (0, _extends2.default)({}, unhandled, {\n      className: classes,\n      role: \"menu\"\n    }), items), expanded);\n  };\n\n  return DropdownMenu;\n}(React.Component);\n\n(0, _defineProperty2.default)(DropdownMenu, \"handledProps\", [\"activeKey\", \"children\", \"className\", \"classPrefix\", \"collapsible\", \"eventKey\", \"expanded\", \"icon\", \"onSelect\", \"onToggle\", \"open\", \"openKeys\", \"pullLeft\", \"title\", \"trigger\"]);\nvar EnhancedDropdownMenu = (0, _utils.defaultProps)({\n  classPrefix: 'dropdown-menu'\n})(DropdownMenu);\nvar Component = (0, _setDisplayName.default)('DropdownMenu')(EnhancedDropdownMenu);\nvar _default = Component;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}