{"ast":null,"code":"var _jsxFileName = \"/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/Containers/SurveyBuilder/SurveyBuilder.js\";\nimport React, { Component } from \"react\";\nimport SurveyTitle from \"../../Components/SurveyTitle/SurveyTitle\";\nimport Question from \"../../Components/Question/Question\";\nimport Layout from \"../../Components/Layout/Layout\";\nimport SurveyBuilderWelcome from \"../../Components/SurveyBuilderWelcome/SurveyBuilderWelcome\";\nimport { AddQuestion, SubmitNewSurvey, ChangeTitle } from \"../../store/actions/BuilderAction\";\nimport styleClass from \"./SurveyBuilder.module.css\";\nimport \"./SurveyBuilder.css\";\nimport { MDBBtn } from \"mdbreact\";\nimport { connect } from \"react-redux\";\nimport AddQuestionFloating from \"../../Components/AddQuestionFloating/AddQuestionFloating\";\nimport * as Qtypes from \"../../Components/Question/QuestionTypes\";\n\nclass SurveyBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showSideEditor: false,\n      focusedQuestion: 0,\n      submitting: false\n    };\n\n    this.showSideEditorHandler = index => {\n      this.setState({\n        showSideEditor: true,\n        focusedQuestion: index\n      });\n    };\n\n    this.HideSideEditorHandler = () => {\n      this.setState({\n        showSideEditor: false\n      });\n    };\n\n    this.SubmittingHandler = newVal => {\n      // console.log(newVal);\n      this.setState({\n        submitting: newVal\n      });\n    };\n  }\n\n  render() {\n    const Qs = this.props.pages[0].questions;\n    let Questions = [];\n    let PageContent;\n\n    if (Qs.length > 0) {\n      Questions = Qs.map((_, index) => {\n        return React.createElement(Question, {\n          key: index,\n          index: index,\n          clicked: () => this.showSideEditorHandler(index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        });\n      });\n      PageContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styleClass.SurveyBuilder + \" \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(SurveyTitle, {\n        value: this.props.title,\n        changed: e => this.props.ChangeTitle(e.target.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), Questions, React.createElement(\"div\", {\n        className: styleClass.SurveyTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        onClick: () => this.props.SubmitNewSurvey(this.props.create, window.setTimeout(() => this.props.history.push(\"/surveys\"), 2000)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"SUBMIT\"))));\n    } else {\n      PageContent = React.createElement(SurveyBuilderWelcome, {\n        clicked: () => this.props.AddQuestion(Qtypes.TEXT),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(AddQuestionFloating, {\n      text: \"Add Question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, PageContent));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    create: state.createSurvey,\n    pages: state.createSurvey.pages,\n    title: state.createSurvey.title\n  };\n};\n\nexport default connect(mapStateToProps, {\n  AddQuestion,\n  ChangeTitle,\n  SubmitNewSurvey\n})(SurveyBuilder);","map":{"version":3,"sources":["/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/Containers/SurveyBuilder/SurveyBuilder.js"],"names":["React","Component","SurveyTitle","Question","Layout","SurveyBuilderWelcome","AddQuestion","SubmitNewSurvey","ChangeTitle","styleClass","MDBBtn","connect","AddQuestionFloating","Qtypes","SurveyBuilder","state","showSideEditor","focusedQuestion","submitting","showSideEditorHandler","index","setState","HideSideEditorHandler","SubmittingHandler","newVal","render","Qs","props","pages","questions","Questions","PageContent","length","map","_","title","e","target","value","create","window","setTimeout","history","push","TEXT","mapStateToProps","createSurvey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport SurveyTitle from \"../../Components/SurveyTitle/SurveyTitle\";\nimport Question from \"../../Components/Question/Question\";\nimport Layout from \"../../Components/Layout/Layout\";\nimport SurveyBuilderWelcome from \"../../Components/SurveyBuilderWelcome/SurveyBuilderWelcome\";\nimport {\n  AddQuestion,\n  SubmitNewSurvey,\n  ChangeTitle\n} from \"../../store/actions/BuilderAction\";\nimport styleClass from \"./SurveyBuilder.module.css\";\nimport \"./SurveyBuilder.css\";\nimport { MDBBtn } from \"mdbreact\";\nimport { connect } from \"react-redux\";\nimport AddQuestionFloating from \"../../Components/AddQuestionFloating/AddQuestionFloating\";\nimport * as Qtypes from \"../../Components/Question/QuestionTypes\";\n\nclass SurveyBuilder extends Component {\n  state = {\n    showSideEditor: false,\n    focusedQuestion: 0,\n    submitting: false\n  };\n\n  showSideEditorHandler = index => {\n    this.setState({\n      showSideEditor: true,\n      focusedQuestion: index\n    });\n  };\n  HideSideEditorHandler = () => {\n    this.setState({\n      showSideEditor: false\n    });\n  };\n  SubmittingHandler = newVal => {\n    // console.log(newVal);\n    this.setState({\n      submitting: newVal\n    });\n  };\n\n  render() {\n    const Qs = this.props.pages[0].questions;\n    let Questions = [];\n    let PageContent;\n    if (Qs.length > 0) {\n      Questions = Qs.map((_, index) => {\n        return (\n          <Question\n            key={index}\n            index={index}\n            clicked={() => this.showSideEditorHandler(index)}\n          />\n        );\n      });\n      PageContent = (\n        <React.Fragment>\n          <div className={styleClass.SurveyBuilder + \" \"}>\n            <SurveyTitle\n              value={this.props.title}\n              changed={e => this.props.ChangeTitle(e.target.value)}\n            />\n            {Questions}\n            <div className={styleClass.SurveyTitle}>\n              <MDBBtn\n                onClick={() => this.props.SubmitNewSurvey(this.props.create, window.setTimeout(() => this.props.history.push(`/surveys`),2000))}\n              >\n                SUBMIT\n              </MDBBtn>\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      PageContent = (\n        <SurveyBuilderWelcome\n          clicked={() => this.props.AddQuestion(Qtypes.TEXT)}\n        />\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <AddQuestionFloating text=\"Add Question\" />\n        <Layout>{PageContent}</Layout>\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    create: state.createSurvey,\n    pages: state.createSurvey.pages,\n    title: state.createSurvey.title\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { AddQuestion, ChangeTitle, SubmitNewSurvey }\n)(SurveyBuilder);\n"]},"metadata":{},"sourceType":"module"}