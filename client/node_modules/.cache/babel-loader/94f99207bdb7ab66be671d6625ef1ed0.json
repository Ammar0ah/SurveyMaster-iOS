{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _Input = _interopRequireDefault(require(\"./Input\"));\n\nvar _ErrorMessage = _interopRequireDefault(require(\"./ErrorMessage\"));\n\nvar _FormContext = _interopRequireWildcard(require(\"./FormContext\"));\n\nvar _FormControl = _interopRequireDefault(require(\"./_legacy/FormControl\"));\n\nvar _utils = require(\"./utils\");\n\nvar FormControl =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(FormControl, _React$Component);\n\n  function FormControl(_props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, _props, context) || this;\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleFieldChange\", function (value, event) {\n      var _this$props = _this.props,\n          name = _this$props.name,\n          onChange = _this$props.onChange;\n      var onFieldChange = _this.context.onFieldChange;\n\n      var checkTrigger = _this.getCheckTrigger();\n\n      var checkResult = _this.handleFieldCheck(value, checkTrigger === 'change');\n\n      _this.setState({\n        checkResult: checkResult,\n        value: value\n      });\n\n      onFieldChange(name, value, event);\n      onChange && onChange(value, event);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleFieldBlur\", function (event) {\n      var onBlur = _this.props.onBlur;\n\n      var checkTrigger = _this.getCheckTrigger();\n\n      var value = _this.getValue() || _this.state.value;\n\n      _this.handleFieldCheck(value, checkTrigger === 'blur');\n\n      onBlur && onBlur(event);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleFieldCheck\", function (value, isCheckTrigger, callback) {\n      var _this$props2 = _this.props,\n          name = _this$props2.name,\n          formValue = _this$props2.formValue;\n      var _this$context = _this.context,\n          onFieldError = _this$context.onFieldError,\n          onFieldSuccess = _this$context.onFieldSuccess,\n          model = _this$context.model;\n      var checkResult = model.checkForField(name, value, formValue);\n\n      if (isCheckTrigger) {\n        if (checkResult.hasError) {\n          onFieldError(name, checkResult.errorMessage, callback);\n        } else {\n          onFieldSuccess(name, callback);\n        }\n      }\n\n      return checkResult;\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"addPrefix\", function (name) {\n      return (0, _utils.prefix)(_this.props.classPrefix)(name);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"renderError\", function (formError, errorMessage) {\n      var _this$props3 = _this.props,\n          errorPlacement = _this$props3.errorPlacement,\n          name = _this$props3.name;\n\n      if (formError) {\n        errorMessage = formError[name];\n      }\n\n      return React.createElement(_ErrorMessage.default, {\n        show: !!errorMessage,\n        className: _this.addPrefix('message-wrapper'),\n        placement: errorPlacement\n      }, errorMessage);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"renderValue\", function () {\n      var _this$props4 = _this.props,\n          name = _this$props4.name,\n          Component = _this$props4.accepter,\n          props = (0, _objectWithoutPropertiesLoose2.default)(_this$props4, [\"name\", \"accepter\"]);\n      var _this$context$formDef = _this.context.formDefaultValue,\n          formDefaultValue = _this$context$formDef === void 0 ? {} : _this$context$formDef;\n      var unhandled = (0, _utils.getUnhandledProps)(FormControl, props);\n\n      var value = _this.getValue();\n\n      return React.createElement(Component, (0, _extends2.default)({}, unhandled, {\n        name: name,\n        onChange: _this.handleFieldChange,\n        onBlur: _this.handleFieldBlur,\n        defaultValue: formDefaultValue[name],\n        value: value\n      }));\n    });\n\n    if (!context || !context.onFieldChange) {\n      throw new Error(\"\\n        <FormControl> must be inside a component decorated with <Form>.\\n        And need to update React to 16.6.0 +.\\n      \");\n    }\n\n    var _context$formDefaultV = context.formDefaultValue,\n        _formDefaultValue = _context$formDefaultV === void 0 ? {} : _context$formDefaultV;\n\n    var _name = _props.name;\n    _this.state = {\n      checkResult: {},\n      value: _this.getValue(_props) || _formDefaultValue[_name]\n    };\n    return _this;\n  }\n\n  var _proto = FormControl.prototype;\n\n  _proto.getValue = function getValue(props) {\n    var _ref = props || this.props,\n        formValue = _ref.formValue,\n        name = _ref.name;\n\n    if (!formValue) {\n      return;\n    }\n\n    return formValue[name];\n  };\n\n  _proto.getCheckTrigger = function getCheckTrigger() {\n    var checkTrigger = this.context.checkTrigger;\n    return this.props.checkTrigger || checkTrigger;\n  };\n\n  _proto.checkErrorFromContext = function checkErrorFromContext() {\n    var errorFromContext = this.context.errorFromContext;\n    var errorMessage = this.props.errorMessage;\n\n    if (typeof errorMessage !== 'undefined') {\n      return this.renderError(undefined, errorMessage);\n    }\n\n    if (errorFromContext) {\n      return React.createElement(_FormContext.FormErrorContext.Consumer, null, this.renderError);\n    }\n\n    return null;\n  };\n\n  _proto.render = function render() {\n    return React.createElement(\"div\", {\n      className: this.addPrefix('wrapper')\n    }, this.renderValue(), this.checkErrorFromContext());\n  };\n\n  return FormControl;\n}(React.Component);\n\n(0, _defineProperty2.default)(FormControl, \"contextType\", _FormContext.default);\n(0, _defineProperty2.default)(FormControl, \"defaultProps\", {\n  accepter: _Input.default,\n  errorPlacement: 'bottomLeft'\n});\n(0, _defineProperty2.default)(FormControl, \"handledProps\", [\"accepter\", \"checkTrigger\", \"classPrefix\", \"errorMessage\", \"errorPlacement\", \"formValue\", \"name\", \"onBlur\", \"onChange\"]);\n\nvar FormControlWrapper =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  (0, _inheritsLoose2.default)(FormControlWrapper, _React$Component2);\n\n  function FormControlWrapper() {\n    return _React$Component2.apply(this, arguments) || this;\n  }\n\n  var _proto2 = FormControlWrapper.prototype;\n\n  _proto2.render = function render() {\n    var _this2 = this;\n\n    return React.createElement(_FormContext.FormValueContext.Consumer, null, function (formValue) {\n      return React.createElement(FormControl, (0, _extends2.default)({}, _this2.props, {\n        formValue: formValue\n      }));\n    });\n  };\n\n  return FormControlWrapper;\n}(React.Component);\n\n(0, _defineProperty2.default)(FormControlWrapper, \"handledProps\", []);\nvar EnhancedFormControl = (0, _utils.defaultProps)({\n  classPrefix: 'form-control'\n})(FormControlWrapper);\n\nvar _default = React.createContext ? EnhancedFormControl : _FormControl.default;\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}