{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _isNumber2 = _interopRequireDefault(require(\"lodash/isNumber\"));\n\nvar _isString2 = _interopRequireDefault(require(\"lodash/isString\"));\n\nvar _isNull2 = _interopRequireDefault(require(\"lodash/isNull\"));\n\nvar _isUndefined2 = _interopRequireDefault(require(\"lodash/isUndefined\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _domLib = require(\"dom-lib\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _utils = require(\"rsuite-utils/lib/utils\");\n\nvar _utils2 = require(\"../utils\");\n\nvar _stringToObject2 = _interopRequireDefault(require(\"../utils/stringToObject\"));\n\nvar _DropdownMenuItem = _interopRequireDefault(require(\"../_picker/DropdownMenuItem\"));\n\nvar DropdownMenu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(DropdownMenu, _React$Component);\n\n  function DropdownMenu() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"menus\", []);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleSelect\", function (layer, index, node, event) {\n      var _this$props = _this.props,\n          onSelect = _this$props.onSelect,\n          childrenKey = _this$props.childrenKey;\n      var children = node[childrenKey];\n      var isLeafNode = (0, _isUndefined2.default)(children) || (0, _isNull2.default)(children);\n      var items = (children || []).map(function (item) {\n        return (0, _extends2.default)({}, _this.stringToObject(item), {\n          parent: node\n        });\n      });\n\n      var _this$getCascadeItems = _this.getCascadeItems(items, layer + 1, node, isLeafNode),\n          cascadeItems = _this$getCascadeItems.cascadeItems,\n          cascadePathItems = _this$getCascadeItems.cascadePathItems;\n\n      onSelect && onSelect(node, cascadeItems, cascadePathItems, isLeafNode, event);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"addPrefix\", function (name) {\n      return (0, _utils2.prefix)(_this.props.classPrefix)(name);\n    });\n    return _this;\n  }\n\n  var _proto = DropdownMenu.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.scrollToActiveItemTop();\n  };\n\n  _proto.getCascadeItems = function getCascadeItems(items, layer, node, isLeafNode) {\n    var _this$props2 = this.props,\n        _this$props2$cascadeI = _this$props2.cascadeItems,\n        cascadeItems = _this$props2$cascadeI === void 0 ? [] : _this$props2$cascadeI,\n        cascadePathItems = _this$props2.cascadePathItems;\n    var nextItems = [];\n    var nextPathItems = [];\n\n    for (var i = 0; i < cascadeItems.length && i < layer; i += 1) {\n      nextItems.push(cascadeItems[i]);\n\n      if (i < layer - 1 && cascadePathItems) {\n        nextPathItems.push(cascadePathItems[i]);\n      }\n    }\n\n    nextPathItems.push(node);\n\n    if (!isLeafNode) {\n      nextItems.push(items);\n    }\n\n    return {\n      cascadeItems: nextItems,\n      cascadePathItems: nextPathItems\n    };\n  };\n\n  _proto.stringToObject = function stringToObject(value) {\n    var _this$props3 = this.props,\n        labelKey = _this$props3.labelKey,\n        valueKey = _this$props3.valueKey;\n    return (0, _stringToObject2.default)(value, labelKey, valueKey);\n  };\n\n  _proto.scrollToActiveItemTop = function scrollToActiveItemTop() {\n    var _this2 = this;\n\n    if (!this.menus) {\n      return;\n    }\n\n    this.menus.forEach(function (menu) {\n      if (!menu) {\n        return;\n      }\n\n      var activeItem = menu.querySelector(\".\" + _this2.addPrefix('item-focus'));\n\n      if (!activeItem) {\n        activeItem = menu.querySelector(\".\" + _this2.addPrefix('item-active'));\n      }\n\n      if (activeItem) {\n        var position = (0, _domLib.getPosition)(activeItem, menu);\n        (0, _domLib.scrollTop)(menu, position.top);\n      }\n    });\n  };\n\n  _proto.renderCascadeNode = function renderCascadeNode(node, index, layer, focus) {\n    var _this$props4 = this.props,\n        activeItemValue = _this$props4.activeItemValue,\n        valueKey = _this$props4.valueKey,\n        labelKey = _this$props4.labelKey,\n        childrenKey = _this$props4.childrenKey,\n        disabledItemValues = _this$props4.disabledItemValues,\n        renderMenuItem = _this$props4.renderMenuItem;\n    var children = node[childrenKey];\n    var value = node[valueKey];\n    var label = node[labelKey];\n    var disabled = disabledItemValues.some(function (disabledValue) {\n      return (0, _utils.shallowEqual)(disabledValue, value);\n    }); // Use `value` in keys when If `value` is string or number\n\n    var onlyKey = (0, _isString2.default)(value) || (0, _isNumber2.default)(value) ? value : index;\n    return React.createElement(_DropdownMenuItem.default, {\n      classPrefix: this.addPrefix('item'),\n      key: layer + \"-\" + onlyKey,\n      disabled: disabled,\n      active: !(0, _isUndefined2.default)(activeItemValue) && (0, _utils.shallowEqual)(activeItemValue, value),\n      focus: focus,\n      value: node,\n      className: children ? this.addPrefix('has-children') : undefined,\n      onSelect: this.handleSelect.bind(this, layer, index)\n    }, renderMenuItem ? renderMenuItem(label, node) : label, children ? React.createElement(\"span\", {\n      className: this.addPrefix('caret')\n    }) : null);\n  };\n\n  _proto.renderCascade = function renderCascade() {\n    var _this3 = this;\n\n    var _this$props5 = this.props,\n        menuWidth = _this$props5.menuWidth,\n        menuHeight = _this$props5.menuHeight,\n        valueKey = _this$props5.valueKey,\n        renderMenu = _this$props5.renderMenu,\n        _this$props5$cascadeI = _this$props5.cascadeItems,\n        cascadeItems = _this$props5$cascadeI === void 0 ? [] : _this$props5$cascadeI,\n        cascadePathItems = _this$props5.cascadePathItems;\n    var styles = {\n      width: cascadeItems.length * menuWidth\n    };\n    var cascadeNodes = cascadeItems.map(function (children, layer) {\n      var onlyKey = layer + \"_\" + children.length;\n      var menu = React.createElement(\"ul\", null, children.map(function (item, index) {\n        return _this3.renderCascadeNode(item, index, layer, cascadePathItems[layer] && (0, _utils.shallowEqual)(cascadePathItems[layer][valueKey], item[valueKey]));\n      }));\n      var parentNode = cascadePathItems[layer - 1];\n      var node = React.createElement(\"div\", {\n        key: onlyKey,\n        className: _this3.addPrefix('column'),\n        ref: function ref(_ref) {\n          _this3.menus[layer] = _ref;\n        },\n        style: {\n          height: menuHeight,\n          width: menuWidth\n        }\n      }, renderMenu ? renderMenu(children, menu, parentNode) : menu);\n      return node;\n    });\n    return React.createElement(\"div\", {\n      style: styles\n    }, cascadeNodes);\n  };\n\n  _proto.render = function render() {\n    var _this$props6 = this.props,\n        className = _this$props6.className,\n        rest = (0, _objectWithoutPropertiesLoose2.default)(_this$props6, [\"className\"]);\n    var classes = (0, _classnames.default)(this.addPrefix('items'), className);\n    var unhandled = (0, _utils2.getUnhandledProps)(DropdownMenu, rest);\n    return React.createElement(\"div\", (0, _extends2.default)({}, unhandled, {\n      className: classes\n    }), this.renderCascade());\n  };\n\n  return DropdownMenu;\n}(React.Component);\n\n(0, _defineProperty2.default)(DropdownMenu, \"defaultProps\", {\n  data: [],\n  disabledItemValues: [],\n  cascadeItems: [],\n  cascadePathItems: [],\n  menuWidth: 120,\n  menuHeight: 200,\n  childrenKey: 'children',\n  valueKey: 'value',\n  labelKey: 'label'\n});\n(0, _defineProperty2.default)(DropdownMenu, \"handledProps\", [\"activeItemValue\", \"cascadeItems\", \"cascadePathItems\", \"childrenKey\", \"className\", \"classPrefix\", \"data\", \"disabledItemValues\", \"labelKey\", \"menuHeight\", \"menuWidth\", \"onSelect\", \"renderMenu\", \"renderMenuItem\", \"valueKey\"]);\nvar _default = DropdownMenu;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}