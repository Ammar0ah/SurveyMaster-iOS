{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _utils = require('rsuite-utils/lib/utils');\n\nvar _core = require('../core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nvar _index = require('../constants/index');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar defaultPlacement = 'topRight';\nvar defaultTop = 24;\nvar defaultBottom = 24;\nvar defaultDuration = 4500;\nvar notityInstance = {};\nvar defaultClassPrefix = _index.namespace + '-notification';\nvar getContainer = void 0;\n\nvar addPrefix = function addPrefix(name) {\n  return (0, _utils.prefix)(defaultClassPrefix)(name);\n};\n\nfunction getPlacementStyle(config) {\n  var style = {};\n  var className = void 0;\n  var placement = config.placement || defaultPlacement;\n  var top = config.top || defaultTop;\n  var bottom = config.bottom || defaultBottom;\n\n  switch (placement) {\n    case _index.PLACEMENT_TYPES.TOPLEFT:\n      style = {\n        top: top,\n        left: 24\n      };\n      className = addPrefix('top-left');\n      break;\n\n    case _index.PLACEMENT_TYPES.TOPRIGHT:\n      style = {\n        top: top,\n        right: 24\n      };\n      className = addPrefix('top-right');\n      break;\n\n    case _index.PLACEMENT_TYPES.BOTTOMLEFT:\n      style = {\n        bottom: bottom,\n        left: 24\n      };\n      className = addPrefix('bottom-left');\n      break;\n\n    case _index.PLACEMENT_TYPES.BOTTOMRIGHT:\n      style = {\n        bottom: bottom,\n        right: 24\n      };\n      className = addPrefix('bottom-right');\n      break;\n\n    default:\n      style = {\n        top: top,\n        left: 24\n      };\n      break;\n  }\n\n  return {\n    style: style,\n    className: className\n  };\n}\n\nfunction getInstance(config, callback) {\n  var _className;\n\n  var className = (_className = {}, _defineProperty(_className, addPrefix('notify'), true), _defineProperty(_className, getPlacementStyle(config).className, true), _className);\n\n  _core2.default.newInstance({\n    style: getPlacementStyle(config).style,\n    className: (0, _classnames2.default)(className),\n    classPrefix: defaultClassPrefix,\n    getContainer: getContainer\n  }, callback);\n}\n/**\n *\n * @param {*} config: {} : title,description,style,duration,placement,top, bottom, onClose,type, key\n */\n\n\nfunction notice(config) {\n  var duration = void 0;\n  var description = config.description;\n  var placement = config.placement || defaultPlacement;\n\n  if (typeof description === 'function') {\n    description = description();\n  }\n\n  if (config.duration === undefined) {\n    duration = defaultDuration;\n  } else {\n    duration = config.duration;\n  }\n\n  var content = _react2.default.createElement('div', {\n    className: addPrefix('content')\n  }, _react2.default.createElement('div', {\n    className: addPrefix('title')\n  }, config.title), _react2.default.createElement('div', {\n    className: addPrefix('description')\n  }, description));\n\n  var noticeProps = _extends({\n    content: content,\n    duration: duration,\n    closable: true,\n    onClose: config.onClose,\n    key: config.key,\n    type: config.type\n  }, config);\n\n  var instance = notityInstance[placement];\n\n  if (!instance) {\n    getInstance(config, function (notificationInstance) {\n      notityInstance[placement] = notificationInstance;\n      notificationInstance.notice(noticeProps);\n    });\n  } else {\n    instance.notice(noticeProps);\n  }\n}\n\nnotice.handledProps = [];\nexports.default = {\n  open: function open(config) {\n    notice(config);\n  },\n  success: function success(config) {\n    config.type = _index.NOTICE_TYPES.SUCCESS;\n    notice(config);\n  },\n  error: function error(config) {\n    config.type = _index.NOTICE_TYPES.ERROR;\n    notice(config);\n  },\n  info: function info(config) {\n    config.type = _index.NOTICE_TYPES.INFO;\n    notice(config);\n  },\n  warning: function warning(config) {\n    config.type = _index.NOTICE_TYPES.WARNING;\n    notice(config);\n  },\n  remove: function remove(key) {\n    if (notityInstance[defaultPlacement]) {\n      notityInstance[defaultPlacement].remove(key);\n    }\n  },\n\n  /**\n   * 全局配置方法\n   * @param {*} options{\n   *  top,\n   *  bottom,\n   *  classPrefix,\n   *  duration,\n   *  getContainer\n   * }\n   */\n  config: function config(options) {\n    if (options.top !== undefined) {\n      defaultTop = options.top; // 如果存在实例，在设置新的top值后，需要将实例置空\n\n      notityInstance = {};\n    }\n\n    if (options.bottom !== undefined) {\n      defaultBottom = options.bottom;\n      notityInstance = {};\n    }\n\n    if (options.duration !== undefined) {\n      defaultDuration = options.duration;\n    }\n\n    if (options.classPrefix !== undefined) {\n      defaultClassPrefix = options.classPrefix;\n    }\n\n    if (options.getContainer !== undefined) {\n      getContainer = options.getContainer;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}