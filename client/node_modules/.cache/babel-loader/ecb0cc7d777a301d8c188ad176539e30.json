{"ast":null,"code":"var _jsxFileName = \"/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/Containers/Responses/Responses.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { previewResponses, getFullResponse } from \"../../store/actions/ResponsesActions\";\nimport ResponesList from '../../Components/Responses/ResponsesList/ResponsesList';\n\nclass Responses extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataLoaded: false\n    };\n\n    this.dataLoadedHandler = newVal => {\n      this.setState({\n        dataLoaded: newVal\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.previewResponses(this.props.match.params.id, this.dataLoadedHandler);\n  }\n\n  render() {\n    let content = null;\n    if (this.state.dataLoaded) content = React.createElement(ResponesList, {\n      list: this.props.data,\n      itemClicked: Rid => this.props.getFullResponse(this.props.match.params.id, Rid),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.responses.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  previewResponses,\n  getFullResponse\n})(Responses);","map":{"version":3,"sources":["/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/Containers/Responses/Responses.js"],"names":["React","Component","connect","previewResponses","getFullResponse","ResponesList","Responses","state","dataLoaded","dataLoadedHandler","newVal","setState","componentDidMount","props","match","params","id","render","content","data","Rid","mapStateToProps","responses"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,EAA0BC,eAA1B,QAAiD,sCAAjD;AACA,OAAOC,YAAP,MAAyB,wDAAzB;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCM,KADgC,GACxB;AACNC,MAAAA,UAAU,EAAE;AADN,KADwB;;AAAA,SAWhCC,iBAXgC,GAWZC,MAAM,IAAI;AAC5B,WAAKC,QAAL,CAAc;AACZH,QAAAA,UAAU,EAAEE;AADA,OAAd;AAGD,KAf+B;AAAA;;AAIhCE,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWV,gBAAX,CACE,KAAKU,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAD1B,EAEE,KAAKP,iBAFP;AAID;;AAODQ,EAAAA,MAAM,GAAG;AACP,QAAIC,OAAO,GAAG,IAAd;AACA,QAAI,KAAKX,KAAL,CAAWC,UAAf,EAA4BU,OAAO,GAAG,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWM,IAA/B;AAAqC,MAAA,WAAW,EAAGC,GAAD,IAAS,KAAKP,KAAL,CAAWT,eAAX,CAA2B,KAAKS,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAnD,EAAsDI,GAAtD,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACxB,WACJ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,OADL,CADI;AAIL;;AAvB+B;;AA0BlC,MAAMG,eAAe,GAAGd,KAAK,IAAI;AAC/B,SAAO;AACLY,IAAAA,IAAI,EAAEZ,KAAK,CAACe,SAAN,CAAgBH;AADjB,GAAP;AAGD,CAJD;;AAKA,eAAejB,OAAO,CACpBmB,eADoB,EAEpB;AAAElB,EAAAA,gBAAF;AAAmBC,EAAAA;AAAnB,CAFoB,CAAP,CAGbE,SAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { previewResponses,getFullResponse } from \"../../store/actions/ResponsesActions\";\nimport ResponesList from '../../Components/Responses/ResponsesList/ResponsesList'\n\nclass Responses extends Component {\n  state = {\n    dataLoaded: false\n  };\n  componentDidMount() {\n    this.props.previewResponses(\n      this.props.match.params.id,\n      this.dataLoadedHandler\n    );\n  }\n\n  dataLoadedHandler = newVal => {\n    this.setState({\n      dataLoaded: newVal\n    });\n  };\n  render() {\n    let content = null;\n    if (this.state.dataLoaded)  content = <ResponesList list={this.props.data} itemClicked={(Rid) => this.props.getFullResponse(this.props.match.params.id,Rid)}/>\n        return (\n    <React.Fragment>\n        {content}\n    </React.Fragment>);\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.responses.data\n  };\n};\nexport default connect(\n  mapStateToProps,\n  { previewResponses,getFullResponse }\n)(Responses);\n"]},"metadata":{},"sourceType":"module"}