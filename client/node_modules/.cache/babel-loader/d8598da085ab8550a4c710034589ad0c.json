{"ast":null,"code":"var _jsxFileName = \"/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/Components/Question/LinearScale/LinearScale.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { MDBRow, MDBCol, MDBInput } from \"mdbreact\";\nimport * as actions from \"../../../store/actions/types\";\n\nclass LinearScale extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    const index = this.props.index;\n    const content = this.props.pages[0].questions[index].content;\n    console.log(content);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Minimum\",\n      size: \"sm\",\n      type: \"number\",\n      value: content.min,\n      onChange: e => this.props.ChangeMinHandler(index, e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    })), React.createElement(MDBCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Maximum\",\n      size: \"sm\",\n      type: \"number\",\n      value: content.max,\n      onChange: e => this.props.ChangeMaxHandler(index, e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }))), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Steps\",\n      size: \"sm\",\n      type: \"number\",\n      value: content.step,\n      onChange: e => this.props.ChangeStepHandler(index, e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(MDBCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Default Value\",\n      size: \"sm\",\n      type: \"number\",\n      value: content.defalutValue,\n      onChange: e => this.props.ChangeDefaultValueHandler(index, e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pages: state.createSurvey.pages\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    ChangeMinHandler: (index, newVal) => dispatch({\n      type: actions.CHANGE_LINEAR_CONTENT,\n      content: actions.CHANGE_MIN_VALUE,\n      index: index,\n      val: newVal\n    }),\n    ChangeMaxHandler: (index, newVal) => {\n      console.log('nax');\n      dispatch({\n        type: actions.CHANGE_LINEAR_CONTENT,\n        content: actions.CHANGE_MAX_VALUE,\n        index: index,\n        val: newVal\n      });\n    },\n    ChangeStepHandler: (index, newVal) => dispatch({\n      type: actions.CHANGE_LINEAR_CONTENT,\n      content: actions.CHANGE_STEP_VALUE,\n      index: index,\n      val: newVal\n    }),\n    ChangeDefaultValueHandler: (index, newVal) => dispatch({\n      type: actions.CHANGE_LINEAR_CONTENT,\n      content: actions.CHANGE_DEFAULT_VALUE,\n      index: index,\n      val: newVal\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LinearScale);","map":{"version":3,"sources":["/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/Components/Question/LinearScale/LinearScale.js"],"names":["React","Component","connect","MDBRow","MDBCol","MDBInput","actions","LinearScale","state","render","index","props","content","pages","questions","console","log","min","e","ChangeMinHandler","target","value","max","ChangeMaxHandler","step","ChangeStepHandler","defalutValue","ChangeDefaultValueHandler","mapStateToProps","createSurvey","mapDispatchToProps","dispatch","newVal","type","CHANGE_LINEAR_CONTENT","CHANGE_MIN_VALUE","val","CHANGE_MAX_VALUE","CHANGE_STEP_VALUE","CHANGE_DEFAULT_VALUE"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { MDBRow, MDBCol, MDBInput } from \"mdbreact\";\nimport * as actions from \"../../../store/actions/types\";\n\n\nclass LinearScale extends Component {\n  state = {};\n  render() {\n    const index = this.props.index;\n    const content = this.props.pages[0].questions[index].content;\n    console.log(content)\n    return (\n      <div>\n        <MDBRow>\n          <MDBCol>\n            <MDBInput\n              label=\"Minimum\"\n              size=\"sm\"\n              type=\"number\"\n              value={content.min}\n              onChange={e => this.props.ChangeMinHandler(index, e.target.value)}\n            />\n          </MDBCol>\n          <MDBCol>\n            <MDBInput\n              label=\"Maximum\"\n              size=\"sm\"\n              type=\"number\"\n              value={content.max}\n              onChange={e => this.props.ChangeMaxHandler(index, e.target.value)}\n            />\n          </MDBCol>\n        </MDBRow>\n        <MDBRow>\n          <MDBCol>\n            <MDBInput\n              label=\"Steps\"\n              size=\"sm\"\n              type=\"number\"\n              value={content.step}\n              onChange={e => this.props.ChangeStepHandler(index, e.target.value)}\n            />\n          </MDBCol>\n          <MDBCol>\n            <MDBInput\n              label=\"Default Value\"\n              size=\"sm\"\n              type=\"number\"\n              value={content.defalutValue}\n              onChange={e => this.props.ChangeDefaultValueHandler(index, e.target.value)}\n            />\n          </MDBCol>\n        </MDBRow>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    pages: state.createSurvey.pages\n  };\n};\nconst mapDispatchToProps = dispatch => { \n    return { \n        ChangeMinHandler:(index, newVal) => dispatch({\n            type: actions.CHANGE_LINEAR_CONTENT,\n            content: actions.CHANGE_MIN_VALUE,\n            index: index,\n            val: newVal,\n\n        }) ,\n        ChangeMaxHandler: (index, newVal) => {\n            console.log('nax')\n            dispatch({\n            type: actions.CHANGE_LINEAR_CONTENT,\n            content: actions.CHANGE_MAX_VALUE,\n            index: index,\n            val: newVal,\n\n        })},\n        ChangeStepHandler: (index, newVal) => dispatch({\n            type: actions.CHANGE_LINEAR_CONTENT,\n            content: actions.CHANGE_STEP_VALUE,\n            index: index,\n            val: newVal,\n\n        }),\n        ChangeDefaultValueHandler: (index, newVal) => dispatch({\n            type: actions.CHANGE_LINEAR_CONTENT,\n            content: actions.CHANGE_DEFAULT_VALUE,\n            index: index,\n            val: newVal,\n\n        }),\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(LinearScale);\n"]},"metadata":{},"sourceType":"module"}