{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends3 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _kebabCase2 = _interopRequireDefault(require(\"lodash/kebabCase\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nfunction getToggleWrapperClassName(name, prefix, props, hasValue, classes) {\n  var _extends2;\n\n  var className = props.className,\n      placement = props.placement,\n      appearance = props.appearance,\n      cleanable = props.cleanable,\n      block = props.block,\n      disabled = props.disabled,\n      countable = props.countable;\n  return (0, _classnames.default)(className, prefix(name), prefix(appearance), prefix(\"placement-\" + (0, _kebabCase2.default)(placement)), prefix('toggle-wrapper'), (0, _extends3.default)((_extends2 = {}, _extends2[prefix('block')] = block, _extends2[prefix('has-value')] = hasValue, _extends2[prefix('disabled')] = disabled, _extends2[prefix('cleanable')] = hasValue && cleanable, _extends2[prefix('countable')] = countable, _extends2), classes));\n}\n\nvar _default = getToggleWrapperClassName;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}