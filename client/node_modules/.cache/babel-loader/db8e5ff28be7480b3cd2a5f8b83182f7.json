{"ast":null,"code":"var _jsxFileName = \"/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/Components/SurveyAnswersList/answerTypes/multiplechoice.jsx\";\nimport React, { Component } from \"react\";\nimport { Checkbox } from \"rsuite\";\nimport _ from \"lodash\";\n\nclass InputPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      choices: []\n    };\n\n    this.changedChoiceHandler = value => {\n      this.setState({\n        choices: this.editChoice(value)\n      }, () => {\n        this.props.change(this.state);\n        console.log(this.state.choices);\n      }); // let Choices = Object.assign([],this.state.choices)\n      //  this.props.throwState(this.state)\n    };\n\n    this.editChoice = value => {\n      if (this.state.choices.includes(value)) {\n        let index = this.state.choices.indexOf(value);\n        let newChoices = this.state.choices;\n        newChoices.splice(index, 1);\n        return newChoices;\n      } else return [...this.state.choices, value];\n    };\n  }\n\n  componentWillMount() {\n    this.choicesSentences = this.props.content.choices; //  this.props.change(this.state)\n  }\n\n  render() {\n    let Checkboxes = this.choicesSentences.map((c, i) => {\n      let content = this.props.isResponse ? React.createElement(Checkbox, {\n        disabled: true,\n        checked: _.includes(this.props.answer.choices, c),\n        key: i,\n        value: c,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, c) : React.createElement(Checkbox, {\n        key: i,\n        onChange: this.changedChoiceHandler,\n        value: c,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, c);\n      return content;\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, Checkboxes);\n  }\n\n}\n\nexport default InputPage;","map":{"version":3,"sources":["/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/Components/SurveyAnswersList/answerTypes/multiplechoice.jsx"],"names":["React","Component","Checkbox","_","InputPage","state","choices","changedChoiceHandler","value","setState","editChoice","props","change","console","log","includes","index","indexOf","newChoices","splice","componentWillMount","choicesSentences","content","render","Checkboxes","map","c","i","isResponse","answer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAGA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCI,KADgC,GACxB;AACNC,MAAAA,OAAO,EAAE;AADH,KADwB;;AAAA,SAQhCC,oBARgC,GAQTC,KAAK,IAAI;AAC9B,WAAKC,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE,KAAKI,UAAL,CAAgBF,KAAhB;AAAX,OAAd,EAAmD,MAAM;AACvD,aAAKG,KAAL,CAAWC,MAAX,CAAkB,KAAKP,KAAvB;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWC,OAAvB;AACD,OAHD,EAD8B,CAM9B;AACA;AACD,KAhB+B;;AAAA,SAiBhCI,UAjBgC,GAiBnBF,KAAK,IAAI;AACpB,UAAI,KAAKH,KAAL,CAAWC,OAAX,CAAmBS,QAAnB,CAA4BP,KAA5B,CAAJ,EAAwC;AACtC,YAAIQ,KAAK,GAAG,KAAKX,KAAL,CAAWC,OAAX,CAAmBW,OAAnB,CAA2BT,KAA3B,CAAZ;AACA,YAAIU,UAAU,GAAG,KAAKb,KAAL,CAAWC,OAA5B;AAEAY,QAAAA,UAAU,CAACC,MAAX,CAAkBH,KAAlB,EAAyB,CAAzB;AACA,eAAOE,UAAP;AACD,OAND,MAMO,OAAO,CAAC,GAAG,KAAKb,KAAL,CAAWC,OAAf,EAAwBE,KAAxB,CAAP;AACR,KAzB+B;AAAA;;AAIhCY,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,gBAAL,GAAwB,KAAKV,KAAL,CAAWW,OAAX,CAAmBhB,OAA3C,CADmB,CAEnB;AACD;;AAoBDiB,EAAAA,MAAM,GAAG;AACP,QAAIC,UAAU,GAAG,KAAKH,gBAAL,CAAsBI,GAAtB,CAA0B,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACnD,UAAIL,OAAO,GAAG,KAAKX,KAAL,CAAWiB,UAAX,GACZ,oBAAC,QAAD;AAAU,QAAA,QAAQ,MAAlB;AAAmB,QAAA,OAAO,EAAEzB,CAAC,CAACY,QAAF,CAAW,KAAKJ,KAAL,CAAWkB,MAAX,CAAkBvB,OAA7B,EAAqCoB,CAArC,CAA5B;AAAqE,QAAA,GAAG,EAAEC,CAA1E;AAA6E,QAAA,KAAK,EAAED,CAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,CADH,CADY,GAKZ,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEC,CAAf;AAAkB,QAAA,QAAQ,EAAE,KAAKpB,oBAAjC;AAAuD,QAAA,KAAK,EAAEmB,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,CADH,CALF;AASA,aAAOJ,OAAP;AACD,KAXgB,CAAjB;AAYA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAME,UAAN,CAAP;AACD;;AAzC+B;;AA4ClC,eAAepB,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Checkbox } from \"rsuite\";\nimport _ from \"lodash\";\n\n\nclass InputPage extends Component {\n  state = {\n    choices: []\n  };\n  componentWillMount() {\n    this.choicesSentences = this.props.content.choices;\n    //  this.props.change(this.state)\n  }\n  changedChoiceHandler = value => {\n    this.setState({ choices: this.editChoice(value) }, () => {\n      this.props.change(this.state);\n      console.log(this.state.choices);\n    });\n\n    // let Choices = Object.assign([],this.state.choices)\n    //  this.props.throwState(this.state)\n  };\n  editChoice = value => {\n    if (this.state.choices.includes(value)) {\n      let index = this.state.choices.indexOf(value);\n      let newChoices = this.state.choices;\n\n      newChoices.splice(index, 1);\n      return newChoices;\n    } else return [...this.state.choices, value];\n  };\n\n  render() {\n    let Checkboxes = this.choicesSentences.map((c, i) => {\n      let content = this.props.isResponse ? (\n        <Checkbox disabled checked={_.includes(this.props.answer.choices,c)} key={i} value={c} >\n          {c}\n        </Checkbox>\n      ) : (\n        <Checkbox key={i} onChange={this.changedChoiceHandler} value={c}>\n          {c}\n        </Checkbox>\n      );\n      return content;\n    });\n    return <div>{Checkboxes}</div>;\n  }\n}\n\nexport default InputPage;\n"]},"metadata":{},"sourceType":"module"}