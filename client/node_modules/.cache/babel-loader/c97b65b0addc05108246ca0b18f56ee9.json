{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Input = _interopRequireDefault(require(\"../Input\"));\n\nvar _ErrorMessage = _interopRequireDefault(require(\"../ErrorMessage\"));\n\nvar _utils = require(\"../utils\");\n\nvar FormControl =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(FormControl, _React$Component);\n\n  function FormControl(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleFieldChange\", function (value, event) {\n      var _this$props = _this.props,\n          name = _this$props.name,\n          onChange = _this$props.onChange;\n      var onFieldChange = _this.context.form.onFieldChange;\n\n      var checkTrigger = _this.getCheckTrigger();\n\n      var checkResult = _this.handleFieldCheck(value, checkTrigger === 'change');\n\n      _this.setState({\n        checkResult: checkResult,\n        value: value\n      });\n\n      onFieldChange(name, value, event);\n      onChange && onChange(value, event);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleFieldBlur\", function (event) {\n      var onBlur = _this.props.onBlur;\n\n      var checkTrigger = _this.getCheckTrigger();\n\n      _this.handleFieldCheck(_this.getValue(), checkTrigger === 'blur');\n\n      onBlur && onBlur(event);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleFieldCheck\", function (value, isCheckTrigger, callback) {\n      var name = _this.props.name;\n      var _this$context$form = _this.context.form,\n          onFieldError = _this$context$form.onFieldError,\n          onFieldSuccess = _this$context$form.onFieldSuccess,\n          model = _this$context$form.model,\n          formValue = _this$context$form.formValue;\n      var checkResult = model.checkForField(name, value, formValue);\n\n      if (isCheckTrigger) {\n        if (checkResult.hasError) {\n          onFieldError(name, checkResult.errorMessage, callback);\n        } else {\n          onFieldSuccess(name, callback);\n        }\n      }\n\n      return checkResult;\n    });\n\n    if (!context.form) {\n      throw new Error('FormControl must be inside a component decorated with <Form>');\n    }\n\n    var _context$form = context.form,\n        _context$form$formVal = _context$form.formValue,\n        _formValue = _context$form$formVal === void 0 ? {} : _context$form$formVal,\n        _context$form$formDef = _context$form.formDefaultValue,\n        formDefaultValue = _context$form$formDef === void 0 ? {} : _context$form$formDef;\n\n    var _name = props.name;\n    _this.state = {\n      checkResult: {},\n      value: _formValue[_name] || formDefaultValue[_name]\n    };\n    return _this;\n  }\n\n  var _proto = FormControl.prototype;\n\n  _proto.getValue = function getValue() {\n    var formValue = this.context.form.formValue;\n    var name = this.props.name;\n\n    if (formValue && typeof formValue[name] !== 'undefined') {\n      return formValue[name];\n    }\n\n    return this.state.value;\n  };\n\n  _proto.getErrorMessage = function getErrorMessage() {\n    var _this$context$form2 = this.context.form,\n        formError = _this$context$form2.formError,\n        errorFromContext = _this$context$form2.errorFromContext;\n    var _this$props2 = this.props,\n        name = _this$props2.name,\n        errorMessage = _this$props2.errorMessage;\n\n    if (errorMessage) {\n      return errorMessage;\n    }\n\n    if (errorFromContext) {\n      return formError ? formError[name] : null;\n    }\n\n    return null;\n  };\n\n  _proto.getCheckTrigger = function getCheckTrigger() {\n    var checkTrigger = this.context.form.checkTrigger;\n    return this.props.checkTrigger || checkTrigger;\n  };\n\n  _proto.render = function render() {\n    var _this$props3 = this.props,\n        name = _this$props3.name,\n        Component = _this$props3.accepter,\n        classPrefix = _this$props3.classPrefix,\n        errorPlacement = _this$props3.errorPlacement,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props3, [\"name\", \"accepter\", \"classPrefix\", \"errorPlacement\"]);\n    var _this$context$form3 = this.context.form,\n        _this$context$form3$f = _this$context$form3.formValue,\n        formValue = _this$context$form3$f === void 0 ? {} : _this$context$form3$f,\n        _this$context$form3$f2 = _this$context$form3.formDefaultValue,\n        formDefaultValue = _this$context$form3$f2 === void 0 ? {} : _this$context$form3$f2;\n    var unhandled = (0, _utils.getUnhandledProps)(FormControl, props);\n    var addPrefix = (0, _utils.prefix)(classPrefix);\n    var errorMessage = this.getErrorMessage();\n    var hasError = !!errorMessage;\n    return React.createElement(\"div\", {\n      className: addPrefix('wrapper')\n    }, React.createElement(Component, (0, _extends2.default)({}, unhandled, {\n      name: name,\n      onChange: this.handleFieldChange,\n      onBlur: this.handleFieldBlur,\n      defaultValue: formDefaultValue[name],\n      value: formValue[name]\n    })), React.createElement(_ErrorMessage.default, {\n      show: hasError,\n      className: addPrefix('message-wrapper'),\n      placement: errorPlacement\n    }, errorMessage));\n  };\n\n  return FormControl;\n}(React.Component);\n\n(0, _defineProperty2.default)(FormControl, \"defaultProps\", {\n  accepter: _Input.default,\n  errorPlacement: 'bottomLeft'\n});\n(0, _defineProperty2.default)(FormControl, \"contextTypes\", {\n  form: _propTypes.default.object\n});\n(0, _defineProperty2.default)(FormControl, \"handledProps\", [\"accepter\", \"checkTrigger\", \"classPrefix\", \"errorMessage\", \"errorPlacement\", \"name\", \"onBlur\", \"onChange\"]);\n\nvar _default = (0, _utils.defaultProps)({\n  classPrefix: 'form-control'\n})(FormControl);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}