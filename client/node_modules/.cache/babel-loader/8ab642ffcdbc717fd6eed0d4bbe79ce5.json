{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _wrapDisplayName = _interopRequireDefault(require(\"recompose/wrapDisplayName\"));\n\nvar _recompose = require(\"recompose\");\n\nvar _prefix = _interopRequireDefault(require(\"./prefix\"));\n\nvar _constants = require(\"./constants\");\n\nvar withStyleProps = function withStyleProps(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return function (Component) {\n    var _options = options,\n        hasSize = _options.hasSize,\n        hasStatus = _options.hasStatus,\n        hasColor = _options.hasColor,\n        defaultColor = _options.defaultColor;\n\n    var WithStyleProps =\n    /*#__PURE__*/\n    function (_React$Component) {\n      (0, _inheritsLoose2.default)(WithStyleProps, _React$Component);\n\n      function WithStyleProps() {\n        return _React$Component.apply(this, arguments) || this;\n      }\n\n      var _proto = WithStyleProps.prototype;\n\n      _proto.render = function render() {\n        var _classNames;\n\n        var _this$props = this.props,\n            classPrefix = _this$props.classPrefix,\n            size = _this$props.size,\n            color = _this$props.color,\n            status = _this$props.status,\n            innerRef = _this$props.innerRef,\n            className = _this$props.className,\n            props = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"classPrefix\", \"size\", \"color\", \"status\", \"innerRef\", \"className\"]);\n        var addPrefix = (0, _prefix.default)(classPrefix);\n        var classes = (0, _classnames.default)(className, (_classNames = {}, _classNames[addPrefix(size)] = hasSize && size, _classNames[addPrefix(color)] = hasColor && color, _classNames[addPrefix(defaultColor)] = !color, _classNames[addPrefix(status)] = hasStatus && status, _classNames));\n        return React.createElement(Component, (0, _extends2.default)({}, props, {\n          classPrefix: classPrefix,\n          className: classes,\n          ref: innerRef\n        }));\n      };\n\n      return WithStyleProps;\n    }(React.Component);\n\n    (0, _defineProperty2.default)(WithStyleProps, \"displayName\", (0, _wrapDisplayName.default)(Component, 'withStyleProps'));\n    (0, _defineProperty2.default)(WithStyleProps, \"defaultProps\", Component.defaultProps);\n    (0, _defineProperty2.default)(WithStyleProps, \"handledProps\", []);\n    var propTypes = {\n      innerRef: _propTypes.default.func\n    };\n\n    if (hasSize) {\n      propTypes.size = _propTypes.default.oneOf(_constants.SIZE);\n    }\n\n    if (hasColor) {\n      propTypes.color = _propTypes.default.oneOf(_constants.COLOR);\n    }\n\n    if (hasStatus) {\n      propTypes.status = _propTypes.default.oneOf(_constants.STATUS);\n    }\n\n    (0, _recompose.setPropTypes)(propTypes)(WithStyleProps);\n    return WithStyleProps;\n  };\n};\n\nwithStyleProps.handledProps = [];\nvar _default = withStyleProps;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}