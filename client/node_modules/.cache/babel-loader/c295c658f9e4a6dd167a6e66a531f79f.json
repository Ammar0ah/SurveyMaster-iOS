{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Type2 = require('./Type');\n\nvar _Type3 = _interopRequireDefault(_Type2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nvar DateType = function (_Type) {\n  _inherits(DateType, _Type);\n\n  DateType.from = function from(n) {\n    return n;\n  };\n\n  function DateType() {\n    var errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Please enter a valid date';\n\n    _classCallCheck(this, DateType);\n\n    var _this = _possibleConstructorReturn(this, _Type.call(this, 'date'));\n\n    _Type.prototype.pushCheck.call(_this, function (value) {\n      return !/Invalid|NaN/.test(new Date(value));\n    }, errorMessage);\n\n    return _this;\n  }\n\n  DateType.prototype.range = function range(min, max, errorMessage) {\n    _Type.prototype.pushCheck.call(this, function (value) {\n      return new Date(value) >= new Date(min) && new Date(value) <= new Date(max);\n    }, errorMessage);\n\n    return this;\n  };\n\n  DateType.prototype.min = function min(_min, errorMessage) {\n    _Type.prototype.pushCheck.call(this, function (value) {\n      return new Date(value) >= new Date(_min);\n    }, errorMessage);\n\n    return this;\n  };\n\n  DateType.prototype.max = function max(_max, errorMessage) {\n    _Type.prototype.pushCheck.call(this, function (value) {\n      return new Date(value) <= new Date(_max);\n    }, errorMessage);\n\n    return this;\n  };\n\n  return DateType;\n}(_Type3.default);\n\nexports.default = function (errorMessage) {\n  return new DateType(errorMessage);\n};","map":null,"metadata":{},"sourceType":"script"}