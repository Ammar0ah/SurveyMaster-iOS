{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _get2 = _interopRequireDefault(require(\"lodash/get\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _Tooltip = _interopRequireDefault(require(\"./Tooltip\"));\n\nvar _Icon = _interopRequireDefault(require(\"./Icon\"));\n\nvar _Whisper = _interopRequireDefault(require(\"./Whisper\"));\n\nvar _utils = require(\"./utils\");\n\nvar HelpBlock =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(HelpBlock, _React$Component);\n\n  function HelpBlock() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = HelpBlock.prototype;\n\n  _proto.render = function render() {\n    var _classNames;\n\n    var controlId = (0, _get2.default)(this.context, 'formGroup.controlId');\n    var _this$props = this.props,\n        className = _this$props.className,\n        tooltip = _this$props.tooltip,\n        children = _this$props.children,\n        _this$props$htmlFor = _this$props.htmlFor,\n        htmlFor = _this$props$htmlFor === void 0 ? controlId : _this$props$htmlFor,\n        classPrefix = _this$props.classPrefix,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"className\", \"tooltip\", \"children\", \"htmlFor\", \"classPrefix\"]);\n    var addPrefix = (0, _utils.prefix)(classPrefix);\n    var classes = (0, _classnames.default)(classPrefix, className, (_classNames = {}, _classNames[addPrefix('tooltip')] = tooltip, _classNames));\n\n    if (tooltip) {\n      return React.createElement(_Whisper.default, {\n        placement: \"topRight\",\n        speaker: React.createElement(_Tooltip.default, null, children)\n      }, React.createElement(\"span\", (0, _extends2.default)({\n        className: classes\n      }, props), React.createElement(_Icon.default, {\n        icon: \"question-circle-o\"\n      })));\n    }\n\n    return React.createElement(\"span\", (0, _extends2.default)({}, props, {\n      className: classes,\n      htmlFor: htmlFor\n    }), children);\n  };\n\n  return HelpBlock;\n}(React.Component);\n\n(0, _defineProperty2.default)(HelpBlock, \"contextTypes\", {\n  formGroup: _propTypes.default.object\n});\n(0, _defineProperty2.default)(HelpBlock, \"handledProps\", [\"children\", \"className\", \"classPrefix\", \"htmlFor\", \"tooltip\"]);\n\nvar _default = (0, _utils.defaultProps)({\n  classPrefix: 'help-block'\n})(HelpBlock);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}