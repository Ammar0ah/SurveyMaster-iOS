{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _kebabCase2 = _interopRequireDefault(require(\"lodash/kebabCase\"));\n\nvar _get2 = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _trim2 = _interopRequireDefault(require(\"lodash/trim\"));\n\nvar _isUndefined2 = _interopRequireDefault(require(\"lodash/isUndefined\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _setStatic = _interopRequireDefault(require(\"recompose/setStatic\"));\n\nvar _shallowEqual = _interopRequireDefault(require(\"rsuite-utils/lib/utils/shallowEqual\"));\n\nvar _Input = _interopRequireDefault(require(\"./Input\"));\n\nvar _AutoCompleteItem = _interopRequireDefault(require(\"./AutoCompleteItem\"));\n\nvar _utils = require(\"./utils\");\n\nvar _prefix = require(\"./utils/prefix\");\n\nvar _picker = require(\"./_picker\");\n\nvar AutoComplete =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(AutoComplete, _React$Component);\n\n  function AutoComplete(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"getFocusableMenuItems\", function () {\n      var data = _this.getData();\n\n      if (!data) {\n        return [];\n      }\n\n      return data.filter(_this.shouldDisplay);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"trigger\", null);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"menuContainer\", null);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"shouldDisplay\", function (item) {\n      var value = _this.getValue();\n\n      if (!(0, _trim2.default)(value)) {\n        return false;\n      }\n\n      var keyword = (value || '').toLocaleLowerCase();\n      return item.label.toLocaleLowerCase().indexOf(keyword) >= 0;\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleChange\", function (value, event) {\n      var nextState = {\n        focus: true,\n        focusItemValue: undefined,\n        value: value\n      };\n\n      _this.setState(nextState);\n\n      _this.handleChangeValue(value, event);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleInputFocus\", function (event) {\n      var onFocus = _this.props.onFocus;\n\n      _this.open();\n\n      onFocus && onFocus(event);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleInputBlur\", function (event) {\n      var onBlur = _this.props.onBlur;\n      setTimeout(_this.close, 300);\n      onBlur && onBlur(event);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"focusNextMenuItem\", function (event) {\n      var onMenuFocus = _this.props.onMenuFocus;\n\n      _this.findNode(function (items, index) {\n        var item = items[index + 1];\n\n        if (!(0, _isUndefined2.default)(item)) {\n          var _focusItemValue = item.value;\n\n          _this.setState({\n            focusItemValue: _focusItemValue\n          });\n\n          onMenuFocus && onMenuFocus(_focusItemValue, event);\n        }\n      });\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"focusPrevMenuItem\", function (event) {\n      var onMenuFocus = _this.props.onMenuFocus;\n\n      _this.findNode(function (items, index) {\n        var item = items[index - 1];\n\n        if (!(0, _isUndefined2.default)(item)) {\n          var _focusItemValue2 = item.value;\n\n          _this.setState({\n            focusItemValue: _focusItemValue2\n          });\n\n          onMenuFocus && onMenuFocus(_focusItemValue2, event);\n        }\n      });\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"selectFocusMenuItem\", function (event) {\n      var _this$state = _this.state,\n          focusItemValue = _this$state.focusItemValue,\n          prevValue = _this$state.value;\n\n      if (!focusItemValue) {\n        return;\n      }\n\n      var nextState = {\n        value: focusItemValue,\n        focusItemValue: focusItemValue\n      };\n\n      var data = _this.getData();\n\n      var focusItem = data.find(function (item) {\n        return (0, _get2.default)(item, 'value') === focusItemValue;\n      });\n\n      _this.setState(nextState);\n\n      _this.handleSelect(focusItem, event);\n\n      if (prevValue !== focusItemValue) {\n        _this.handleChangeValue(focusItemValue, event);\n      }\n\n      _this.close();\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"close\", function () {\n      _this.setState({\n        focus: false\n      }, _this.props.onClose);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"open\", function () {\n      _this.setState({\n        focus: true\n      }, _this.props.onOpen);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleKeyDown\", function (event) {\n      if (!_this.menuContainer) {\n        return;\n      }\n\n      var _this$props = _this.props,\n          onKeyDown = _this$props.onKeyDown,\n          selectOnEnter = _this$props.selectOnEnter;\n      (0, _picker.onMenuKeyDown)(event, {\n        down: _this.focusNextMenuItem,\n        up: _this.focusPrevMenuItem,\n        enter: selectOnEnter ? _this.selectFocusMenuItem : undefined,\n        esc: _this.close\n      });\n      onKeyDown && onKeyDown(event);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleChangeValue\", function (value, event) {\n      var onChange = _this.props.onChange;\n      onChange && onChange(value, event);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleSelect\", function (item, event) {\n      var onSelect = _this.props.onSelect;\n      onSelect && onSelect(item, event);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleItemSelect\", function (item, event) {\n      var value = item.value;\n      var prevValue = _this.state.value;\n      var nextState = {\n        value: value,\n        focusItemValue: value\n      };\n\n      _this.setState(nextState);\n\n      _this.handleSelect(item, event);\n\n      if (prevValue !== value) {\n        _this.handleChangeValue(value, event);\n      }\n\n      _this.close();\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"addPrefix\", function (name) {\n      return (0, _utils.prefix)(_this.props.classPrefix)(name);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"menuContainerRef\", function (ref) {\n      _this.menuContainer = ref;\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"triggerRef\", function (ref) {\n      _this.trigger = ref;\n    });\n    var defaultValue = props.defaultValue;\n    _this.state = {\n      value: defaultValue || '',\n      focus: false,\n      focusItemValue: defaultValue\n    };\n    return _this;\n  }\n\n  var _proto = AutoComplete.prototype;\n\n  _proto.getValue = function getValue() {\n    var value = this.props.value;\n    return (0, _isUndefined2.default)(value) ? this.state.value : value;\n  };\n\n  _proto.getData = function getData(props) {\n    var _ref = props || this.props,\n        data = _ref.data;\n\n    if (!data) {\n      return [];\n    }\n\n    return data.map(function (item) {\n      if (typeof item === 'string') {\n        return {\n          value: item,\n          label: item\n        };\n      }\n\n      if (typeof item === 'object') {\n        return item;\n      }\n    });\n  };\n\n  _proto.findNode = function findNode(focus) {\n    var items = this.getFocusableMenuItems();\n    var focusItemValue = this.state.focusItemValue;\n\n    for (var i = 0; i < items.length; i += 1) {\n      if ((0, _shallowEqual.default)(focusItemValue, items[i].value)) {\n        focus(items, i);\n        return;\n      }\n    }\n\n    focus(items, -1);\n  };\n\n  _proto.renderDropdownMenu = function renderDropdownMenu() {\n    var _this2 = this;\n\n    var _this$props2 = this.props,\n        placement = _this$props2.placement,\n        renderItem = _this$props2.renderItem,\n        menuClassName = _this$props2.menuClassName;\n    var data = this.getData();\n    var focusItemValue = this.state.focusItemValue;\n    var classes = (0, _classnames.default)(this.addPrefix('menu'), menuClassName, (0, _prefix.getClassNamePrefix)() + \"placement-\" + (0, _kebabCase2.default)(placement));\n    var items = data.filter(this.shouldDisplay);\n    return React.createElement(_picker.MenuWrapper, {\n      className: classes,\n      onKeyDown: this.handleKeyDown,\n      ref: this.menuContainerRef\n    }, React.createElement(\"ul\", {\n      role: \"menu\"\n    }, items.map(function (item) {\n      return React.createElement(_AutoCompleteItem.default, {\n        key: item.value,\n        focus: focusItemValue === item.value,\n        itemData: item,\n        onSelect: _this2.handleItemSelect,\n        renderItem: renderItem\n      }, item.label);\n    })));\n  };\n\n  _proto.render = function render() {\n    var _classNames;\n\n    var _this$props3 = this.props,\n        disabled = _this$props3.disabled,\n        className = _this$props3.className,\n        classPrefix = _this$props3.classPrefix,\n        open = _this$props3.open,\n        style = _this$props3.style,\n        rest = (0, _objectWithoutPropertiesLoose2.default)(_this$props3, [\"disabled\", \"className\", \"classPrefix\", \"open\", \"style\"]);\n    var data = this.getData();\n    var value = this.getValue();\n    var unhandled = (0, _utils.getUnhandledProps)(AutoComplete, rest);\n    var classes = (0, _classnames.default)(classPrefix, className, (_classNames = {}, _classNames[this.addPrefix('disabled')] = disabled, _classNames));\n    var hasItems = data.filter(this.shouldDisplay).length > 0;\n    return React.createElement(\"div\", {\n      className: classes,\n      style: style\n    }, React.createElement(_picker.PickerToggleTrigger, {\n      pickerProps: this.props,\n      innerRef: this.triggerRef,\n      trigger: ['click', 'focus'],\n      open: open || this.state.focus && hasItems,\n      speaker: this.renderDropdownMenu()\n    }, React.createElement(_Input.default, (0, _extends2.default)({}, unhandled, {\n      disabled: disabled,\n      value: value,\n      onBlur: this.handleInputBlur,\n      onFocus: this.handleInputFocus,\n      onChange: this.handleChange,\n      onKeyDown: this.handleKeyDown\n    }))));\n  };\n\n  return AutoComplete;\n}(React.Component);\n\n(0, _defineProperty2.default)(AutoComplete, \"defaultProps\", {\n  data: [],\n  placement: 'bottomLeft',\n  selectOnEnter: true\n});\n(0, _defineProperty2.default)(AutoComplete, \"handledProps\", [\"className\", \"classPrefix\", \"data\", \"defaultValue\", \"disabled\", \"menuClassName\", \"onBlur\", \"onChange\", \"onClose\", \"onFocus\", \"onHide\", \"onKeyDown\", \"onMenuFocus\", \"onOpen\", \"onSelect\", \"open\", \"placement\", \"renderItem\", \"selectOnEnter\", \"style\", \"value\"]);\nvar EnhancedAutoComplete = (0, _utils.defaultProps)({\n  classPrefix: 'auto-complete'\n})(AutoComplete);\n(0, _setStatic.default)('Item', _AutoCompleteItem.default)(AutoComplete);\nvar _default = EnhancedAutoComplete;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}