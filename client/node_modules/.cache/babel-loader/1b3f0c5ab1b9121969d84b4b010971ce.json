{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _compose = _interopRequireDefault(require(\"recompose/compose\"));\n\nvar _Button = _interopRequireDefault(require(\"./Button\"));\n\nvar _utils = require(\"./utils\");\n\nvar ButtonGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(ButtonGroup, _React$Component);\n\n  function ButtonGroup() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ButtonGroup.prototype;\n\n  _proto.render = function render() {\n    var _classNames;\n\n    var _this$props = this.props,\n        className = _this$props.className,\n        vertical = _this$props.vertical,\n        children = _this$props.children,\n        block = _this$props.block,\n        justified = _this$props.justified,\n        classPrefix = _this$props.classPrefix,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"className\", \"vertical\", \"children\", \"block\", \"justified\", \"classPrefix\"]);\n    var addPrefix = (0, _utils.prefix)(classPrefix);\n    var classes = (0, _classnames.default)(classPrefix, className, (_classNames = {}, _classNames[addPrefix('block')] = block, _classNames[addPrefix('vertical')] = vertical, _classNames[addPrefix('justified')] = justified, _classNames));\n    /**\n     * After you set up justified, you use the table layout.\n     * display:table-cell not working on button element.\n     * So change 'a'\n     */\n\n    var items = children;\n\n    if (justified) {\n      items = React.Children.map(children, function (child) {\n        return React.cloneElement(child, {\n          componentClass: 'a',\n          role: 'button'\n        });\n      });\n    }\n\n    return React.createElement(\"div\", (0, _extends2.default)({\n      role: \"group\"\n    }, props, {\n      className: classes\n    }), items);\n  };\n\n  return ButtonGroup;\n}(React.Component);\n\n(0, _defineProperty2.default)(ButtonGroup, \"handledProps\", [\"block\", \"children\", \"className\", \"classPrefix\", \"justified\", \"vertical\"]);\n\nvar _default = (0, _compose.default)((0, _utils.withStyleProps)({\n  hasSize: true\n}), (0, _utils.defaultProps)({\n  classPrefix: 'btn-group'\n}))(ButtonGroup);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}