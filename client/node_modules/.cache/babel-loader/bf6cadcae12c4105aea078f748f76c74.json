{"ast":null,"code":"var _jsxFileName = \"/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/Containers/SurveyBuilder/SurveyBuilder.js\";\nimport React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport SurveyTitle from \"../../Components/SurveyTitle/SurveyTitle\";\nimport Question from \"../../Components/Question/Question\";\nimport Layout from \"../../Components/Layout/Layout\";\nimport SurveyBuilderWelcome from \"../../Components/SurveyBuilderWelcome/SurveyBuilderWelcome\";\nimport { AddQuestion, SubmitNewSurvey, ChangeTitle } from \"../../store/actions/BuilderAction\";\nimport styleClass from \"./SurveyBuilder.module.css\";\nimport \"./SurveyBuilder.css\";\nimport { MDBBtn } from \"mdbreact\";\nimport { connect } from \"react-redux\";\nimport AddQuestionFloating from \"../../Components/AddQuestionFloating/AddQuestionFloating\";\nimport * as Qtypes from \"../../Components/Question/QuestionTypes\";\n\nclass SurveyBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showSideEditor: false,\n      focusedQuestion: 0\n    };\n\n    this.showSideEditorHandler = index => {\n      this.setState({\n        showSideEditor: true,\n        focusedQuestion: index\n      });\n    };\n\n    this.HideSideEditorHandler = () => {\n      this.setState({\n        showSideEditor: false\n      });\n    };\n  }\n\n  render() {\n    const Qs = this.props.pages[0].questions;\n    let Questions = [];\n    let sideEditor = null;\n    let PageContent;\n\n    if (Qs.length > 0) {\n      Questions = Qs.map((_, index) => {\n        return React.createElement(Question, {\n          key: index,\n          index: index,\n          clicked: () => this.showSideEditorHandler(index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n      });\n      PageContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styleClass.SurveyBuilder + \" \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(SurveyTitle, {\n        value: this.props.title,\n        changed: e => this.props.ChangeTitle(e.target.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), Questions, React.createElement(\"div\", {\n        className: styleClass.SurveyTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        onClick: () => this.props.SubmitNewSurvey(this.props.create, window.setTimeout(() => this.props.history.push(\"/surveys\"), 1000)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"SUBMIT\"))));\n    } else {\n      PageContent = React.createElement(SurveyBuilderWelcome, {\n        clicked: () => this.props.AddQuestion(Qtypes.TEXT),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(AddQuestionFloating, {\n      text: \"Add Question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Layout, {\n      sideOpened:\n      /*this.state.showSideEditor*/\n      false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, PageContent));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    create: state.createSurvey,\n    pages: state.createSurvey.pages,\n    title: state.createSurvey.title\n  };\n};\n\nexport default connect(mapStateToProps, {\n  AddQuestion,\n  ChangeTitle,\n  SubmitNewSurvey\n})(SurveyBuilder);","map":{"version":3,"sources":["/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/Containers/SurveyBuilder/SurveyBuilder.js"],"names":["React","Component","Redirect","SurveyTitle","Question","Layout","SurveyBuilderWelcome","AddQuestion","SubmitNewSurvey","ChangeTitle","styleClass","MDBBtn","connect","AddQuestionFloating","Qtypes","SurveyBuilder","state","showSideEditor","focusedQuestion","showSideEditorHandler","index","setState","HideSideEditorHandler","render","Qs","props","pages","questions","Questions","sideEditor","PageContent","length","map","_","title","e","target","value","create","window","setTimeout","history","push","TEXT","mapStateToProps","createSurvey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom'\n\nimport SurveyTitle from \"../../Components/SurveyTitle/SurveyTitle\";\nimport Question from \"../../Components/Question/Question\";\nimport Layout from \"../../Components/Layout/Layout\";\nimport SurveyBuilderWelcome from \"../../Components/SurveyBuilderWelcome/SurveyBuilderWelcome\";\nimport {AddQuestion,SubmitNewSurvey,ChangeTitle} from \"../../store/actions/BuilderAction\";\nimport styleClass from \"./SurveyBuilder.module.css\";\nimport \"./SurveyBuilder.css\";\nimport { MDBBtn } from \"mdbreact\";\nimport { connect } from \"react-redux\";\nimport AddQuestionFloating from \"../../Components/AddQuestionFloating/AddQuestionFloating\";\nimport * as Qtypes from \"../../Components/Question/QuestionTypes\";\n\n\nclass SurveyBuilder extends Component {\n  state = {\n    showSideEditor: false,\n    focusedQuestion: 0\n  };\n\n  showSideEditorHandler = index => {\n    this.setState({\n      showSideEditor: true,\n      focusedQuestion: index\n    });\n  };\n  HideSideEditorHandler = () => {\n    this.setState({\n      showSideEditor: false\n    });\n  };\n\n  render() {\n    const Qs = this.props.pages[0].questions;\n    let Questions = [];\n    let sideEditor = null;\n    let PageContent;\n    if (Qs.length > 0) {\n      Questions = Qs.map((_, index) => {\n        return (\n          <Question\n            key={index}\n            index={index}\n            clicked={() => this.showSideEditorHandler(index)}\n          />\n        );\n      });\n      PageContent = (\n        <React.Fragment>\n          <div className={styleClass.SurveyBuilder + \" \"}>\n            <SurveyTitle value={this.props.title} changed={(e) => this.props.ChangeTitle(e.target.value)}/>\n            {Questions}\n            <div className={styleClass.SurveyTitle}>\n              <MDBBtn\n                onClick={() => this.props.SubmitNewSurvey(this.props.create, window.setTimeout(() => this.props.history.push(`/surveys`),1000))}\n              >\n                SUBMIT\n              </MDBBtn>\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      PageContent = (\n        <SurveyBuilderWelcome clicked={() => this.props.AddQuestion(Qtypes.TEXT)} />\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <AddQuestionFloating text=\"Add Question\"/>\n            <Layout sideOpened={/*this.state.showSideEditor*/ false}>\n              {PageContent}\n            </Layout>\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    create: state.createSurvey,\n    pages: state.createSurvey.pages,\n    title: state.createSurvey.title\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { AddQuestion,ChangeTitle,SubmitNewSurvey }\n)(SurveyBuilder);\n"]},"metadata":{},"sourceType":"module"}