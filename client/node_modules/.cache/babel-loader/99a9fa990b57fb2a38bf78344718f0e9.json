{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _get2 = require('lodash/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _isUndefined2 = require('lodash/isUndefined');\n\nvar _isUndefined3 = _interopRequireDefault(_isUndefined2);\n\nvar _pick2 = require('lodash/pick');\n\nvar _pick3 = _interopRequireDefault(_pick2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _Overlay = require('./Overlay');\n\nvar _Overlay2 = _interopRequireDefault(_Overlay);\n\nvar _isNullOrUndefined = require('../utils/isNullOrUndefined');\n\nvar _isNullOrUndefined2 = _interopRequireDefault(_isNullOrUndefined);\n\nvar _createChainedFunction = require('../utils/createChainedFunction');\n\nvar _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);\n\nvar _handleMouseOverOut = require('../utils/handleMouseOverOut');\n\nvar _handleMouseOverOut2 = _interopRequireDefault(_handleMouseOverOut);\n\nvar _isOneOf = require('../utils/isOneOf');\n\nvar _isOneOf2 = _interopRequireDefault(_isOneOf);\n\nvar _Portal = require('./Portal');\n\nvar _Portal2 = _interopRequireDefault(_Portal);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar unsupportedCreatePortal = !_reactDom2.default.createPortal;\n\nvar OverlayTrigger = function (_React$Component) {\n  _inherits(OverlayTrigger, _React$Component);\n\n  function OverlayTrigger(props) {\n    _classCallCheck(this, OverlayTrigger);\n\n    var _this = _possibleConstructorReturn(this, (OverlayTrigger.__proto__ || Object.getPrototypeOf(OverlayTrigger)).call(this, props));\n\n    _this.getOverlayTarget = function () {\n      return (0, _reactDom.findDOMNode)(_this);\n    };\n\n    _this.speaker = null;\n    _this.handleMouseOver = null;\n    _this.handleMouseOut = null;\n    _this.hoverShowDelay = null;\n    _this.hoverHideDelay = null;\n    _this.target = null;\n    _this.mountNode = null;\n    _this.enterSpeaker = false;\n    _this.enterTrigger = false;\n\n    _this.handleSpeakerMouseEnter = function () {\n      _this.enterSpeaker = true;\n    };\n\n    _this.handleSpeakerMouseLeave = function () {\n      var trigger = _this.props.trigger;\n      _this.enterSpeaker = false;\n\n      if (!(0, _isOneOf2.default)('click', trigger) && !(0, _isOneOf2.default)('active', trigger)) {\n        _this.handleHide();\n      }\n    };\n\n    _this.hide = function () {\n      _this.setState({\n        isOverlayShown: false\n      });\n    };\n\n    _this.show = function () {\n      _this.setState({\n        isOverlayShown: true\n      });\n    };\n\n    _this.handleHide = function () {\n      if (!_this.enterSpeaker && !_this.enterTrigger) {\n        _this.hide();\n      }\n    };\n\n    _this.handleToggle = function () {\n      if (_this.state.isOverlayShown) {\n        _this.handleHide();\n      } else {\n        _this.show();\n      }\n    };\n\n    _this.handleDelayedShow = function () {\n      var _this$props = _this.props,\n          delayShow = _this$props.delayShow,\n          delay = _this$props.delay;\n      _this.enterTrigger = true;\n\n      if (!(0, _isNullOrUndefined2.default)(_this.hoverHideDelay)) {\n        clearTimeout(_this.hoverHideDelay);\n        _this.hoverHideDelay = null;\n\n        _this.show();\n\n        return;\n      }\n\n      if (_this.state.isOverlayShown) {\n        return;\n      }\n\n      var nextDelay = !(0, _isNullOrUndefined2.default)(delayShow) ? delayShow : delay;\n\n      if (!nextDelay) {\n        _this.show();\n\n        return;\n      }\n\n      _this.hoverShowDelay = setTimeout(function () {\n        _this.hoverShowDelay = null;\n\n        _this.show();\n      }, nextDelay);\n    };\n\n    _this.handleDelayedHide = function () {\n      var _this$props2 = _this.props,\n          delayHide = _this$props2.delayHide,\n          delay = _this$props2.delay;\n      _this.enterTrigger = false;\n\n      if (!(0, _isNullOrUndefined2.default)(_this.hoverShowDelay)) {\n        clearTimeout(_this.hoverShowDelay);\n        _this.hoverShowDelay = null;\n        return;\n      }\n\n      if (!_this.state.isOverlayShown || !(0, _isNullOrUndefined2.default)(_this.hoverHideDelay)) {\n        return;\n      }\n\n      var nextDelay = !(0, _isNullOrUndefined2.default)(delayHide) ? delayHide : delay;\n\n      if (!nextDelay) {\n        _this.handleHide();\n\n        return;\n      }\n\n      _this.hoverHideDelay = setTimeout(function () {\n        var isOnSpeaker = _this.state.isOnSpeaker;\n\n        if (isOnSpeaker) {\n          return;\n        }\n\n        clearTimeout(_this.hoverHideDelay);\n        _this.hoverHideDelay = null;\n\n        _this.handleHide();\n      }, nextDelay);\n    };\n\n    _this.handleMouseOver = function (e) {\n      return (0, _handleMouseOverOut2.default)(_this.handleDelayedShow, e);\n    };\n\n    _this.handleMouseOut = function (e) {\n      return (0, _handleMouseOverOut2.default)(_this.handleDelayedHide, e);\n    };\n\n    _this.state = {\n      isOverlayShown: props.defaultOpen\n    };\n    return _this;\n  }\n\n  _createClass(OverlayTrigger, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (unsupportedCreatePortal) {\n        this.mountNode = document.createElement('div');\n        this.renderOverlay();\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      if (unsupportedCreatePortal && this.mountNode) {\n        this.renderOverlay();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      clearTimeout(this.hoverShowDelay);\n      clearTimeout(this.hoverHideDelay);\n\n      if (unsupportedCreatePortal) {\n        _reactDom2.default.unmountComponentAtNode(this.mountNode);\n\n        this.mountNode = null;\n      }\n    }\n  }, {\n    key: 'getOverlay',\n    // eslint-disable-line react/no-find-dom-node\n    value: function getOverlay() {\n      var _props = this.props,\n          open = _props.open,\n          speaker = _props.speaker,\n          trigger = _props.trigger,\n          onHide = _props.onHide;\n      var isOverlayShown = this.state.isOverlayShown;\n\n      var overlayProps = _extends({}, (0, _pick3.default)(this.props, _Overlay2.default.handledProps), {\n        show: (0, _isUndefined3.default)(open) ? isOverlayShown : open,\n        target: this.getOverlayTarget\n      });\n\n      if ((0, _isOneOf2.default)('click', trigger)) {\n        overlayProps.onHide = (0, _createChainedFunction2.default)(this.hide, onHide);\n      } else if ((0, _isOneOf2.default)('active', trigger)) {\n        overlayProps.onHide = (0, _createChainedFunction2.default)(this.hide, onHide);\n      }\n\n      var speakerProps = {\n        onMouseEnter: this.handleSpeakerMouseEnter,\n        onMouseLeave: this.handleSpeakerMouseLeave,\n        placement: overlayProps.placement\n      };\n      return React.createElement(_Overlay2.default, overlayProps, React.cloneElement(speaker, speakerProps));\n    }\n  }, {\n    key: 'renderOverlay',\n    value: function renderOverlay() {\n      if (this.speaker) {\n        _reactDom2.default.unstable_renderSubtreeIntoContainer(this, this.speaker, this.mountNode);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          children = _props2.children,\n          speaker = _props2.speaker,\n          onClick = _props2.onClick,\n          trigger = _props2.trigger,\n          onMouseOver = _props2.onMouseOver,\n          onMouseOut = _props2.onMouseOut,\n          onFocus = _props2.onFocus,\n          onBlur = _props2.onBlur,\n          disabled = _props2.disabled;\n      var triggerComponent = React.Children.only(children);\n      var triggerProps = triggerComponent.props;\n      var props = {\n        key: 'triggerComponent',\n        'aria-describedby': (0, _get3.default)(speaker, ['props', 'id'])\n      };\n      props.onClick = (0, _createChainedFunction2.default)(triggerProps.onClick, onClick);\n\n      if (!disabled) {\n        if ((0, _isOneOf2.default)('click', trigger)) {\n          props.onClick = (0, _createChainedFunction2.default)(this.handleToggle, props.onClick);\n        }\n\n        if ((0, _isOneOf2.default)('active', trigger)) {\n          props.onClick = (0, _createChainedFunction2.default)(this.show, props.onClick);\n        }\n\n        if ((0, _isOneOf2.default)('hover', trigger)) {\n          props.onMouseOver = (0, _createChainedFunction2.default)(this.handleMouseOver, onMouseOver, triggerProps.onMouseOver);\n          props.onMouseOut = (0, _createChainedFunction2.default)(this.handleMouseOut, onMouseOut, triggerProps.onMouseOut);\n        }\n\n        if ((0, _isOneOf2.default)('focus', trigger)) {\n          props.onFocus = (0, _createChainedFunction2.default)(this.handleDelayedShow, onFocus, triggerProps.onFocus);\n          props.onBlur = (0, _createChainedFunction2.default)(this.handleDelayedHide, onBlur, triggerProps.onBlur);\n        }\n      }\n\n      if (unsupportedCreatePortal) {\n        this.speaker = this.getOverlay();\n        return React.cloneElement(triggerComponent, props);\n      }\n\n      return [React.cloneElement(triggerComponent, props), React.createElement(_Portal2.default, {\n        key: 'portal'\n      }, this.getOverlay())];\n    }\n  }]);\n\n  return OverlayTrigger;\n}(React.Component);\n\nOverlayTrigger.defaultProps = {\n  trigger: ['hover', 'focus'],\n  delayHide: 200,\n  placement: 'bottomLeft',\n  rootClose: true\n};\nOverlayTrigger.handledProps = ['animation', 'children', 'container', 'containerPadding', 'defaultOpen', 'delay', 'delayHide', 'delayShow', 'disabled', 'onBlur', 'onClick', 'onEnter', 'onEntered', 'onEntering', 'onExit', 'onExited', 'onExiting', 'onFocus', 'onHide', 'onMouseOut', 'onMouseOver', 'open', 'placement', 'rootClose', 'show', 'speaker', 'target', 'transition', 'trigger'];\nexports.default = OverlayTrigger;","map":null,"metadata":{},"sourceType":"script"}