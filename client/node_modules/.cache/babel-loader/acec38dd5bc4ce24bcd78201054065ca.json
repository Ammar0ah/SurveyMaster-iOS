{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = require('rsuite-utils/lib/utils');\n\nvar _core = require('../core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nvar _index = require('../constants/index');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar alertInstance = void 0;\nvar defaultDuration = 2000;\nvar defaultTop = 5;\nvar defaultClassPrefix = _index.namespace + '-notification';\nvar getContainer = void 0;\n\nvar addPrefix = function addPrefix(name) {\n  return (0, _utils.prefix)(defaultClassPrefix)(name);\n};\n\nfunction getInstance(callback) {\n  _core2.default.newInstance({\n    style: {\n      top: defaultTop\n    },\n    duration: defaultDuration,\n    className: addPrefix('alert'),\n    classPrefix: defaultClassPrefix,\n    getContainer: getContainer\n  }, callback);\n}\n\nfunction notice(content) {\n  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultDuration;\n  var onClose = arguments[2];\n  var type = arguments[3];\n\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  var noticePorps = {\n    content: content,\n    duration: duration,\n    onClose: onClose,\n    type: type,\n    closable: true\n  };\n\n  if (!alertInstance) {\n    getInstance(function (notificationInstance) {\n      alertInstance = notificationInstance;\n      notificationInstance.notice(noticePorps);\n    });\n  } else {\n    alertInstance.notice(noticePorps);\n  }\n}\n\nexports.default = {\n  success: function success(content, duration, onClose) {\n    notice(content, duration, onClose, _index.NOTICE_TYPES.SUCCESS);\n  },\n  error: function error(content, duration, onClose) {\n    notice(content, duration, onClose, _index.NOTICE_TYPES.ERROR);\n  },\n  info: function info(content, duration, onClose) {\n    notice(content, duration, onClose, _index.NOTICE_TYPES.INFO);\n  },\n  warning: function warning(content, duration, onClose) {\n    notice(content, duration, onClose, _index.NOTICE_TYPES.WARNING);\n  },\n\n  /**\n   *\n   * @param {*} options{\n   *  top,\n   *  duration,\n   *  getContainer\n   * }\n   */\n  config: function config(options) {\n    if (options.top !== undefined) {\n      defaultTop = options.top;\n      alertInstance = null;\n    }\n\n    if (options.duration !== undefined) {\n      defaultDuration = options.duration;\n    }\n\n    if (options.classPrefix !== undefined) {\n      defaultClassPrefix = options.classPrefix;\n    }\n\n    if (options.getContainer !== undefined) {\n      getContainer = options.getContainer;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}