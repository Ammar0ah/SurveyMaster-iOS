{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _domLib = require('dom-lib');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Portal = function (_React$Component) {\n  _inherits(Portal, _React$Component);\n\n  function Portal() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Portal);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Portal.__proto__ || Object.getPrototypeOf(Portal)).call.apply(_ref, [this].concat(args))), _this), _this.overlayTarget = null, _this.overlayInstance = null, _this.portalContainerNode = null, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Portal, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.renderOverlay();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.overlayTarget && this.portalContainerNode && nextProps.container !== this.props.container) {\n        this.portalContainerNode.removeChild(this.overlayTarget);\n        this.portalContainerNode = (0, _domLib.getContainer)(nextProps.container, (0, _domLib.ownerDocument)(this).body);\n        this.portalContainerNode.appendChild(this.overlayTarget);\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.renderOverlay();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.unrenderOverlay();\n      this.unmountOverlayTarget();\n    }\n  }, {\n    key: 'getMountNode',\n    value: function getMountNode() {\n      return this.overlayTarget;\n    }\n  }, {\n    key: 'mountOverlayTarget',\n    value: function mountOverlayTarget() {\n      if (!this.overlayTarget) {\n        this.overlayTarget = document.createElement('div');\n        this.portalContainerNode = (0, _domLib.getContainer)(this.props.container, (0, _domLib.ownerDocument)(this).body);\n        this.portalContainerNode.appendChild(this.overlayTarget);\n      }\n    }\n  }, {\n    key: 'unmountOverlayTarget',\n    value: function unmountOverlayTarget() {\n      if (this.overlayTarget && this.portalContainerNode) {\n        this.portalContainerNode.removeChild(this.overlayTarget);\n        this.overlayTarget = null;\n      }\n\n      this.portalContainerNode = null;\n    }\n  }, {\n    key: 'unrenderOverlay',\n    value: function unrenderOverlay() {\n      if (this.overlayTarget) {\n        _reactDom2.default.unmountComponentAtNode(this.overlayTarget);\n\n        this.overlayInstance = null;\n      }\n    }\n  }, {\n    key: 'renderOverlay',\n    value: function renderOverlay() {\n      var children = this.props.children;\n      var overlay = !children ? null : React.Children.only(children); // Save reference for future access.\n\n      if (overlay !== null) {\n        this.mountOverlayTarget();\n        this.overlayInstance = _reactDom2.default.unstable_renderSubtreeIntoContainer(this, overlay, this.overlayTarget);\n      } else {\n        this.unrenderOverlay();\n        this.unmountOverlayTarget();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return Portal;\n}(React.Component);\n\nPortal.displayName = 'Portal';\nPortal.handledProps = ['children', 'container'];\nexports.default = Portal;","map":null,"metadata":{},"sourceType":"script"}