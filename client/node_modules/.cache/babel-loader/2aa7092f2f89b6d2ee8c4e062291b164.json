{"ast":null,"code":"var _jsxFileName = \"/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/Components/SurveyAnswersList/answerTypes/multiplechoice.jsx\";\nimport React, { Component } from 'react';\nimport { Checkbox } from 'rsuite';\n\nclass InputPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      choices: [],\n      checks: {}\n    };\n\n    this.changedChoiceHandler = value => {\n      this.setState({\n        choices: this.editChoice(value)\n      }, () => {\n        this.props.change(this.state);\n        console.log(this.state.choices);\n      }); // let Choices = Object.assign([],this.state.choices)\n      //  this.props.throwState(this.state)\n    };\n\n    this.editChoice = value => {\n      if (this.state.choices.includes(value)) {\n        let index = this.state.choices.indexOf(value);\n        return this.state.choices.splice(index, 1);\n      } else return [...this.state.choices, value];\n    };\n  }\n\n  componentWillMount() {\n    this.choicesSentences = this.props.content.choices;\n  }\n\n  render() {\n    let Checkboxes = this.choicesSentences.map((c, i) => React.createElement(Checkbox, {\n      key: i,\n      onChange: this.changedChoiceHandler,\n      value: c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, c));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, Checkboxes);\n  }\n\n}\n\nexport default InputPage;","map":{"version":3,"sources":["/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/Components/SurveyAnswersList/answerTypes/multiplechoice.jsx"],"names":["React","Component","Checkbox","InputPage","state","choices","checks","changedChoiceHandler","value","setState","editChoice","props","change","console","log","includes","index","indexOf","splice","componentWillMount","choicesSentences","content","render","Checkboxes","map","c","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,QAAzB;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BG,KAD8B,GACtB;AACJC,MAAAA,OAAO,EAAC,EADJ;AAEJC,MAAAA,MAAM,EAAC;AAFH,KADsB;;AAAA,SAQ9BC,oBAR8B,GAQNC,KAAD,IAAW;AAC9B,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,OAAO,EAAE,KAAKK,UAAL,CAAgBF,KAAhB;AAAX,OAAd,EACA,MAAK;AACD,aAAKG,KAAL,CAAWC,MAAX,CAAkB,KAAKR,KAAvB;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWC,OAAvB;AACH,OAJD,EAD8B,CAQ9B;AACF;AACD,KAlB6B;;AAAA,SAmB9BK,UAnB8B,GAmBhBF,KAAD,IAAW;AAEpB,UAAG,KAAKJ,KAAL,CAAWC,OAAX,CAAmBU,QAAnB,CAA4BP,KAA5B,CAAH,EACA;AACI,YAAIQ,KAAK,GAAE,KAAKZ,KAAL,CAAWC,OAAX,CAAmBY,OAAnB,CAA2BT,KAA3B,CAAX;AAEA,eAAO,KAAKJ,KAAL,CAAWC,OAAX,CAAmBa,MAAnB,CAA0BF,KAA1B,EAAiC,CAAjC,CAAP;AACH,OALD,MAMK,OAAO,CAAC,GAAG,KAAKZ,KAAL,CAAWC,OAAf,EAAuBG,KAAvB,CAAP;AACR,KA5B6B;AAAA;;AAK9BW,EAAAA,kBAAkB,GAAG;AACjB,SAAKC,gBAAL,GAAwB,KAAKT,KAAL,CAAWU,OAAX,CAAmBhB,OAA3C;AACH;;AAuBDiB,EAAAA,MAAM,GAAG;AAEL,QAAIC,UAAU,GAAG,KAAKH,gBAAL,CAAsBI,GAAtB,CAA0B,CAACC,CAAD,EAAIC,CAAJ,KAAU,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAf;AAAkB,MAAA,QAAQ,EAAE,KAAKnB,oBAAjC;AACjD,MAAA,KAAK,EAAEkB,CAD0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACtCA,CADsC,CAApC,CAAjB;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,UADL,CADJ;AAMH;;AAxC6B;;AA6ClC,eAAepB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Checkbox } from 'rsuite';\n\nclass InputPage extends Component {\n    state = {\n        choices:[],\n        checks:{}\n    }\n    componentWillMount() {\n        this.choicesSentences = this.props.content.choices;\n    }\n    changedChoiceHandler = (value) => {\n        this.setState({ choices: this.editChoice(value)},\n        () =>{\n            this.props.change(this.state)\n            console.log(this.state.choices)\n        }\n            );\n       \n        // let Choices = Object.assign([],this.state.choices)\n      //  this.props.throwState(this.state)\n    }\n    editChoice = (value) => { \n       \n        if(this.state.choices.includes(value))\n        {\n            let index =this.state.choices.indexOf(value)\n       \n            return this.state.choices.splice(index, 1)\n        }\n        else return [...this.state.choices,value]\n    }\n\n    render() {\n       \n        let Checkboxes = this.choicesSentences.map((c, i) => <Checkbox key={i} onChange={this.changedChoiceHandler}\n            value={c}>{c}</Checkbox>)\n        return (\n            <div>\n                {Checkboxes}\n            </div>\n        )\n\n    }\n\n}\n\n\nexport default InputPage;"]},"metadata":{},"sourceType":"module"}