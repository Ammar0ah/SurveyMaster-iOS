{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _get2 = require('lodash/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _domLib = require('dom-lib');\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction isLeftClickEvent(event) {\n  return (0, _get3.default)(event, 'button') === 0;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || (0, _get3.default)(event, 'shiftKey'));\n}\n\nvar RootCloseWrapper = function (_React$Component) {\n  _inherits(RootCloseWrapper, _React$Component);\n\n  function RootCloseWrapper() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, RootCloseWrapper);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RootCloseWrapper.__proto__ || Object.getPrototypeOf(RootCloseWrapper)).call.apply(_ref, [this].concat(args))), _this), _this.onDocumentClickListener = null, _this.onDocumentKeyupListener = null, _this.handleDocumentClick = function (event) {\n      /* eslint-disable */\n      if ((0, _domLib.contains)((0, _reactDom.findDOMNode)(_this), event.target)) {\n        return;\n      }\n\n      if (isModifiedEvent(event) || !isLeftClickEvent(event)) {\n        return;\n      }\n\n      var target = _this.props.target;\n\n      if (target) {\n        if ((0, _domLib.contains)(target(), event.target)) {\n          return;\n        }\n      }\n\n      var onRootClose = _this.props.onRootClose;\n      onRootClose && onRootClose();\n    }, _this.handleDocumentKeyUp = function (event) {\n      if (event.keyCode === 27) {\n        var _onRootClose = _this.props.onRootClose;\n        _onRootClose && _onRootClose();\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(RootCloseWrapper, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.bindRootCloseHandlers();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.unbindRootCloseHandlers();\n    }\n  }, {\n    key: 'bindRootCloseHandlers',\n    value: function bindRootCloseHandlers() {\n      var doc = window.document;\n      this.onDocumentClickListener = (0, _domLib.on)(doc, 'click', this.handleDocumentClick);\n      this.onDocumentKeyupListener = (0, _domLib.on)(doc, 'keyup', this.handleDocumentKeyUp);\n    }\n  }, {\n    key: 'unbindRootCloseHandlers',\n    value: function unbindRootCloseHandlers() {\n      if (this.onDocumentClickListener) {\n        this.onDocumentClickListener.off();\n      }\n\n      if (this.onDocumentKeyupListener) {\n        this.onDocumentKeyupListener.off();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n\n  return RootCloseWrapper;\n}(React.Component);\n\nRootCloseWrapper.handledProps = ['children', 'onRootClose', 'target'];\nexports.default = RootCloseWrapper;","map":null,"metadata":{},"sourceType":"script"}