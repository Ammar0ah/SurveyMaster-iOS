{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.partitionHTMLProps = exports.htmlInputProps = exports.htmlInputEvents = exports.htmlInputAttrs = void 0;\n\nvar _includes2 = _interopRequireDefault(require(\"lodash/includes\"));\n\nvar _forEach2 = _interopRequireDefault(require(\"lodash/forEach\"));\n\nvar htmlInputAttrs = [// REACT\n'selected', 'defaultValue', 'defaultChecked', // LIMITED HTML PROPS\n'autoCapitalize', 'autoComplete', 'autoCorrect', 'autoFocus', 'checked', 'disabled', 'form', 'id', 'list', 'max', 'maxLength', 'min', 'minLength', 'multiple', 'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'type', 'value'];\nexports.htmlInputAttrs = htmlInputAttrs;\nvar htmlInputEvents = [// EVENTS\n// keyboard\n'onKeyDown', 'onKeyPress', 'onKeyUp', // focus\n'onFocus', 'onBlur', // form\n'onChange', 'onInput', // mouse\n'onClick', 'onContextMenu', 'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave', 'onDragOver', 'onDragStart', 'onDrop', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp', // selection\n'onSelect', // touch\n'onTouchCancel', 'onTouchEnd', 'onTouchMove', 'onTouchStart'];\nexports.htmlInputEvents = htmlInputEvents;\nvar htmlInputProps = [].concat(htmlInputAttrs, htmlInputEvents);\n/**\n * Returns an array of objects consisting of: props of html input element and rest.\n * @param {object} props A ReactElement props object\n * @param {Object} [options={}]\n * @param {Array} [options.htmlProps] An array of html input props\n * @param {boolean} [options.includeAria] Includes all input props that starts with \"aria-\"\n * @returns {[{}, {}]} An array of objects\n */\n\nexports.htmlInputProps = htmlInputProps;\n\nvar partitionHTMLProps = function partitionHTMLProps(props, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$htmlProps = _options.htmlProps,\n      htmlProps = _options$htmlProps === void 0 ? htmlInputProps : _options$htmlProps,\n      _options$includeAria = _options.includeAria,\n      includeAria = _options$includeAria === void 0 ? true : _options$includeAria;\n  var inputProps = {};\n  var rest = {};\n  (0, _forEach2.default)(props, function (val, prop) {\n    var possibleAria = includeAria && (/^aria-.*$/.test(prop) || prop === 'role');\n    var target = (0, _includes2.default)(htmlProps, prop) || possibleAria ? inputProps : rest;\n    target[prop] = val;\n  });\n  return [inputProps, rest];\n};\n\nexports.partitionHTMLProps = partitionHTMLProps;","map":null,"metadata":{},"sourceType":"script"}