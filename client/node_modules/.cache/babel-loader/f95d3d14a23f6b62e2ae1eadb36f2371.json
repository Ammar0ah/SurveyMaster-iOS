{"ast":null,"code":"import axios from \"../../axios-requests\";\nimport * as actions from \"../actions/types\";\nimport * as Qtypes from \"../../Components/Question/QuestionTypes\";\nimport _ from \"lodash\";\nimport { Alert } from 'rsuite';\nexport const ChangeTitle = newVal => dispatch => dispatch({\n  type: actions.CHANGE_SURVEY_TITLE,\n  val: newVal\n});\nexport const AddQuestion = type => dispatch => dispatch({\n  type: actions.ADD_QUESTION,\n  Qtype: type\n});\nexport const SubmitNewSurvey = (survey, Redirect) => dispatch => {\n  survey.pages[0].questions = survey.pages[0].questions.map(el => {\n    let newQ = _.pick(el, [\"title\", \"type\", \"content\"]);\n\n    switch (newQ.type) {\n      case Qtypes.TEXT:\n      case Qtypes.PARAGRAPH:\n        newQ.content = {};\n        break;\n\n      case Qtypes.RADIO_GROUP:\n      case Qtypes.CHECKBOX:\n      case Qtypes.DROPDOWN:\n        newQ.content = _.pick(newQ.content, [\"choices\"]);\n        break;\n\n      case Qtypes.SLIDER:\n      case Qtypes.RANGE:\n        newQ.content = _.pick(newQ.content, [\"min\", \"max\", \"step\", \"defaultValue\"]);\n        break;\n\n      case Qtypes.RATING:\n        newQ.content = _.pick(newQ.content, [\"min\", \"max\", \"defaultValue\"]);\n        break;\n\n      default:\n        newQ.content = {};\n        break;\n    }\n\n    return newQ;\n  });\n  const header = {\n    \"x-auth-token\": localStorage.getItem(\"token\")\n  }; // survey.pages[0].questions = finalSurveyQuestions\n\n  console.log(survey);\n  axios.post(\"/api/surveys\", survey, {\n    headers: header\n  }).then(response => {\n    Alert.success(\"Submitted Successfully\");\n    console.log(response);\n  }).then(Redirect).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/store/actions/BuilderAction.js"],"names":["axios","actions","Qtypes","_","Alert","ChangeTitle","newVal","dispatch","type","CHANGE_SURVEY_TITLE","val","AddQuestion","ADD_QUESTION","Qtype","SubmitNewSurvey","survey","Redirect","pages","questions","map","el","newQ","pick","TEXT","PARAGRAPH","content","RADIO_GROUP","CHECKBOX","DROPDOWN","SLIDER","RANGE","RATING","header","localStorage","getItem","console","log","post","headers","then","response","success","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,sBAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAO,KAAKC,MAAZ,MAAwB,yCAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAAQC,KAAR,QAAoB,QAApB;AAEA,OAAO,MAAMC,WAAW,GAAIC,MAAD,IAAYC,QAAQ,IAC7CA,QAAQ,CAAC;AAAEC,EAAAA,IAAI,EAAEP,OAAO,CAACQ,mBAAhB;AAAoCC,EAAAA,GAAG,EAACJ;AAAxC,CAAD,CADH;AAIP,OAAO,MAAMK,WAAW,GAAIH,IAAD,IAAUD,QAAQ,IAC3CA,QAAQ,CAAC;AAAEC,EAAAA,IAAI,EAAEP,OAAO,CAACW,YAAhB;AAA6BC,EAAAA,KAAK,EAAEL;AAApC,CAAD,CADH;AAEP,OAAO,MAAMM,eAAe,GAAG,CAACC,MAAD,EAAQC,QAAR,KAAqBT,QAAQ,IAAI;AAC9DQ,EAAAA,MAAM,CAACE,KAAP,CAAa,CAAb,EAAgBC,SAAhB,GAA4BH,MAAM,CAACE,KAAP,CAAa,CAAb,EAAgBC,SAAhB,CAA0BC,GAA1B,CAA8BC,EAAE,IAAI;AAC9D,QAAIC,IAAI,GAAGlB,CAAC,CAACmB,IAAF,CAAOF,EAAP,EAAW,CAAC,OAAD,EAAU,MAAV,EAAkB,SAAlB,CAAX,CAAX;;AACA,YAAQC,IAAI,CAACb,IAAb;AACE,WAAKN,MAAM,CAACqB,IAAZ;AACA,WAAKrB,MAAM,CAACsB,SAAZ;AACEH,QAAAA,IAAI,CAACI,OAAL,GAAe,EAAf;AACA;;AACF,WAAKvB,MAAM,CAACwB,WAAZ;AACA,WAAKxB,MAAM,CAACyB,QAAZ;AACA,WAAKzB,MAAM,CAAC0B,QAAZ;AACEP,QAAAA,IAAI,CAACI,OAAL,GAAetB,CAAC,CAACmB,IAAF,CAAOD,IAAI,CAACI,OAAZ,EAAqB,CAAC,SAAD,CAArB,CAAf;AAEA;;AACF,WAAKvB,MAAM,CAAC2B,MAAZ;AACA,WAAK3B,MAAM,CAAC4B,KAAZ;AACET,QAAAA,IAAI,CAACI,OAAL,GAAetB,CAAC,CAACmB,IAAF,CAAOD,IAAI,CAACI,OAAZ,EAAqB,CAClC,KADkC,EAElC,KAFkC,EAGlC,MAHkC,EAIlC,cAJkC,CAArB,CAAf;AAMA;;AACF,WAAKvB,MAAM,CAAC6B,MAAZ;AACIV,QAAAA,IAAI,CAACI,OAAL,GAAetB,CAAC,CAACmB,IAAF,CAAOD,IAAI,CAACI,OAAZ,EAAqB,CAClC,KADkC,EAElC,KAFkC,EAGlC,cAHkC,CAArB,CAAf;AAKF;;AACF;AACEJ,QAAAA,IAAI,CAACI,OAAL,GAAe,EAAf;AACA;AA7BJ;;AA+BA,WAAOJ,IAAP;AACD,GAlC2B,CAA5B;AAmCA,QAAMW,MAAM,GAAG;AACb,oBAAgBC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADH,GAAf,CApC8D,CAwC9D;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYrB,MAAZ;AACAf,EAAAA,KAAK,CACFqC,IADH,CACQ,cADR,EACwBtB,MADxB,EAC+B;AAACuB,IAAAA,OAAO,EAACN;AAAT,GAD/B,EAEGO,IAFH,CAEQC,QAAQ,IAAI;AAChBpC,IAAAA,KAAK,CAACqC,OAAN,CAAc,wBAAd;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACD,GALH,EAKKD,IALL,CAKUvB,QALV,EAMG0B,KANH,CAMSC,GAAG,IAAIR,OAAO,CAACC,GAAR,CAAYO,GAAZ,CANhB;AAOD,CAjDM","sourcesContent":["import axios from \"../../axios-requests\";\nimport * as actions from \"../actions/types\";\nimport * as Qtypes from \"../../Components/Question/QuestionTypes\";\nimport _ from \"lodash\";\nimport {Alert} from 'rsuite'\n\nexport const ChangeTitle = (newVal) => dispatch =>\n  dispatch({ type: actions.CHANGE_SURVEY_TITLE,val:newVal });\n\n\nexport const AddQuestion = (type) => dispatch =>\n  dispatch({ type: actions.ADD_QUESTION,Qtype: type });\nexport const SubmitNewSurvey = (survey,Redirect) => dispatch => {\n  survey.pages[0].questions = survey.pages[0].questions.map(el => {\n    let newQ = _.pick(el, [\"title\", \"type\", \"content\"]);\n    switch (newQ.type) {\n      case Qtypes.TEXT:\n      case Qtypes.PARAGRAPH:\n        newQ.content = {};\n        break;\n      case Qtypes.RADIO_GROUP:\n      case Qtypes.CHECKBOX:\n      case Qtypes.DROPDOWN:\n        newQ.content = _.pick(newQ.content, [\"choices\"]);\n\n        break;\n      case Qtypes.SLIDER:\n      case Qtypes.RANGE:\n        newQ.content = _.pick(newQ.content, [\n          \"min\",\n          \"max\",\n          \"step\",\n          \"defaultValue\"\n        ]);\n        break;\n      case Qtypes.RATING:\n          newQ.content = _.pick(newQ.content, [\n            \"min\",\n            \"max\",\n            \"defaultValue\"\n          ]);\n        break;\n      default:\n        newQ.content = {};\n        break;\n    }\n    return newQ;\n  });\n  const header = {\n    \"x-auth-token\": localStorage.getItem(\"token\")\n  };\n\n  // survey.pages[0].questions = finalSurveyQuestions\n  console.log(survey);\n  axios\n    .post(\"/api/surveys\", survey,{headers:header})\n    .then(response => {\n      Alert.success(\"Submitted Successfully\");\n      console.log(response);\n    }).then(Redirect)\n    .catch(err => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}