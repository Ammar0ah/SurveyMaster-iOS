{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isUndefined2 = require('lodash/isUndefined');\n\nvar _isUndefined3 = _interopRequireDefault(_isUndefined2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _domLib = require('dom-lib');\n\nvar _constants = require('./constants');\n\nvar _utils = require('./utils');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Scrollbar = function (_React$PureComponent) {\n  _inherits(Scrollbar, _React$PureComponent);\n\n  function Scrollbar(props) {\n    _classCallCheck(this, Scrollbar);\n\n    var _this = _possibleConstructorReturn(this, (Scrollbar.__proto__ || Object.getPrototypeOf(Scrollbar)).call(this, props));\n\n    _this.hanldeMouseDown = function (event) {\n      var onMouseDown = _this.props.onMouseDown;\n      _this.mouseMoveTracker = _this.getMouseMoveTracker();\n\n      _this.mouseMoveTracker.captureMouseMoves(event);\n\n      _this.setState({\n        handlePressed: true\n      });\n\n      onMouseDown && onMouseDown(event);\n    };\n\n    _this.hanldeDragEnd = function () {\n      _this.releaseMouseMoves();\n\n      _this.setState({\n        handlePressed: false\n      });\n    };\n\n    _this.hanldeDragMove = function (deltaX, deltaY, event) {\n      var vertical = _this.props.vertical;\n\n      if (!_this.mouseMoveTracker || !_this.mouseMoveTracker.isDragging()) {\n        return;\n      }\n\n      _this.handleScroll(vertical ? deltaY : deltaX, event);\n    };\n\n    _this.hanldeClick = function (event) {\n      if (_this.handle && _this.handle.contains(event.target)) {\n        return;\n      }\n\n      var _this$props = _this.props,\n          vertical = _this$props.vertical,\n          length = _this$props.length,\n          scrollLength = _this$props.scrollLength;\n      var barOffset = _this.state.barOffset;\n      var offset = vertical ? event.pageY - barOffset.top : event.pageX - barOffset.left;\n      var handleWidth = length / scrollLength * length;\n      var delta = offset - handleWidth;\n      var nextDelta = offset > _this.scrollOffset ? delta - _this.scrollOffset : offset - _this.scrollOffset;\n\n      _this.handleScroll(nextDelta, event);\n    };\n\n    _this.scrollOffset = 0;\n\n    _this.bindBarRef = function (ref) {\n      _this.bar = ref;\n    };\n\n    _this.bindHandleRef = function (ref) {\n      _this.handle = ref;\n    };\n\n    _this.state = {\n      barOffset: {\n        top: 0,\n        left: 0\n      },\n      handlePressed: false\n    };\n    return _this;\n  }\n\n  _createClass(Scrollbar, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.initBarOffset();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.releaseMouseMoves();\n    }\n  }, {\n    key: 'onWheelScroll',\n    value: function onWheelScroll(delta) {\n      var _props = this.props,\n          length = _props.length,\n          scrollLength = _props.scrollLength;\n      var nextDelta = delta / (scrollLength / length);\n      this.updateScrollBarPosition(nextDelta);\n    }\n  }, {\n    key: 'getMouseMoveTracker',\n    value: function getMouseMoveTracker() {\n      return this.mouseMoveTracker || new _domLib.DOMMouseMoveTracker(this.hanldeDragMove, this.hanldeDragEnd, document.body);\n    }\n  }, {\n    key: 'initBarOffset',\n    value: function initBarOffset() {\n      var _this2 = this;\n\n      setTimeout(function () {\n        _this2.bar && _this2.setState({\n          barOffset: (0, _domLib.getOffset)(_this2.bar)\n        });\n      }, 1);\n    }\n  }, {\n    key: 'handleScroll',\n    value: function handleScroll(delta, event) {\n      var _props2 = this.props,\n          length = _props2.length,\n          scrollLength = _props2.scrollLength,\n          onScroll = _props2.onScroll;\n      var scrollDelta = delta * (scrollLength / length);\n      this.updateScrollBarPosition(delta);\n      onScroll && onScroll(scrollDelta, event);\n    }\n  }, {\n    key: 'resetScrollBarPosition',\n    value: function resetScrollBarPosition() {\n      var forceDelta = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.scrollOffset = 0;\n      this.updateScrollBarPosition(0, forceDelta);\n    }\n  }, {\n    key: 'updateScrollBarPosition',\n    value: function updateScrollBarPosition(delta, forceDelta) {\n      var _props3 = this.props,\n          vertical = _props3.vertical,\n          length = _props3.length,\n          scrollLength = _props3.scrollLength;\n      var max = scrollLength && length ? length - Math.max(length / scrollLength * length, _constants.SCROLLBAR_MIN_WIDTH + 2) : 0;\n      var styles = {};\n\n      if ((0, _isUndefined3.default)(forceDelta)) {\n        this.scrollOffset += delta;\n        this.scrollOffset = Math.max(this.scrollOffset, 0);\n        this.scrollOffset = Math.min(this.scrollOffset, max);\n      } else {\n        this.scrollOffset = forceDelta || 0;\n      }\n\n      if (vertical) {\n        (0, _domLib.translateDOMPositionXY)(styles, 0, this.scrollOffset);\n      } else {\n        (0, _domLib.translateDOMPositionXY)(styles, this.scrollOffset, 0);\n      }\n\n      (0, _domLib.addStyle)(this.handle, styles);\n    }\n  }, {\n    key: 'releaseMouseMoves',\n    value: function releaseMouseMoves() {\n      if (this.mouseMoveTracker) {\n        this.mouseMoveTracker.releaseMouseMoves();\n        this.mouseMoveTracker = null;\n      }\n    }\n    /**\n     * 点击滚动条，然后滚动到指定位置\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _classNames, _styles;\n\n      var _props4 = this.props,\n          vertical = _props4.vertical,\n          length = _props4.length,\n          scrollLength = _props4.scrollLength,\n          classPrefix = _props4.classPrefix,\n          className = _props4.className,\n          rest = _objectWithoutProperties(_props4, ['vertical', 'length', 'scrollLength', 'classPrefix', 'className']);\n\n      var handlePressed = this.state.handlePressed;\n      var addPrefix = (0, _utils.prefix)(classPrefix);\n      var classes = (0, _classnames2.default)(classPrefix, className, (_classNames = {}, _defineProperty(_classNames, addPrefix('vertical'), vertical), _defineProperty(_classNames, addPrefix('horizontal'), !vertical), _defineProperty(_classNames, addPrefix('hide'), scrollLength <= length), _defineProperty(_classNames, addPrefix('pressed'), handlePressed), _classNames));\n      var styles = (_styles = {}, _defineProperty(_styles, vertical ? 'height' : 'width', length / scrollLength * 100 + '%'), _defineProperty(_styles, vertical ? 'minHeight' : 'minWidth', _constants.SCROLLBAR_MIN_WIDTH), _styles);\n      var unhandled = (0, _utils.getUnhandledProps)(Scrollbar, rest);\n      return React.createElement('div', _extends({}, unhandled, {\n        ref: this.bindBarRef,\n        className: classes,\n        onClick: this.hanldeClick,\n        role: 'toolbar'\n      }), React.createElement('div', {\n        ref: this.bindHandleRef,\n        className: addPrefix('handle'),\n        style: styles,\n        onMouseDown: this.hanldeMouseDown,\n        role: 'button',\n        tabIndex: -1\n      }));\n    }\n  }]);\n\n  return Scrollbar;\n}(React.PureComponent);\n\nScrollbar.defaultProps = {\n  classPrefix: (0, _utils.defaultClassPrefix)('table-scrollbar'),\n  scrollLength: 1,\n  length: 1\n};\nScrollbar.handledProps = ['className', 'classPrefix', 'length', 'onMouseDown', 'onScroll', 'scrollLength', 'vertical'];\nScrollbar.propTypes = {\n  vertical: _propTypes2.default.bool,\n  length: _propTypes2.default.number.isRequired,\n  scrollLength: _propTypes2.default.number.isRequired,\n  className: _propTypes2.default.string,\n  classPrefix: _propTypes2.default.string,\n  onScroll: _propTypes2.default.func,\n  onMouseDown: _propTypes2.default.func\n};\nexports.default = Scrollbar;","map":null,"metadata":{},"sourceType":"script"}