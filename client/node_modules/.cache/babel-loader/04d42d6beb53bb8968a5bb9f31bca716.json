{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _get2 = require('lodash/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _isNullOrUndefined = require('./isNullOrUndefined');\n\nvar _isNullOrUndefined2 = _interopRequireDefault(_isNullOrUndefined);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction cloneCell(Cell, props) {\n  return _react2.default.cloneElement(Cell, props);\n}\n\nfunction colSpanCells(cells) {\n  var nextCells = [];\n\n  for (var i = 0; i < cells.length; i += 1) {\n    var _cells$i$props = cells[i].props,\n        width = _cells$i$props.width,\n        colSpan = _cells$i$props.colSpan;\n    /**\n     * 如果存在 colSpan 属性，就去找它的下一个 Cell,\n     * 看看值是否是 isNullOrUndefined，，如果为空这可以合并这个单元格\n     */\n\n    if (colSpan) {\n      var nextWidth = width;\n\n      for (var j = 0; j < colSpan; j += 1) {\n        var nextCell = cells[i + j];\n\n        if (nextCell) {\n          var _nextCell$props = nextCell.props,\n              rowData = _nextCell$props.rowData,\n              dataKey = _nextCell$props.dataKey,\n              children = _nextCell$props.children,\n              colSpanWidth = _nextCell$props.width,\n              isHeaderCell = _nextCell$props.isHeaderCell;\n\n          if (rowData && (0, _isNullOrUndefined2.default)((0, _get3.default)(rowData, dataKey)) || isHeaderCell && (0, _isNullOrUndefined2.default)(children)) {\n            nextWidth += colSpanWidth;\n            cells[i + j] = cloneCell(nextCell, {\n              removed: true\n            });\n          }\n        }\n      }\n\n      nextCells.push(cloneCell(cells[i], {\n        width: nextWidth\n      }));\n      /* eslint-disable */\n\n      continue;\n    }\n\n    nextCells.push(cells[i]);\n  }\n\n  return nextCells;\n}\n\nexports.default = colSpanCells;","map":null,"metadata":{},"sourceType":"script"}