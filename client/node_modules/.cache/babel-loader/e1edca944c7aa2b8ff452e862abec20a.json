{"ast":null,"code":"import * as actionTypes from \"./types\";\nimport axios from \"../../axios-requests\";\nimport { Alert } from \"rsuite\";\naxios.defaults.headers.common[\"x-auth-token\"] = localStorage.getItem(\"token\");\n;\naxios.interceptors.response.use(null, error => {\n  const expectedError = error.response && error.response.status >= 400 && error.response.status < 500;\n\n  if (!expectedError) {\n    console.log(error);\n    Alert.error(\"An unexpected error occurrred.\");\n  }\n\n  return Promise.reject(error);\n});\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = authToken => {\n  localStorage.setItem(\"token\", authToken);\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: authToken\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error.response.data\n  };\n};\nexport const authSignUp = (firstName, lastName, email, password) => async dispatch => {\n  try {\n    dispatch(authStart());\n    const authData = {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password\n    }; // console.log(JSON.stringify(authData))\n\n    const response = await axios.post(\"/api/users\", authData);\n    return dispatch(authSuccess(response.headers[\"x-auth-token\"]));\n  } catch (err) {\n    console.log(err.response.data);\n    dispatch(authFail(err));\n  }\n};\nexport const authSignIn = (email, password) => async dispatch => {\n  try {\n    const authData = {\n      email: email,\n      password: password\n    };\n    dispatch(authStart());\n    const response = await axios.post(\"/api/auth\", authData);\n    return dispatch(authSuccess(response.data));\n  } catch (err) {\n    console.log(err.response.data);\n    dispatch(authFail(err));\n  }\n};\n/*\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiJkMzdkZmEyNS1mOTA5LTQxMTAtYjIzYS0zODg5NjRhNjc1ODkiLCJmaXJzdE5hbWUiOiJmbGFuIiwibGFzdE5hbWUiOiJ0ZXN0IiwiZW1haWwiOiJhbW1hcjEyQGhlbGFsYWFhaS5jb20iLCJpYXQiOjE1NTg5NDI1MDl9.CV2STTQmNEnCwLA2WI5xX5Mm-AQ7TsRVY6V-0-SMzOE\n\n*/","map":{"version":3,"sources":["/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/store/actions/authAction.js"],"names":["actionTypes","axios","Alert","defaults","headers","common","localStorage","getItem","interceptors","response","use","error","expectedError","status","console","log","Promise","reject","authStart","type","AUTH_START","authSuccess","authToken","setItem","AUTH_SUCCESS","token","authFail","AUTH_FAIL","data","authSignUp","firstName","lastName","email","password","dispatch","authData","post","err","authSignIn"],"mappings":"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","sourcesContent":["import * as actionTypes from \"./types\";\nimport axios from \"../../axios-requests\";\nimport { Alert } from \"rsuite\";\naxios.defaults.headers.common[\"x-auth-token\"] = localStorage.getItem(\"token\");;\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    console.log(error);\n    Alert.error(\"An unexpected error occurrred.\");\n  }\n\n  return Promise.reject(error);\n});\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = authToken => {\n   localStorage.setItem(\"token\", authToken);\n\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: authToken\n  };\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error.response.data\n  };\n};\n\nexport const authSignUp = (\n  firstName,\n  lastName,\n  email,\n  password\n) => async dispatch => {\n  try {\n   \n    dispatch(authStart());\n    const authData = {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password\n    };\n    // console.log(JSON.stringify(authData))\n    const response = await axios.post(\"/api/users\", authData);\n    \n    return dispatch(authSuccess(response.headers[\"x-auth-token\"]));\n  } catch (err) {\n    console.log(err.response.data)\n    dispatch(authFail(err));\n  }\n};\n\nexport const authSignIn = (email, password) => async (dispatch) => {\n  try {    \n    const authData = {  \n      email: email  ,\n      password: password\n    };\n    dispatch(authStart());\n    const response = await axios.post(\"/api/auth\", authData);\n    return dispatch(authSuccess(response.data));\n  } catch (err) {\n    console.log(err.response.data)\n    dispatch(authFail(err));\n  }\n};\n\n\n/*\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiJkMzdkZmEyNS1mOTA5LTQxMTAtYjIzYS0zODg5NjRhNjc1ODkiLCJmaXJzdE5hbWUiOiJmbGFuIiwibGFzdE5hbWUiOiJ0ZXN0IiwiZW1haWwiOiJhbW1hcjEyQGhlbGFsYWFhaS5jb20iLCJpYXQiOjE1NTg5NDI1MDl9.CV2STTQmNEnCwLA2WI5xX5Mm-AQ7TsRVY6V-0-SMzOE\n\n*/"]},"metadata":{},"sourceType":"module"}