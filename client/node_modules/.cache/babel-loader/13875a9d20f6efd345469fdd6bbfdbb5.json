{"ast":null,"code":"var _jsxFileName = \"/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/Components/SurveyAnswersList/answerTypes/radioButton.jsx\";\nimport React, { Component } from \"react\";\nimport { Radio, RadioGroup } from \"rsuite\";\nimport _ from \"lodash\";\n\nclass RadioButton extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      choices: []\n    };\n\n    this.changedChoiceHandler = value => {\n      this.setState({\n        choices: [String(value)]\n      }, () => this.props.change(this.state));\n    };\n  }\n\n  componentDidMount() {\n    this.props.change(this.state);\n  }\n\n  render() {\n    this.choicesSentences = this.props.content.choices;\n    let radios = this.choicesSentences.map((c, i) => {\n      let content = this.props.isResponse ? React.createElement(Radio, {\n        key: i,\n        value: c,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, c) : React.createElement(Radio, {\n        key: i,\n        value: c,\n        onChange: this.changedChoiceHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, c);\n      return content;\n    });\n    let radioGroup = this.props.isResponse ? React.createElement(RadioGroup, {\n      name: \"radioList\",\n      value: this.props.answer.choices[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, radios) : React.createElement(RadioGroup, {\n      name: \"radioList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, radios);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, radioGroup);\n  }\n\n}\n\nexport default RadioButton;","map":{"version":3,"sources":["/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/Components/SurveyAnswersList/answerTypes/radioButton.jsx"],"names":["React","Component","Radio","RadioGroup","_","RadioButton","state","choices","changedChoiceHandler","value","setState","String","props","change","componentDidMount","render","choicesSentences","content","radios","map","c","i","isResponse","radioGroup","answer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,QAAlC;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCK,KADkC,GAC1B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD0B;;AAAA,SAIlCC,oBAJkC,GAIXC,KAAK,IAAI;AAC9B,WAAKC,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE,CAACI,MAAM,CAACF,KAAD,CAAP;AAAX,OAAd,EAA4C,MAC1C,KAAKG,KAAL,CAAWC,MAAX,CAAkB,KAAKP,KAAvB,CADF;AAGD,KARiC;AAAA;;AASlCQ,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,KAAL,CAAWC,MAAX,CAAkB,KAAKP,KAAvB;AACD;;AAEDS,EAAAA,MAAM,GAAG;AACP,SAAKC,gBAAL,GAAwB,KAAKJ,KAAL,CAAWK,OAAX,CAAmBV,OAA3C;AACA,QAAIW,MAAM,GAAG,KAAKF,gBAAL,CAAsBG,GAAtB,CAA0B,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC/C,UAAIJ,OAAO,GAAG,KAAKL,KAAL,CAAWU,UAAX,GACZ,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAED,CAAZ;AAAe,QAAA,KAAK,EAAED,CAAtB;AAAyB,QAAA,QAAQ,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,CADH,CADY,GAKZ,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEC,CAAZ;AAAe,QAAA,KAAK,EAAED,CAAtB;AAAyB,QAAA,QAAQ,EAAE,KAAKZ,oBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGY,CADH,CALF;AASA,aAAOH,OAAP;AACD,KAXY,CAAb;AAYA,QAAIM,UAAU,GAAG,KAAKX,KAAL,CAAWU,UAAX,GACf,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,WAAjB;AAA6B,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWY,MAAX,CAAkBjB,OAAlB,CAA0B,CAA1B,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGW,MADH,CADe,GAKf,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BA,MAA9B,CALF;AAOA,WAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBK,UAAjB,CAAP;AACD;;AAnCiC;;AAqCpC,eAAelB,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Radio, RadioGroup } from \"rsuite\";\nimport _ from \"lodash\";\n\nclass RadioButton extends Component {\n  state = {\n    choices: []\n  };\n  changedChoiceHandler = value => {\n    this.setState({ choices: [String(value)] }, () =>\n      this.props.change(this.state)\n    );\n  };\n  componentDidMount() {\n    this.props.change(this.state);\n  }\n\n  render() {\n    this.choicesSentences = this.props.content.choices;\n    let radios = this.choicesSentences.map((c, i) => {\n      let content = this.props.isResponse ? (\n        <Radio key={i} value={c} disabled>\n          {c}\n        </Radio>\n      ) : (\n        <Radio key={i} value={c} onChange={this.changedChoiceHandler}>\n          {c}\n        </Radio>\n      );\n      return content;\n    });\n    let radioGroup = this.props.isResponse ? (\n      <RadioGroup name=\"radioList\" value={this.props.answer.choices[0]}>\n        {radios}\n      </RadioGroup>\n    ) : (\n      <RadioGroup name=\"radioList\">{radios}</RadioGroup>\n    );\n    return <React.Fragment>{radioGroup}</React.Fragment>;\n  }\n}\nexport default RadioButton;\n"]},"metadata":{},"sourceType":"module"}