{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar parentStyles = {\n  overflow: 'hidden',\n  position: 'relative'\n};\nvar defaultStyles = {\n  position: 'relative',\n  overflow: 'hidden',\n  cursor: 'pointer',\n  display: 'block',\n  float: 'left'\n};\n\nvar getHalfStarStyles = function getHalfStarStyles(color, uniqueness) {\n  return '\\n    .react-stars-' + uniqueness + ':before {\\n      position: absolute;\\n      overflow: hidden;\\n      display: block;\\n      z-index: 1;\\n      top: 0; left: 0;\\n      width: 50%;\\n      content: attr(data-forhalf);\\n      color: ' + color + ';\\n  }';\n};\n\nvar ReactStars = function (_Component) {\n  _inherits(ReactStars, _Component);\n\n  function ReactStars(props) {\n    _classCallCheck(this, ReactStars); // set defaults\n\n\n    var _this = _possibleConstructorReturn(this, (ReactStars.__proto__ || Object.getPrototypeOf(ReactStars)).call(this, props));\n\n    props = _extends({}, props);\n    _this.state = {\n      uniqueness: (Math.random() + '').replace('.', ''),\n      value: props.value || 0,\n      stars: [],\n      halfStar: {\n        at: Math.floor(props.value),\n        hidden: props.half && props.value % 1 < 0.5\n      }\n    };\n    _this.state.config = {\n      count: props.count,\n      size: props.size,\n      char: props.char,\n      // default color of inactive star\n      color1: props.color1,\n      // color of an active star\n      color2: props.color2,\n      half: props.half,\n      edit: props.edit\n    };\n    return _this;\n  }\n\n  _createClass(ReactStars, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.setState({\n        stars: this.getStars(this.state.value)\n      });\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(props) {\n      this.setState({\n        stars: this.getStars(props.value),\n        value: props.value,\n        halfStar: {\n          at: Math.floor(props.value),\n          hidden: this.state.config.half && props.value % 1 < 0.5\n        }\n      });\n    }\n  }, {\n    key: 'isDecimal',\n    value: function isDecimal(value) {\n      return value % 1 !== 0;\n    }\n  }, {\n    key: 'getRate',\n    value: function getRate() {\n      var stars = void 0;\n\n      if (this.state.config.half) {\n        stars = Math.floor(this.state.value);\n      } else {\n        stars = Math.round(this.state.value);\n      }\n\n      return stars;\n    }\n  }, {\n    key: 'getStars',\n    value: function getStars(activeCount) {\n      if (typeof activeCount === 'undefined') {\n        activeCount = this.getRate();\n      }\n\n      var stars = [];\n\n      for (var i = 0; i < this.state.config.count; i++) {\n        stars.push({\n          active: i <= activeCount - 1\n        });\n      }\n\n      return stars;\n    }\n  }, {\n    key: 'mouseOver',\n    value: function mouseOver(event) {\n      var _state = this.state,\n          config = _state.config,\n          halfStar = _state.halfStar;\n      if (!config.edit) return;\n      var index = Number(event.target.getAttribute('data-index'));\n\n      if (config.half) {\n        var isAtHalf = this.moreThanHalf(event, config.size);\n        halfStar.hidden = isAtHalf;\n        if (isAtHalf) index = index + 1;\n        halfStar.at = index;\n      } else {\n        index = index + 1;\n      }\n\n      this.setState({\n        stars: this.getStars(index)\n      });\n    }\n  }, {\n    key: 'moreThanHalf',\n    value: function moreThanHalf(event, size) {\n      var target = event.target;\n      var mouseAt = event.clientX - target.getBoundingClientRect().left;\n      mouseAt = Math.round(Math.abs(mouseAt));\n      return mouseAt > size / 2;\n    }\n  }, {\n    key: 'mouseLeave',\n    value: function mouseLeave() {\n      var _state2 = this.state,\n          value = _state2.value,\n          halfStar = _state2.halfStar,\n          config = _state2.config;\n      if (!config.edit) return;\n\n      if (config.half) {\n        halfStar.hidden = !this.isDecimal(value);\n        halfStar.at = Math.floor(this.state.value);\n      }\n\n      this.setState({\n        stars: this.getStars()\n      });\n    }\n  }, {\n    key: 'clicked',\n    value: function clicked(event) {\n      var _state3 = this.state,\n          config = _state3.config,\n          halfStar = _state3.halfStar;\n      if (!config.edit) return;\n      var index = Number(event.target.getAttribute('data-index'));\n      var value = void 0;\n\n      if (config.half) {\n        var isAtHalf = this.moreThanHalf(event, config.size);\n        halfStar.hidden = isAtHalf;\n        if (isAtHalf) index = index + 1;\n        value = isAtHalf ? index : index + .5;\n        halfStar.at = index;\n      } else {\n        value = index = index + 1;\n      }\n\n      this.setState({\n        value: value,\n        stars: this.getStars(index)\n      });\n      this.props.onChange(value);\n    }\n  }, {\n    key: 'renderHalfStarStyleElement',\n    value: function renderHalfStarStyleElement() {\n      var _state4 = this.state,\n          config = _state4.config,\n          uniqueness = _state4.uniqueness;\n      return _react2.default.createElement('style', {\n        dangerouslySetInnerHTML: {\n          __html: getHalfStarStyles(config.color2, uniqueness)\n        }\n      });\n    }\n  }, {\n    key: 'renderStars',\n    value: function renderStars() {\n      var _this2 = this;\n\n      var _state5 = this.state,\n          halfStar = _state5.halfStar,\n          stars = _state5.stars,\n          uniqueness = _state5.uniqueness,\n          config = _state5.config;\n      var color1 = config.color1,\n          color2 = config.color2,\n          size = config.size,\n          char = config.char,\n          half = config.half,\n          edit = config.edit;\n      return stars.map(function (star, i) {\n        var starClass = '';\n\n        if (half && !halfStar.hidden && halfStar.at === i) {\n          starClass = 'react-stars-' + uniqueness;\n        }\n\n        var style = _extends({}, defaultStyles, {\n          color: star.active ? color2 : color1,\n          cursor: edit ? 'pointer' : 'default',\n          fontSize: size + 'px'\n        });\n\n        return _react2.default.createElement('span', {\n          className: starClass,\n          style: style,\n          key: i,\n          'data-index': i,\n          'data-forhalf': char,\n          onMouseOver: _this2.mouseOver.bind(_this2),\n          onMouseMove: _this2.mouseOver.bind(_this2),\n          onMouseLeave: _this2.mouseLeave.bind(_this2),\n          onClick: _this2.clicked.bind(_this2)\n        }, char);\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var className = this.props.className;\n      return _react2.default.createElement('div', {\n        className: className,\n        style: parentStyles\n      }, this.state.config.half ? this.renderHalfStarStyleElement() : '', this.renderStars());\n    }\n  }]);\n\n  return ReactStars;\n}(_react.Component);\n\nReactStars.propTypes = {\n  className: _propTypes2.default.string,\n  edit: _propTypes2.default.bool,\n  half: _propTypes2.default.bool,\n  value: _propTypes2.default.number,\n  count: _propTypes2.default.number,\n  char: _propTypes2.default.string,\n  size: _propTypes2.default.number,\n  color1: _propTypes2.default.string,\n  color2: _propTypes2.default.string\n};\nReactStars.defaultProps = {\n  edit: true,\n  half: true,\n  value: 0,\n  count: 5,\n  char: 'â˜…',\n  size: 15,\n  color1: 'gray',\n  color2: '#ffd700',\n  onChange: function onChange() {}\n};\nexports.default = ReactStars;","map":null,"metadata":{},"sourceType":"script"}