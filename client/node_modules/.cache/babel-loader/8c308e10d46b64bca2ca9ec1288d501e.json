{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.find = find;\nexports.map = map;\nexports.mapCloneElement = mapCloneElement;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction find(children, func, context) {\n  var index = 0;\n  var result;\n  React.Children.forEach(children, function (child) {\n    if (result) {\n      return;\n    }\n\n    index += 1;\n\n    if (func.call(context, child, index)) {\n      result = child;\n    }\n  });\n  return result;\n}\n\nfunction map(children, func, context) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    if (!React.isValidElement(child)) {\n      return child;\n    }\n\n    var handle = func.call(context, child, index);\n    index += 1;\n    return handle;\n  });\n}\n\nfunction mapCloneElement(children, func, context) {\n  return map(children, function (child, index) {\n    return React.cloneElement(child, (0, _extends2.default)({\n      key: index\n    }, func(child, index)));\n  }, context);\n}\n\nfunction some(children, func, context) {\n  var index = 0;\n  var result = false;\n  React.Children.forEach(children, function (child) {\n    if (result) {\n      return;\n    }\n\n    if (!React.isValidElement(child)) {\n      return;\n    }\n    /* eslint-disable */\n\n\n    if (func.call(context, child, index += 1)) {\n      result = true;\n    }\n  });\n  return result;\n}\n\nvar _default = {\n  mapCloneElement: mapCloneElement,\n  some: some,\n  map: map,\n  find: find\n};\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}