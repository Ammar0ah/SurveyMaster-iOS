{"ast":null,"code":"var _jsxFileName = \"/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/Containers/Responses/Responses.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { previewResponses, getFullResponse } from \"../../store/actions/ResponsesActions\";\nimport ResponesList from '../../Components/Responses/ResponsesList/ResponsesList';\nimport Response from '../../Components/Responses/Response/Response';\nimport { MDBRow, MDBCol } from \"mdbreact\";\nimport './Responses.css';\n\nclass Responses extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataLoaded: false\n    };\n\n    this.dataLoadedHandler = newVal => {\n      this.setState({\n        dataLoaded: newVal\n      });\n    };\n\n    this.focusedIndexHandler = newVal => {\n      this.setState({\n        focusedIndex: newVal\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.previewResponses(this.props.match.params.id, this.dataLoadedHandler);\n  }\n\n  render() {\n    let ResponsesList = null;\n    let data = this.props.response ? this.props.response.answers : null;\n    if (this.state.dataLoaded) ResponsesList = React.createElement(ResponesList, {\n      list: this.props.data,\n      ListItemClicked: Rid => this.props.getFullResponse(this.props.match.params.id, Rid),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: \"responses\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      size: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, ResponsesList), React.createElement(MDBCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Response, {\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.responses.data,\n    response: state.responses.response\n  };\n};\n\nexport default connect(mapStateToProps, {\n  previewResponses,\n  getFullResponse\n})(Responses);","map":{"version":3,"sources":["/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/Containers/Responses/Responses.js"],"names":["React","Component","connect","previewResponses","getFullResponse","ResponesList","Response","MDBRow","MDBCol","Responses","state","dataLoaded","dataLoadedHandler","newVal","setState","focusedIndexHandler","focusedIndex","componentDidMount","props","match","params","id","render","ResponsesList","data","response","answers","Rid","mapStateToProps","responses"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,EAA0BC,eAA1B,QAAiD,sCAAjD;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,OAAOC,QAAP,MAAqB,8CAArB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,UAA/B;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAN,SAAwBR,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCS,KADgC,GACxB;AACNC,MAAAA,UAAU,EAAE;AADN,KADwB;;AAAA,SAUhCC,iBAVgC,GAUZC,MAAM,IAAI;AAC5B,WAAKC,QAAL,CAAc;AACZH,QAAAA,UAAU,EAAEE;AADA,OAAd;AAGD,KAd+B;;AAAA,SAgBhCE,mBAhBgC,GAgBVF,MAAM,IAAI;AAC9B,WAAKC,QAAL,CAAc;AACZE,QAAAA,YAAY,EAAEH;AADF,OAAd;AAGD,KApB+B;AAAA;;AAIhCI,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWf,gBAAX,CACE,KAAKe,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAD1B,EAEE,KAAKT,iBAFP;AAID;;AAYDU,EAAAA,MAAM,GAAG;AACP,QAAIC,aAAa,GAAG,IAApB;AACA,QAAIC,IAAI,GAAG,KAAKN,KAAL,CAAWO,QAAX,GAAsB,KAAKP,KAAL,CAAWO,QAAX,CAAoBC,OAA1C,GAAoD,IAA/D;AACA,QAAI,KAAKhB,KAAL,CAAWC,UAAf,EAA4BY,aAAa,GAAG,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWM,IAA/B;AAAqC,MAAA,eAAe,EAAGG,GAAD,IAAS,KAAKT,KAAL,CAAWd,eAAX,CAA2B,KAAKc,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAnD,EAAsDM,GAAtD,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB;AACxB,WACJ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCJ,aADD,CADF,EAIE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CADF,CADI;AAWL;;AApC+B;;AAuClC,MAAMI,eAAe,GAAGlB,KAAK,IAAI;AAC/B,SAAO;AACLc,IAAAA,IAAI,EAAEd,KAAK,CAACmB,SAAN,CAAgBL,IADjB;AAELC,IAAAA,QAAQ,EAAEf,KAAK,CAACmB,SAAN,CAAgBJ;AAFrB,GAAP;AAID,CALD;;AAMA,eAAevB,OAAO,CACpB0B,eADoB,EAEpB;AAAEzB,EAAAA,gBAAF;AAAmBC,EAAAA;AAAnB,CAFoB,CAAP,CAGbK,SAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { previewResponses,getFullResponse } from \"../../store/actions/ResponsesActions\";\nimport ResponesList from '../../Components/Responses/ResponsesList/ResponsesList'\nimport Response from '../../Components/Responses/Response/Response'\nimport { MDBRow, MDBCol } from \"mdbreact\";\nimport './Responses.css'\n\nclass Responses extends Component {\n  state = {\n    dataLoaded: false,\n  };\n  componentDidMount() {\n    this.props.previewResponses(\n      this.props.match.params.id,\n      this.dataLoadedHandler\n    );\n  }\n  dataLoadedHandler = newVal => {\n    this.setState({\n      dataLoaded: newVal\n    });\n  };\n\n  focusedIndexHandler = newVal => { \n    this.setState({\n      focusedIndex: newVal\n    })\n  }\n  render() {\n    let ResponsesList = null;\n    let data = this.props.response ? this.props.response.answers : null;\n    if (this.state.dataLoaded)  ResponsesList = <ResponesList list={this.props.data} ListItemClicked={(Rid) => this.props.getFullResponse(this.props.match.params.id,Rid)}/>\n        return (\n    <div className=\"responses\">\n      <MDBRow>\n        <MDBCol size=\"4\">\n        {ResponsesList}\n        </MDBCol>\n        <MDBCol>\n          <Response data={data}></Response>\n        </MDBCol>\n      </MDBRow>\n    </div>);\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.responses.data,\n    response: state.responses.response\n  };\n};\nexport default connect(\n  mapStateToProps,\n  { previewResponses,getFullResponse }\n)(Responses);\n"]},"metadata":{},"sourceType":"module"}