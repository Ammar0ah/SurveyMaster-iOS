{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _utils = require('rsuite-utils/lib/utils');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Notice = function (_React$Component) {\n  _inherits(Notice, _React$Component);\n\n  function Notice() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Notice);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Notice.__proto__ || Object.getPrototypeOf(Notice)).call.apply(_ref, [this].concat(args))), _this), _this.close = function () {\n      var onClose = _this.props.onClose;\n\n      _this.clearCloseTimer();\n\n      onClose && onClose();\n    }, _this.addPrefix = function (name) {\n      return (0, _utils.prefix)(_this.props.classPrefix)(name);\n    }, _this.closeTimer = null, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Notice, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var duration = this.props.duration;\n\n      if (duration) {\n        this.closeTimer = setTimeout(function () {\n          _this2.close();\n        }, duration);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.clearCloseTimer();\n    }\n  }, {\n    key: 'clearCloseTimer',\n    value: function clearCloseTimer() {\n      if (this.closeTimer) {\n        clearTimeout(this.closeTimer);\n        this.closeTimer = null;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _classNames;\n\n      var _props = this.props,\n          classPrefix = _props.classPrefix,\n          closable = _props.closable,\n          className = _props.className,\n          content = _props.content,\n          style = _props.style,\n          _props$type = _props.type,\n          type = _props$type === undefined ? '' : _props$type;\n      var noticeClass = this.addPrefix('notice');\n      var wrapperClass = (0, _classnames2.default)(className, noticeClass + '-wrapper');\n      var classes = (0, _classnames2.default)(noticeClass, (_classNames = {}, _defineProperty(_classNames, this.addPrefix('notice-closable'), closable), _defineProperty(_classNames, classPrefix + '-' + type, !!type), _classNames));\n      return React.createElement('div', {\n        className: wrapperClass\n      }, React.createElement('div', {\n        className: classes,\n        style: style\n      }, React.createElement('div', {\n        className: noticeClass + '-content'\n      }, content), closable && React.createElement('div', {\n        role: 'button',\n        tabIndex: '-1',\n        onClick: this.close,\n        className: noticeClass + '-close'\n      }, React.createElement('span', {\n        className: noticeClass + '-close-x'\n      }))));\n    }\n  }]);\n\n  return Notice;\n}(React.Component);\n\nNotice.propTypes = {\n  duration: _propTypes2.default.number.isRequired,\n  content: function content(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error('Prop `' + propName + '` has type \\'any\\' or \\'mixed\\', but was not provided to `' + componentName + '`. Pass undefined or any other value.');\n    }\n  },\n  onClose: _propTypes2.default.func,\n  closable: _propTypes2.default.bool,\n  classPrefix: _propTypes2.default.string.isRequired,\n  className: _propTypes2.default.string,\n  style: _propTypes2.default.object,\n  type: _propTypes2.default.string\n};\nNotice.handledProps = ['className', 'classPrefix', 'closable', 'content', 'duration', 'onClose', 'style', 'type'];\nexports.default = Notice;","map":null,"metadata":{},"sourceType":"script"}