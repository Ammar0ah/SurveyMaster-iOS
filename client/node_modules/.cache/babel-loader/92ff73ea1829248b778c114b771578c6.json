{"ast":null,"code":"import _objectSpread from \"/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from \"../actions/types\";\nconst initialState = {\n  token: localStorage.getItem('token'),\n  loading: false,\n  error: null\n};\n\nconst authStart = state => {\n  return _objectSpread({}, state, {\n    loading: true\n  });\n};\n\nconst authSuccess = (state, action) => {\n  return _objectSpread({}, state, {\n    token: action.token,\n    loading: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return _objectSpread({}, state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state);\n\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n\n    default:\n      return _objectSpread({}, state, {\n        token: localStorage.getItem('token')\n      });\n  }\n};\n\nexport default authReducer;","map":{"version":3,"sources":["/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/store/reducers/authReducer.js"],"names":["actionTypes","initialState","token","localStorage","getItem","loading","error","authStart","state","authSuccess","action","authFail","authReducer","type","AUTH_START","AUTH_SUCCESS","AUTH_FAIL"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,kBAA7B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,KAAK,EAAC;AAHa,CAArB;;AAKA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,2BAAYA,KAAZ;AAAmBH,IAAAA,OAAO,EAAE;AAA5B;AACD,CAFD;;AAGA,MAAMI,WAAW,GAAG,CAACD,KAAD,EAAQE,MAAR,KAAmB;AACrC,2BACKF,KADL;AAEEN,IAAAA,KAAK,EAAEQ,MAAM,CAACR,KAFhB;AAGEG,IAAAA,OAAO,EAAE;AAHX;AAKD,CAND;;AASA,MAAMM,QAAQ,GAAG,CAACH,KAAD,EAAQE,MAAR,KAAmB;AAClC,2BACKF,KADL;AAEEF,IAAAA,KAAK,EAAEI,MAAM,CAACJ,KAFhB;AAGED,IAAAA,OAAO,EAAE;AAHX;AAKD,CAND;;AAOA,MAAMO,WAAW,GAAG,CAACJ,KAAK,GAAGP,YAAT,EAAuBS,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACG,IAAf;AACE,SAAKb,WAAW,CAACc,UAAjB;AACE,aAAOP,SAAS,CAACC,KAAD,CAAhB;;AACF,SAAKR,WAAW,CAACe,YAAjB;AACE,aAAON,WAAW,CAACD,KAAD,EAAQE,MAAR,CAAlB;;AACF,SAAKV,WAAW,CAACgB,SAAjB;AACE,aAAOL,QAAQ,CAACH,KAAD,EAAQE,MAAR,CAAf;;AACF;AACA,+BAAWF,KAAX;AAAiBN,QAAAA,KAAK,EAACC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAAvB;AARF;AAUD,CAXD;;AAYA,eAAeQ,WAAf","sourcesContent":["import * as actionTypes from \"../actions/types\";\nconst initialState = {\n  token: localStorage.getItem('token'),\n  loading: false,\n  error:null\n};\nconst authStart = state => {\n  return { ...state, loading: true };\n};\nconst authSuccess = (state, action) => {\n  return {\n    ...state,\n    token: action.token,\n    loading: false,\n  };\n};\n\n\nconst authFail = (state, action) => {\n  return {\n    ...state,\n    error: action.error,\n    loading: false\n  };\n};\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    default: \n    return {...state,token:localStorage.getItem('token')}\n  }\n};\nexport default authReducer;\n"]},"metadata":{},"sourceType":"module"}