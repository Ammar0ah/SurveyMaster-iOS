{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _utils = require(\"../utils\");\n\nvar DropdownMenuCheckItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(DropdownMenuCheckItem, _React$Component);\n\n  function DropdownMenuCheckItem() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleChange\", function (event) {\n      var _this$props = _this.props,\n          value = _this$props.value,\n          disabled = _this$props.disabled,\n          onSelect = _this$props.onSelect;\n\n      if (!disabled && onSelect) {\n        onSelect(value, event, event.target.checked);\n      }\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleCheck\", function (event) {\n      var _this$props2 = _this.props,\n          value = _this$props2.value,\n          disabled = _this$props2.disabled,\n          onCheck = _this$props2.onCheck,\n          active = _this$props2.active;\n\n      if (!disabled && onCheck) {\n        onCheck(value, event, !active);\n      }\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleSelectItem\", function (event) {\n      var _this$props3 = _this.props,\n          value = _this$props3.value,\n          disabled = _this$props3.disabled,\n          onSelectItem = _this$props3.onSelectItem,\n          active = _this$props3.active;\n\n      if (!disabled && onSelectItem) {\n        onSelectItem(value, event, !active);\n      }\n    });\n    return _this;\n  }\n\n  var _proto = DropdownMenuCheckItem.prototype;\n\n  _proto.render = function render() {\n    var _classNames;\n\n    var _this$props4 = this.props,\n        active = _this$props4.active,\n        onKeyDown = _this$props4.onKeyDown,\n        disabled = _this$props4.disabled,\n        focus = _this$props4.focus,\n        children = _this$props4.children,\n        className = _this$props4.className,\n        classPrefix = _this$props4.classPrefix,\n        checkable = _this$props4.checkable,\n        Label = _this$props4.labelComponentClass,\n        rest = (0, _objectWithoutPropertiesLoose2.default)(_this$props4, [\"active\", \"onKeyDown\", \"disabled\", \"focus\", \"children\", \"className\", \"classPrefix\", \"checkable\", \"labelComponentClass\"]);\n    var addPrefix = (0, _utils.prefix)(classPrefix);\n    var classes = (0, _classnames.default)(classPrefix, (_classNames = {}, _classNames[addPrefix('active')] = active, _classNames[addPrefix('focus')] = focus, _classNames[addPrefix('disabled')] = disabled, _classNames));\n    var unhandled = (0, _utils.getUnhandledProps)(DropdownMenuCheckItem, rest);\n    var input = React.createElement(\"span\", {\n      className: addPrefix('wrapper'),\n      onClick: this.handleCheck\n    }, React.createElement(\"input\", {\n      checked: active,\n      type: \"checkbox\",\n      disabled: disabled,\n      onChange: this.handleChange\n    }), React.createElement(\"span\", {\n      className: addPrefix('inner')\n    }));\n    return React.createElement(\"li\", (0, _extends2.default)({}, unhandled, {\n      className: className,\n      role: \"menuitem\"\n    }), React.createElement(\"div\", {\n      className: addPrefix('checker')\n    }, React.createElement(Label, {\n      className: classes,\n      tabIndex: -1,\n      role: \"presentation\",\n      onKeyDown: disabled ? null : onKeyDown,\n      onClick: this.handleSelectItem\n    }, checkable ? input : null, children)));\n  };\n\n  return DropdownMenuCheckItem;\n}(React.Component);\n\n(0, _defineProperty2.default)(DropdownMenuCheckItem, \"defaultProps\", {\n  checkable: true,\n  labelComponentClass: 'label'\n});\n(0, _defineProperty2.default)(DropdownMenuCheckItem, \"handledProps\", [\"active\", \"checkable\", \"children\", \"className\", \"classPrefix\", \"disabled\", \"focus\", \"getItemData\", \"labelComponentClass\", \"onCheck\", \"onKeyDown\", \"onSelect\", \"onSelectItem\", \"title\", \"value\"]);\nvar _default = DropdownMenuCheckItem;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}