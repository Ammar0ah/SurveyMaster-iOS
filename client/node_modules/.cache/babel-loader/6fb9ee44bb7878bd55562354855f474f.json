{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _isUndefined2 = _interopRequireDefault(require(\"lodash/isUndefined\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _recompose = require(\"recompose\");\n\nvar _SafeAnchor = _interopRequireDefault(require(\"./SafeAnchor\"));\n\nvar _Icon = _interopRequireDefault(require(\"./Icon\"));\n\nvar _utils = require(\"./utils\");\n\nvar DropdownMenuItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(DropdownMenuItem, _React$Component);\n\n  function DropdownMenuItem(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"toggle\", function (event, isOpen) {\n      var open = (0, _isUndefined2.default)(isOpen) ? !_this.getOpen() : isOpen;\n\n      _this.setState({\n        open: open\n      });\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleClick\", function (event) {\n      var _this$props = _this.props,\n          onSelect = _this$props.onSelect,\n          eventKey = _this$props.eventKey,\n          disabled = _this$props.disabled,\n          onClick = _this$props.onClick;\n\n      if (disabled) {\n        event.preventDefault();\n        return;\n      }\n\n      onSelect && onSelect(eventKey, event);\n      onClick && onClick(event);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleMouseOver\", function (event) {\n      _this.toggle(event, true);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleMouseOut\", function (event) {\n      _this.toggle(event, false);\n    });\n    _this.state = {\n      open: props.open\n    };\n    return _this;\n  }\n\n  var _proto = DropdownMenuItem.prototype;\n\n  _proto.getOpen = function getOpen() {\n    var open = this.props.open;\n\n    if ((0, _isUndefined2.default)(open)) {\n      return this.state.open;\n    }\n\n    return open;\n  };\n\n  _proto.render = function render() {\n    var _classNames;\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        divider = _this$props2.divider,\n        panel = _this$props2.panel,\n        active = _this$props2.active,\n        disabled = _this$props2.disabled,\n        className = _this$props2.className,\n        submenu = _this$props2.submenu,\n        style = _this$props2.style,\n        classPrefix = _this$props2.classPrefix,\n        tabIndex = _this$props2.tabIndex,\n        pullLeft = _this$props2.pullLeft,\n        icon = _this$props2.icon,\n        trigger = _this$props2.trigger,\n        expanded = _this$props2.expanded,\n        Component = _this$props2.componentClass,\n        rest = (0, _objectWithoutPropertiesLoose2.default)(_this$props2, [\"children\", \"divider\", \"panel\", \"active\", \"disabled\", \"className\", \"submenu\", \"style\", \"classPrefix\", \"tabIndex\", \"pullLeft\", \"icon\", \"trigger\", \"expanded\", \"componentClass\"]);\n    var unhandled = (0, _utils.getUnhandledProps)(DropdownMenuItem, rest);\n    var addPrefix = (0, _utils.prefix)(classPrefix);\n    var classes = (0, _classnames.default)(classPrefix, className, (_classNames = {}, _classNames[addPrefix(expanded ? 'expand' : 'collapse')] = submenu && this.context.sidenav, _classNames[addPrefix('submenu')] = submenu, _classNames[addPrefix('open')] = this.getOpen(), _classNames[addPrefix('active')] = active, _classNames[addPrefix('disabled')] = disabled, _classNames[addPrefix(\"pull-\" + (pullLeft ? 'left' : 'right'))] = pullLeft, _classNames[addPrefix('with-icon')] = icon, _classNames));\n    var itemProps = {};\n    var itemToggleProps = {\n      onClick: this.handleClick\n    };\n\n    if ((0, _utils.isOneOf)('hover', trigger) && submenu && !this.context.expanded) {\n      itemProps.onMouseOver = this.handleMouseOver;\n      itemProps.onMouseOut = this.handleMouseOut;\n    }\n\n    if ((0, _utils.isOneOf)('click', trigger) && submenu) {\n      itemToggleProps.onClick = (0, _utils.createChainedFunction)(this.handleClick, this.toggle);\n    }\n\n    if (divider) {\n      return React.createElement(\"li\", {\n        role: \"separator\",\n        style: style,\n        className: (0, _classnames.default)(addPrefix('divider'), className)\n      });\n    }\n\n    if (panel) {\n      return React.createElement(\"li\", {\n        style: style,\n        className: (0, _classnames.default)(addPrefix('panel'), className)\n      }, children);\n    }\n\n    return React.createElement(\"li\", (0, _extends2.default)({}, itemProps, {\n      style: style,\n      role: \"presentation\",\n      className: classes\n    }), React.createElement(Component, (0, _extends2.default)({}, unhandled, itemToggleProps, {\n      className: addPrefix('content'),\n      tabIndex: tabIndex\n    }), icon && React.cloneElement(icon, {\n      className: addPrefix('menu-icon')\n    }), children));\n  };\n\n  return DropdownMenuItem;\n}(React.Component);\n\n(0, _defineProperty2.default)(DropdownMenuItem, \"defaultProps\", {\n  tabIndex: -1,\n  trigger: 'hover'\n});\n(0, _defineProperty2.default)(DropdownMenuItem, \"contextTypes\", {\n  sidenav: _propTypes.default.bool,\n  expanded: _propTypes.default.bool\n});\n(0, _defineProperty2.default)(DropdownMenuItem, \"handledProps\", [\"active\", \"children\", \"className\", \"classPrefix\", \"componentClass\", \"disabled\", \"divider\", \"eventKey\", \"expanded\", \"icon\", \"onClick\", \"onSelect\", \"open\", \"panel\", \"pullLeft\", \"style\", \"submenu\", \"tabIndex\", \"trigger\"]);\nvar EnhancedDropdownMenuItem = (0, _utils.defaultProps)({\n  classPrefix: 'dropdown-item',\n  componentClass: _SafeAnchor.default\n})(DropdownMenuItem);\nvar Component = (0, _recompose.setDisplayName)('DropdownMenuItem')(EnhancedDropdownMenuItem);\nvar _default = Component;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}