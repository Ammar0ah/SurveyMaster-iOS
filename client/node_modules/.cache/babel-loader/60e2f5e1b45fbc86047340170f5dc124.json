{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _isUndefined2 = _interopRequireDefault(require(\"lodash/isUndefined\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _setDisplayName = _interopRequireDefault(require(\"recompose/setDisplayName\"));\n\nvar _utils = require(\"./utils\");\n\nvar Checkbox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(Checkbox, _React$Component);\n\n  function Checkbox(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleChange\", function (event) {\n      var _this$props = _this.props,\n          onChange = _this$props.onChange,\n          disabled = _this$props.disabled,\n          value = _this$props.value;\n      var checked = !_this.isChecked();\n\n      if (disabled) {\n        return;\n      }\n\n      _this.setState({\n        checked: checked\n      }, function () {\n        onChange && onChange(value, checked, event);\n      });\n    });\n    _this.state = {\n      checked: props.defaultChecked\n    };\n    return _this;\n  }\n\n  var _proto = Checkbox.prototype;\n\n  _proto.isChecked = function isChecked() {\n    var checked = this.props.checked;\n    return (0, _isUndefined2.default)(checked) ? this.state.checked : checked;\n  };\n\n  _proto.render = function render() {\n    var _classNames;\n\n    var _this$props2 = this.props,\n        inline = _this$props2.inline,\n        disabled = _this$props2.disabled,\n        className = _this$props2.className,\n        children = _this$props2.children,\n        title = _this$props2.title,\n        inputRef = _this$props2.inputRef,\n        defaultChecked = _this$props2.defaultChecked,\n        indeterminate = _this$props2.indeterminate,\n        tabIndex = _this$props2.tabIndex,\n        classPrefix = _this$props2.classPrefix,\n        onClick = _this$props2.onClick,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props2, [\"inline\", \"disabled\", \"className\", \"children\", \"title\", \"inputRef\", \"defaultChecked\", \"indeterminate\", \"tabIndex\", \"classPrefix\", \"onClick\"]);\n    var checked = this.isChecked();\n    var addPrefix = (0, _utils.prefix)(classPrefix);\n    var classes = (0, _classnames.default)(classPrefix, className, (_classNames = {}, _classNames[addPrefix('inline')] = inline, _classNames[addPrefix('indeterminate')] = indeterminate, _classNames[addPrefix('disabled')] = disabled, _classNames[addPrefix('checked')] = checked, _classNames));\n    var unhandled = (0, _utils.getUnhandledProps)(Checkbox, props);\n\n    var _partitionHTMLProps = (0, _utils.partitionHTMLProps)(unhandled),\n        htmlInputProps = _partitionHTMLProps[0],\n        rest = _partitionHTMLProps[1];\n\n    var input = React.createElement(\"span\", {\n      tabIndex: disabled ? -1 : tabIndex,\n      className: addPrefix('wrapper')\n    }, React.createElement(\"input\", (0, _extends2.default)({}, htmlInputProps, {\n      defaultChecked: defaultChecked,\n      type: \"checkbox\",\n      ref: inputRef,\n      onClick: function onClick(event) {\n        return event.stopPropagation();\n      },\n      disabled: disabled,\n      onChange: this.handleChange\n    })), React.createElement(\"span\", {\n      className: addPrefix('inner')\n    }));\n    return React.createElement(\"div\", (0, _extends2.default)({}, rest, {\n      onClick: onClick,\n      className: classes\n    }), React.createElement(\"div\", {\n      className: addPrefix('checker')\n    }, React.createElement(\"label\", {\n      title: title\n    }, input, children)));\n  };\n\n  return Checkbox;\n}(React.Component);\n\n(0, _defineProperty2.default)(Checkbox, \"defaultProps\", {\n  tabIndex: 0\n});\n(0, _defineProperty2.default)(Checkbox, \"handledProps\", [\"checked\", \"children\", \"className\", \"classPrefix\", \"defaultChecked\", \"disabled\", \"indeterminate\", \"inline\", \"inputRef\", \"onChange\", \"onClick\", \"tabIndex\", \"title\", \"value\"]);\nvar EnhancedCheckBox = (0, _utils.defaultProps)({\n  classPrefix: 'checkbox'\n})(Checkbox);\nvar Component = (0, _setDisplayName.default)('Checkbox')(EnhancedCheckBox);\nvar _default = Component;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}