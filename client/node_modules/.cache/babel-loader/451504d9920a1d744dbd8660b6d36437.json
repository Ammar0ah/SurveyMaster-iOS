{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _compose = _interopRequireDefault(require(\"recompose/compose\"));\n\nvar _utils = require(\"./utils\");\n\nvar Toggle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(Toggle, _React$Component);\n\n  function Toggle(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleChange\", function (event) {\n      var _this$props = _this.props,\n          onChange = _this$props.onChange,\n          disabled = _this$props.disabled;\n      var checked = !_this.getCheckedStatus();\n\n      if (disabled) {\n        return;\n      }\n\n      _this.setState({\n        checked: checked\n      });\n\n      onChange && onChange(checked, event);\n    });\n    _this.state = {\n      checked: props.defaultChecked\n    };\n    return _this;\n  }\n\n  var _proto = Toggle.prototype;\n\n  _proto.getCheckedStatus = function getCheckedStatus() {\n    var checked = this.props.checked;\n    return typeof checked === 'undefined' ? this.state.checked : checked;\n  };\n\n  _proto.render = function render() {\n    var _classNames;\n\n    var _this$props2 = this.props,\n        disabled = _this$props2.disabled,\n        className = _this$props2.className,\n        checkedChildren = _this$props2.checkedChildren,\n        unCheckedChildren = _this$props2.unCheckedChildren,\n        classPrefix = _this$props2.classPrefix,\n        rest = (0, _objectWithoutPropertiesLoose2.default)(_this$props2, [\"disabled\", \"className\", \"checkedChildren\", \"unCheckedChildren\", \"classPrefix\"]);\n    var checked = this.getCheckedStatus();\n    var addPrefix = (0, _utils.prefix)(classPrefix);\n    var classes = (0, _classnames.default)(classPrefix, className, (_classNames = {}, _classNames[addPrefix('checked')] = checked, _classNames[addPrefix('disabled')] = disabled, _classNames));\n    var inner = checked ? checkedChildren : unCheckedChildren;\n    var unhandled = (0, _utils.getUnhandledProps)(Toggle, rest);\n    return React.createElement(\"span\", (0, _extends2.default)({}, unhandled, {\n      className: classes,\n      role: \"button\",\n      tabIndex: -1,\n      onClick: this.handleChange\n    }), React.createElement(\"span\", {\n      className: addPrefix('inner')\n    }, inner));\n  };\n\n  return Toggle;\n}(React.Component);\n\n(0, _defineProperty2.default)(Toggle, \"handledProps\", [\"checked\", \"checkedChildren\", \"className\", \"classPrefix\", \"defaultChecked\", \"disabled\", \"onChange\", \"unCheckedChildren\"]);\n\nvar _default = (0, _compose.default)((0, _utils.withStyleProps)({\n  hasSize: true\n}), (0, _utils.defaultProps)({\n  classPrefix: 'btn-toggle'\n}))(Toggle);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}