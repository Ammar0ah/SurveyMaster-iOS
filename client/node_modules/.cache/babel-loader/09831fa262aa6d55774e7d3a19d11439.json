{"ast":null,"code":"var _jsxFileName = \"/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/Components/SurveyAnswersList/SurveyFill_Item/SurveyFill_item.jsx\";\nimport React, { Component } from \"react\";\nimport CheckBox from \"../answerTypes/multiplechoice\";\nimport ShortText from \"../answerTypes/shortText\";\nimport Paragraph from \"../answerTypes/paragraph\";\nimport Range from \"../answerTypes/range\";\nimport Rating from \"../answerTypes/rating\";\nimport Slider from \"../answerTypes/slider\";\nimport Dropdown from \"../answerTypes/dropdownmenu\";\nimport * as Qtype from \"../../Question/QuestionTypes\";\nimport * as Atype from \"../../../store/actions/types\";\nimport { connect } from \"react-redux\";\nimport { addquestion } from \"../../../store/actions/answersAction\";\nimport RadioButton from \"../answerTypes/radioButton\";\nimport styleClass from \"./SurveyFll_item.module.css\";\nimport \"./style.css\";\nimport RatingNumbers from \"../answerTypes/ratingNumbers\";\nimport LeftAlign from \"../../UI/LeftAlign/LeftAlign\";\n/************************ */\n\n/*single question to fill */\n\n/************************ */\n\nclass SurveyPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onAnswerChange = value => {\n      this.localState.info.content = value; //console.log('value',value)\n\n      this.props.addquestion(this.localState);\n    };\n\n    this.localState = {\n      survey_id: String(this.props.surveyId),\n      info: {\n        questionId: this.props.id,\n        type: this.props.answerObjectType,\n        content: {}\n      }\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          answerObjectType = _this$props.answerObjectType,\n          title = _this$props.title,\n          content = _this$props.content;\n    let answer = null;\n    let info = this.localState.info;\n\n    switch (answerObjectType) {\n      case Qtype.CHECKBOX:\n        {\n          info.type = Atype.ANSWER_MULTIPLE_CHOICE; //      console.log('type', this.localState.type)\n\n          answer = React.createElement(LeftAlign, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, React.createElement(CheckBox, {\n            content: content,\n            change: this.onAnswerChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }));\n          break;\n        }\n\n      case Qtype.TEXT:\n        {\n          info.type = Atype.ANSWER_TEXT;\n          answer = React.createElement(LeftAlign, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, React.createElement(ShortText, {\n            content: content,\n            change: this.onAnswerChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }));\n          break;\n        }\n\n      case Qtype.RADIO_GROUP:\n        console.log(content);\n        info.type = Atype.ANSWER_MULTIPLE_CHOICE;\n        answer = React.createElement(LeftAlign, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(RadioButton, {\n          content: content,\n          change: this.onAnswerChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }));\n        break;\n\n      case Qtype.DROPDOWN:\n        info.type = Atype.ANSWER_MULTIPLE_CHOICE;\n        answer = React.createElement(Dropdown, {\n          content: content,\n          change: this.onAnswerChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        });\n        break;\n\n      case Qtype.PARAGRAPH:\n        {\n          info.type = Atype.ANSWER_TEXT;\n          answer = React.createElement(LeftAlign, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, React.createElement(Paragraph, {\n            content: content,\n            change: this.onAnswerChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }));\n          break;\n        }\n\n      case Qtype.RANGE:\n        info.type = Atype.ANSWER_RANGE;\n        answer = React.createElement(Range, {\n          content: content,\n          change: this.onAnswerChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        });\n        break;\n\n      case Qtype.RATING:\n        info.type = Atype.ANSWER_SINGLE_NUMBER_VALUE;\n\n        if (content.ratingType === \"RATING_NUMBERS\") {\n          console.log(content);\n          answer = React.createElement(RatingNumbers, {\n            content: content,\n            change: this.onAnswerChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          });\n        } else answer = React.createElement(Rating, {\n          content: content,\n          change: this.onAnswerChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        });\n\n        break;\n\n      case Qtype.SLIDER:\n        info.type = Atype.ANSWER_SINGLE_NUMBER_VALUE;\n        answer = React.createElement(Slider, {\n          content: content,\n          change: this.onAnswerChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        });\n        break;\n\n      default:\n        info.type = Atype.ANSWER_TEXT;\n        answer = React.createElement(LeftAlign, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(ShortText, {\n          content: content,\n          change: this.onAnswerChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styleClass.QuestionContainer + \" question-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styleClass.QuestionTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, title)), React.createElement(\"div\", {\n      className: styleClass.Answer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, answer)));\n  }\n\n}\n\nexport default connect(null, {\n  addquestion\n})(SurveyPage);","map":{"version":3,"sources":["/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/Components/SurveyAnswersList/SurveyFill_Item/SurveyFill_item.jsx"],"names":["React","Component","CheckBox","ShortText","Paragraph","Range","Rating","Slider","Dropdown","Qtype","Atype","connect","addquestion","RadioButton","styleClass","RatingNumbers","LeftAlign","SurveyPage","constructor","props","onAnswerChange","value","localState","info","content","survey_id","String","surveyId","questionId","id","type","answerObjectType","render","title","answer","CHECKBOX","ANSWER_MULTIPLE_CHOICE","TEXT","ANSWER_TEXT","RADIO_GROUP","console","log","DROPDOWN","PARAGRAPH","RANGE","ANSWER_RANGE","RATING","ANSWER_SINGLE_NUMBER_VALUE","ratingType","SLIDER","QuestionContainer","QuestionTitle","Answer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CheckBox from \"../answerTypes/multiplechoice\";\nimport ShortText from \"../answerTypes/shortText\";\nimport Paragraph from \"../answerTypes/paragraph\";\nimport Range from \"../answerTypes/range\";\nimport Rating from \"../answerTypes/rating\";\nimport Slider from \"../answerTypes/slider\";\nimport Dropdown from \"../answerTypes/dropdownmenu\";\nimport * as Qtype from \"../../Question/QuestionTypes\";\nimport * as Atype from \"../../../store/actions/types\";\nimport { connect } from \"react-redux\";\nimport { addquestion } from \"../../../store/actions/answersAction\";\nimport RadioButton from \"../answerTypes/radioButton\";\nimport styleClass from \"./SurveyFll_item.module.css\";\nimport \"./style.css\";\nimport RatingNumbers from \"../answerTypes/ratingNumbers\";\nimport LeftAlign from \"../../UI/LeftAlign/LeftAlign\";\n/************************ */\n/*single question to fill */\n/************************ */\nclass SurveyPage extends Component {\n\n    constructor(props) {\n      \n        super(props);\n        this.localState = {\n            survey_id: String(this.props.surveyId),\n\n            info: {\n                questionId: this.props.id,\n              type: this.props.answerObjectType,\n                content: {}\n            }\n        }\n    }\n    onAnswerChange = value => {\n      \n    this.localState.info.content = value;\n    //console.log('value',value)\n    this.props.addquestion(this.localState);\n  };\n  render() {\n    const { answerObjectType, title,content } = this.props;\n    let answer = null;\n    let info = this.localState.info;\n    switch (answerObjectType) {\n      case Qtype.CHECKBOX: {\n        info.type = Atype.ANSWER_MULTIPLE_CHOICE;\n        //      console.log('type', this.localState.type)\n        answer = <LeftAlign><CheckBox content={content} change={this.onAnswerChange} /></LeftAlign>;\n        break;\n      }\n      case Qtype.TEXT: {\n        info.type = Atype.ANSWER_TEXT;\n        answer = <LeftAlign><ShortText content={content} change={this.onAnswerChange} /></LeftAlign>;\n        break;\n      }\n      case Qtype.RADIO_GROUP:\n        console.log(content)\n        info.type = Atype.ANSWER_MULTIPLE_CHOICE;\n        answer = <LeftAlign><RadioButton content={content} change={this.onAnswerChange} /></LeftAlign>;\n        break;\n\n      case Qtype.DROPDOWN:\n        info.type = Atype.ANSWER_MULTIPLE_CHOICE;\n        answer = <Dropdown content={content} change={this.onAnswerChange} />;\n        break;\n      case Qtype.PARAGRAPH: {\n        info.type = Atype.ANSWER_TEXT;\n\n        answer = <LeftAlign><Paragraph content={content} change={this.onAnswerChange} /></LeftAlign>;\n        break;\n      }\n      case Qtype.RANGE:\n        info.type = Atype.ANSWER_RANGE;\n        answer = <Range content={content} change={this.onAnswerChange} />;\n        break;\n      case Qtype.RATING:\n        info.type = Atype.ANSWER_SINGLE_NUMBER_VALUE;\n        if (content.ratingType === \"RATING_NUMBERS\"){\n            console.log(content)\n          answer = (\n            <RatingNumbers content={content} change={this.onAnswerChange} />\n            );\n          }\n        else answer = <Rating content={content} change={this.onAnswerChange} />;\n        break;\n      case Qtype.SLIDER:\n        info.type = Atype.ANSWER_SINGLE_NUMBER_VALUE;\n        answer = <Slider content={content} change={this.onAnswerChange} />;\n        break;\n      default:\n        info.type = Atype.ANSWER_TEXT;\n\n        answer = <LeftAlign><ShortText content={content} change={this.onAnswerChange} /></LeftAlign>;\n    }\n    return (\n      <div className=\"section\">\n        <div className={styleClass.QuestionContainer + \" question-container\"}>\n          <div className={styleClass.QuestionTitle}>\n            <h3>{title}</h3>\n          </div>\n          <div className={styleClass.Answer}>{answer}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { addquestion }\n)(SurveyPage);\n"]},"metadata":{},"sourceType":"module"}