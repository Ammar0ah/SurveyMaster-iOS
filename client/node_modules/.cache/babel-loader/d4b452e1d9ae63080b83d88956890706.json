{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _omit2 = require('lodash/omit');\n\nvar _omit3 = _interopRequireDefault(_omit2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n/**\n * Returns an object consisting of props beyond the scope of the Component.\n * Useful for getting and spreading unknown props from the user.\n * @param {function} Component A function or ReactClass.\n * @param {object} props A ReactElement props object\n * @returns {{}} A shallow copy of the prop object\n */\n\n\nvar getUnhandledProps = function getUnhandledProps(Component, props) {\n  var omitProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  /**\n   * Note that `handledProps` are generated automatically during\n   * build with `babel-plugin-transform-react-flow-handled-props`\n   */\n\n  var _Component$handledPro = Component.handledProps,\n      handledProps = _Component$handledPro === undefined ? [] : _Component$handledPro;\n  return (0, _omit3.default)(props, [].concat(_toConsumableArray(handledProps), _toConsumableArray(omitProps)));\n};\n\nexports.default = getUnhandledProps;","map":null,"metadata":{},"sourceType":"script"}