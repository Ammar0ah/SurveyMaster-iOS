{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _isArray2 = _interopRequireDefault(require(\"lodash/isArray\"));\n\nvar _isNumber2 = _interopRequireDefault(require(\"lodash/isNumber\"));\n\nvar _isString2 = _interopRequireDefault(require(\"lodash/isString\"));\n\nvar _isUndefined2 = _interopRequireDefault(require(\"lodash/isUndefined\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _domLib = require(\"dom-lib\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _utils = require(\"rsuite-utils/lib/utils\");\n\nvar _utils2 = require(\"../utils\");\n\nvar _DropdownMenuGroup = _interopRequireDefault(require(\"./DropdownMenuGroup\"));\n\nvar DropdownMenu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(DropdownMenu, _React$Component);\n\n  function DropdownMenu() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"menuItems\", {});\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"menuBodyContainer\", {});\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"bindMenuBodyContainerRef\", function (ref) {\n      _this.menuBodyContainer = ref;\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"addPrefix\", function (name) {\n      return (0, _utils2.prefix)(_this.props.classPrefix)(name);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleSelect\", function (item, value, event, checked) {\n      var onSelect = _this.props.onSelect;\n      onSelect && onSelect(value, item, event, checked);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"bindMenuItems\", function (disabled, key, ref) {\n      if (ref && !disabled) {\n        _this.menuItems[key] = ref;\n      }\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"getItemData\", function (itemData) {\n      return itemData;\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"createMenuItems\", function (items, groupId) {\n      if (items === void 0) {\n        items = [];\n      }\n\n      if (groupId === void 0) {\n        groupId = 0;\n      }\n\n      var _this$props = _this.props,\n          activeItemValues = _this$props.activeItemValues,\n          focusItemValue = _this$props.focusItemValue,\n          valueKey = _this$props.valueKey,\n          labelKey = _this$props.labelKey,\n          renderMenuItem = _this$props.renderMenuItem,\n          renderMenuGroup = _this$props.renderMenuGroup,\n          onGroupTitleClick = _this$props.onGroupTitleClick,\n          disabledItemValues = _this$props.disabledItemValues,\n          group = _this$props.group,\n          dropdownMenuItemClassPrefix = _this$props.dropdownMenuItemClassPrefix,\n          DropdownMenuItem = _this$props.dropdownMenuItemComponentClass;\n      var nextItems = items.map(function (item, index) {\n        var value = item[valueKey];\n        var label = item[labelKey];\n\n        if ((0, _isUndefined2.default)(label) && (0, _isUndefined2.default)(item.groupTitle)) {\n          throw Error(\"labelKey \\\"\" + labelKey + \"\\\" is not defined in \\\"data\\\" : \" + index);\n        } // Use `value` in keys when If `value` is string or number\n\n\n        var onlyKey = (0, _isString2.default)(value) || (0, _isNumber2.default)(value) ? value : index;\n        /**\n         * Render <DropdownMenuGroup>\n         * when if `group` is enabled and `itme.children` is array\n         */\n\n        if (group && (0, _isArray2.default)(item.children)) {\n          return React.createElement(_DropdownMenuGroup.default, {\n            classPrefix: _this.addPrefix('group'),\n            key: onlyKey,\n            title: renderMenuGroup ? renderMenuGroup(item.groupTitle, item) : item.groupTitle,\n            onClick: onGroupTitleClick\n          }, _this.createMenuItems(item.children, onlyKey));\n        } else if ((0, _isUndefined2.default)(value) && !(0, _isArray2.default)(item.children)) {\n          throw Error(\"valueKey \\\"\" + valueKey + \"\\\" is not defined in \\\"data\\\" : \" + index + \" \");\n        }\n\n        var disabled = disabledItemValues.some(function (disabledValue) {\n          return (0, _utils.shallowEqual)(disabledValue, value);\n        });\n        return React.createElement(DropdownMenuItem, {\n          classPrefix: dropdownMenuItemClassPrefix,\n          getItemData: _this.getItemData.bind((0, _assertThisInitialized2.default)(_this), item),\n          key: groupId + \"-\" + onlyKey,\n          disabled: disabled,\n          active: !(0, _isUndefined2.default)(activeItemValues) && activeItemValues.some(function (v) {\n            return (0, _utils.shallowEqual)(v, value);\n          }),\n          focus: !(0, _isUndefined2.default)(focusItemValue) && (0, _utils.shallowEqual)(focusItemValue, value),\n          value: value,\n          ref: _this.bindMenuItems.bind((0, _assertThisInitialized2.default)(_this), disabled, groupId + \"-\" + onlyKey),\n          onSelect: _this.handleSelect.bind((0, _assertThisInitialized2.default)(_this), item)\n        }, renderMenuItem ? renderMenuItem(label, item) : label);\n      });\n      return nextItems;\n    });\n    return _this;\n  }\n\n  var _proto = DropdownMenu.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateScrollPoistion();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (!(0, _utils.shallowEqual)(prevProps.focusItemValue, this.props.focusItemValue)) {\n      this.updateScrollPoistion();\n    }\n  };\n\n  _proto.updateScrollPoistion = function updateScrollPoistion() {\n    var activeItem = this.menuBodyContainer.querySelector(\".\" + this.addPrefix('item-focus'));\n\n    if (!activeItem) {\n      activeItem = this.menuBodyContainer.querySelector(\".\" + this.addPrefix('item-active'));\n    }\n\n    if (!activeItem) {\n      return;\n    }\n\n    var position = (0, _domLib.getPosition)(activeItem, this.menuBodyContainer);\n    var sTop = (0, _domLib.scrollTop)(this.menuBodyContainer);\n    var sHeight = (0, _domLib.getHeight)(this.menuBodyContainer);\n\n    if (sTop > position.top) {\n      (0, _domLib.scrollTop)(this.menuBodyContainer, Math.max(0, position.top - 20));\n    } else if (position.top > sTop + sHeight) {\n      (0, _domLib.scrollTop)(this.menuBodyContainer, Math.max(0, position.top - sHeight + 32));\n    }\n  };\n\n  _proto.renderItems = function renderItems() {\n    var data = this.props.data;\n    this.menuItems = {};\n    return this.createMenuItems(data);\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        maxHeight = _this$props2.maxHeight,\n        className = _this$props2.className,\n        style = _this$props2.style,\n        rest = (0, _objectWithoutPropertiesLoose2.default)(_this$props2, [\"maxHeight\", \"className\", \"style\"]);\n    var classes = (0, _classnames.default)(this.addPrefix('items'), className);\n    var unhandled = (0, _utils2.getUnhandledProps)(DropdownMenu, rest);\n    var styles = (0, _extends2.default)({}, style, {\n      maxHeight: maxHeight\n    });\n    return React.createElement(\"div\", (0, _extends2.default)({}, unhandled, {\n      className: classes,\n      ref: this.bindMenuBodyContainerRef,\n      style: styles\n    }), React.createElement(\"ul\", null, this.renderItems()));\n  };\n\n  return DropdownMenu;\n}(React.Component);\n\n(0, _defineProperty2.default)(DropdownMenu, \"defaultProps\", {\n  data: [],\n  activeItemValues: [],\n  disabledItemValues: [],\n  maxHeight: 320,\n  valueKey: 'value',\n  labelKey: 'label'\n});\n(0, _defineProperty2.default)(DropdownMenu, \"handledProps\", [\"activeItemValues\", \"className\", \"classPrefix\", \"data\", \"disabledItemValues\", \"dropdownMenuItemClassPrefix\", \"dropdownMenuItemComponentClass\", \"focusItemValue\", \"group\", \"labelKey\", \"maxHeight\", \"onGroupTitleClick\", \"onSelect\", \"renderMenuGroup\", \"renderMenuItem\", \"style\", \"valueKey\"]);\nvar _default = DropdownMenu;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}