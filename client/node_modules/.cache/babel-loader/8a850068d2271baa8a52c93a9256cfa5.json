{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = ajaxUpload;\n\nfunction getResponse(xhr) {\n  var text = xhr.responseText || xhr.response;\n\n  if (!text) {\n    return text;\n  }\n\n  try {\n    return JSON.parse(text);\n  } catch (e) {\n    return text;\n  }\n}\n\nfunction ajaxUpload(options) {\n  var name = options.name,\n      timeout = options.timeout,\n      _options$headers = options.headers,\n      headers = _options$headers === void 0 ? {} : _options$headers,\n      _options$data = options.data,\n      data = _options$data === void 0 ? {} : _options$data,\n      onError = options.onError,\n      onSuccess = options.onSuccess,\n      onProgress = options.onProgress,\n      file = options.file,\n      url = options.url,\n      withCredentials = options.withCredentials;\n  var xhr = new XMLHttpRequest();\n  var formData = new FormData();\n  formData.append(name, file, file.name);\n  xhr.open('POST', url, true);\n  Object.keys(data).forEach(function (key) {\n    return formData.append(key, data[key]);\n  });\n  Object.keys(headers).forEach(function (key) {\n    if (headers[key] !== null) {\n      xhr.setRequestHeader(key, headers[key]);\n    }\n  });\n\n  if (headers['X-Requested-With'] !== null) {\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n  }\n\n  if (timeout) {\n    xhr.timeout = timeout;\n\n    xhr.ontimeout = function (event) {\n      onError({\n        type: 'timeout'\n      }, event);\n    };\n  }\n\n  if (withCredentials && 'withCredentials' in xhr) {\n    xhr.withCredentials = true;\n  }\n\n  xhr.onload = function (event) {\n    var resp = getResponse(xhr);\n\n    if (xhr.status < 200 || xhr.status >= 300) {\n      onError({\n        type: 'server_error',\n        response: resp\n      }, event);\n      return;\n    }\n\n    onSuccess(resp, event);\n  };\n\n  if (xhr.upload) {\n    xhr.upload.onprogress = function (event) {\n      var percent = 0;\n\n      if (event.lengthComputable) {\n        percent = event.loaded / event.total * 100;\n      }\n\n      onProgress(percent, event);\n    };\n  }\n\n  xhr.onerror = function (event) {\n    onError({\n      type: 'xhr_error'\n    }, event);\n  };\n\n  xhr.send(formData);\n  return xhr;\n}","map":null,"metadata":{},"sourceType":"script"}