{"ast":null,"code":"import _objectSpread from \"/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actions from \"../actions/types\";\nimport * as Qtypes from \"../../Components/Question/QuestionTypes\";\nconst initialState = {\n  title: \"newSurvey\",\n  pages: [{\n    questions: []\n  }]\n};\n\nconst reducer = (state = initialState, action) => {\n  let newPages = [...state.pages];\n\n  switch (action.type) {\n    case actions.ADD_QUESTION:\n      const newQuestion = {\n        type: action.Qtype,\n        title: \"Untitled Question\",\n        content: {\n          choices: [\"Option 1\"],\n          min: \"0\",\n          max: \"0\",\n          step: \"0\",\n          defaultValue: \"0\"\n        }\n      };\n      newPages[0].questions.push(newQuestion);\n      break;\n\n    case actions.CHANGE_SURVEY_TITLE:\n      return _objectSpread({}, state, {\n        title: action.val\n      });\n\n    case actions.DELETE_QUESTION:\n      newPages[0].questions = newPages[0].questions.filter((_, index) => index !== action.index);\n      break;\n\n    case actions.CHANGE_QUESTION_TITLE:\n      newPages[0].questions[action.index].title = action.val;\n      break;\n\n    case actions.CHANGE_QUESTION_TYPE:\n      newPages[0].questions[action.index].type = action.val;\n      break;\n\n    case actions.CHANGE_CHOISE_LABEL:\n      newPages[0].questions[action.index].content.choices[action.choiceIndex] = action.val;\n      break;\n\n    case actions.ADD_CHOICE:\n      newPages[0].questions[action.index].content.choices.push(\"Option \" + (newPages[0].questions[action.index].content.choices.length + 1));\n      break;\n\n    case actions.DELETE_CHOICE:\n      const newChoices = newPages[0].questions[action.index].content.choices.filter((_, index) => index !== action.choiceIndex);\n      newPages[0].questions[action.index].content.choices = newChoices;\n      break;\n\n    case actions.CHANGE_LINEAR_CONTENT:\n      switch (action.content) {\n        case actions.CHANGE_MIN_VALUE:\n          newPages[0].questions[action.index].content.min = action.val;\n          break;\n\n        case actions.CHANGE_MAX_VALUE:\n          newPages[0].questions[action.index].content.max = action.val;\n          break;\n\n        case actions.CHANGE_STEP_VALUE:\n          newPages[0].questions[action.index].content.step = action.val;\n          break;\n\n        case actions.CHANGE_DEFAULT_VALUE:\n          newPages[0].questions[action.index].content.defaultValue = action.val;\n          break;\n\n        default:\n          break;\n      }\n\n      break;\n\n    default:\n      break;\n  }\n\n  return _objectSpread({}, state, {\n    pages: newPages\n  });\n}; // const handleContentOfType = Question => {\n//   switch (Question.type) {\n//     case Qtypes.TEXT:\n//       Question.content = {};\n//       return;\n//     case Qtypes.RADIO_GROUP:\n//     case Qtypes.CHECKBOX:\n//     case Qtypes.DROPDOWN:\n//       Question.content = {\n//         choices: [\"Option 1\"]\n//       };\n//       return;\n//     default:\n//       return;\n//   }\n// };\n\n\nexport default reducer;","map":{"version":3,"sources":["/Users/ammar0ah/Desktop/SurveyMaster/SurveyMaster/client/src/store/reducers/createSurveyReducer.js"],"names":["actions","Qtypes","initialState","title","pages","questions","reducer","state","action","newPages","type","ADD_QUESTION","newQuestion","Qtype","content","choices","min","max","step","defaultValue","push","CHANGE_SURVEY_TITLE","val","DELETE_QUESTION","filter","_","index","CHANGE_QUESTION_TITLE","CHANGE_QUESTION_TYPE","CHANGE_CHOISE_LABEL","choiceIndex","ADD_CHOICE","length","DELETE_CHOICE","newChoices","CHANGE_LINEAR_CONTENT","CHANGE_MIN_VALUE","CHANGE_MAX_VALUE","CHANGE_STEP_VALUE","CHANGE_DEFAULT_VALUE"],"mappings":"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","sourcesContent":["import * as actions from \"../actions/types\";\nimport * as Qtypes from \"../../Components/Question/QuestionTypes\";\nconst initialState = {\n  title: \"newSurvey\",\n  pages: [\n    {\n      questions: []\n    }\n  ]\n};\nconst reducer = (state = initialState, action) => {\n  let newPages = [...state.pages];\n  switch (action.type) {\n    case actions.ADD_QUESTION:\n      const newQuestion = {\n        type: action.Qtype,\n        title: \"Untitled Question\",\n        content: {\n          choices: [\"Option 1\"],\n          min: \"0\",\n          max: \"0\",\n          step: \"0\",\n          defaultValue: \"0\"\n        }\n      };\n      newPages[0].questions.push(newQuestion);\n      break;\n    case actions.CHANGE_SURVEY_TITLE:\n      return { \n        ...state,\n        title: action.val\n      }\n    case actions.DELETE_QUESTION:\n      newPages[0].questions = newPages[0].questions.filter(\n        (_, index) => index !== action.index\n      );\n      break;\n    case actions.CHANGE_QUESTION_TITLE:\n      newPages[0].questions[action.index].title = action.val;\n      break;\n    case actions.CHANGE_QUESTION_TYPE:\n      newPages[0].questions[action.index].type = action.val;\n      break;\n    case actions.CHANGE_CHOISE_LABEL:\n      newPages[0].questions[action.index].content.choices[action.choiceIndex] =\n        action.val;\n      break;\n    case actions.ADD_CHOICE:\n      newPages[0].questions[action.index].content.choices.push(\n        \"Option \" +\n          (newPages[0].questions[action.index].content.choices.length + 1)\n      );\n      break;\n    case actions.DELETE_CHOICE:\n      const newChoices = newPages[0].questions[\n        action.index\n      ].content.choices.filter((_, index) => index !== action.choiceIndex);\n      newPages[0].questions[action.index].content.choices = newChoices;\n      break;\n    case actions.CHANGE_LINEAR_CONTENT:\n      switch (action.content) {\n        case actions.CHANGE_MIN_VALUE:\n          newPages[0].questions[action.index].content.min = action.val;\n          break;\n        case actions.CHANGE_MAX_VALUE:\n          newPages[0].questions[action.index].content.max = action.val;\n          break;\n        case actions.CHANGE_STEP_VALUE:\n          newPages[0].questions[action.index].content.step = action.val;\n          break;\n        case actions.CHANGE_DEFAULT_VALUE:\n          newPages[0].questions[action.index].content.defaultValue = action.val;\n          break;\n        default:\n          break;\n      }\n      break;\n    default:\n      break;\n  }\n  return {\n    ...state,\n    pages: newPages\n  };\n};\n// const handleContentOfType = Question => {\n//   switch (Question.type) {\n//     case Qtypes.TEXT:\n//       Question.content = {};\n//       return;\n//     case Qtypes.RADIO_GROUP:\n//     case Qtypes.CHECKBOX:\n//     case Qtypes.DROPDOWN:\n//       Question.content = {\n//         choices: [\"Option 1\"]\n//       };\n//       return;\n//     default:\n//       return;\n//   }\n// };\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}