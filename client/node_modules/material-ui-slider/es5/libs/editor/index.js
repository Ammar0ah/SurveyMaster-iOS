"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _codemirror = _interopRequireDefault(require("codemirror"));

require("codemirror/mode/jsx/jsx");

require("codemirror/keymap/sublime");

require("codemirror/addon/comment/comment");

require("codemirror/lib/codemirror.css");

require("./light.css");

require("./dark.css");

var Editor =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2.default)(Editor, _React$Component);

  function Editor() {
    (0, _classCallCheck2.default)(this, Editor);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Editor).apply(this, arguments));
  }

  (0, _createClass2.default)(Editor, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this = this;

      var _this$props = this.props,
          onChange = _this$props.onChange,
          value = _this$props.value,
          mode = _this$props.mode,
          theme = _this$props.theme,
          lineNumbers = _this$props.lineNumbers,
          dragDrop = _this$props.dragDrop;
      this.cm = (0, _codemirror.default)(this.editor, {
        mode: mode,
        theme: theme || 'light',
        keyMap: 'sublime',
        viewportMargin: Infinity,
        lineNumbers: lineNumbers,
        dragDrop: dragDrop
      });
      this.cm.setValue(value);
      this.cm.on('changes', function (cm) {
        if (onChange) {
          clearTimeout(_this.timeout);
          _this.timeout = setTimeout(function () {
            onChange(cm.getValue());
          }, 300);
        }
      });
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      for (var key in nextProps) {
        if (nextProps.hasOwnProperty(key)) {
          var prop = nextProps[key];

          if (prop !== this.props[key]) {
            this.cm.setOption(key, prop);
          }
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      return _react.default.createElement("div", {
        className: "editor",
        ref: function ref(div) {
          return _this2.editor = div;
        }
      });
    }
  }]);
  return Editor;
}(_react.default.Component);

Editor.defaultProps = {
  mode: 'jsx',
  theme: 'light',
  lineNumbers: false,
  dragDrop: false
};
var _default = Editor;
exports.default = _default;